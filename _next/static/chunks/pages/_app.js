_N_E =
(window["webpackJsonp_N_E"] = window["webpackJsonp_N_E"] || []).push([["pages/_app"],{

/***/ "./node_modules/@babel/runtime/helpers/arrayLikeToArray.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/arrayLikeToArray.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}

module.exports = _arrayLikeToArray;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/arrayWithHoles.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/arrayWithHoles.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

module.exports = _arrayWithHoles;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/asyncToGenerator.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/asyncToGenerator.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }

  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}

function _asyncToGenerator(fn) {
  return function () {
    var self = this,
        args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);

      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }

      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }

      _next(undefined);
    });
  };
}

module.exports = _asyncToGenerator;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/classCallCheck.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/classCallCheck.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

module.exports = _classCallCheck;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/construct.js":
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/construct.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf */ "./node_modules/@babel/runtime/helpers/setPrototypeOf.js");

var isNativeReflectConstruct = __webpack_require__(/*! ./isNativeReflectConstruct */ "./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js");

function _construct(Parent, args, Class) {
  if (isNativeReflectConstruct()) {
    module.exports = _construct = Reflect.construct;
  } else {
    module.exports = _construct = function _construct(Parent, args, Class) {
      var a = [null];
      a.push.apply(a, args);
      var Constructor = Function.bind.apply(Parent, a);
      var instance = new Constructor();
      if (Class) setPrototypeOf(instance, Class.prototype);
      return instance;
    };
  }

  return _construct.apply(null, arguments);
}

module.exports = _construct;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/createClass.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/createClass.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

module.exports = _createClass;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _asyncToGenerator; });
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }

  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}

function _asyncToGenerator(fn) {
  return function () {
    var self = this,
        args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);

      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }

      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }

      _next(undefined);
    });
  };
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/defineProperty.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/defineProperty.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _defineProperty; });
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/extends.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/extends.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _extends; });
function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/interopRequireDefault.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

module.exports = _interopRequireDefault;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/interopRequireWildcard.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/interopRequireWildcard.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(/*! ../helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
    return {
      "default": obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj["default"] = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

module.exports = _interopRequireWildcard;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

module.exports = _isNativeReflectConstruct;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _iterableToArrayLimit(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

module.exports = _iterableToArrayLimit;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/nonIterableRest.js":
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/nonIterableRest.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

module.exports = _nonIterableRest;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/setPrototypeOf.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/setPrototypeOf.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _setPrototypeOf(o, p) {
  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

module.exports = _setPrototypeOf;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/slicedToArray.js":
/*!**************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/slicedToArray.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayWithHoles = __webpack_require__(/*! ./arrayWithHoles */ "./node_modules/@babel/runtime/helpers/arrayWithHoles.js");

var iterableToArrayLimit = __webpack_require__(/*! ./iterableToArrayLimit */ "./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js");

var unsupportedIterableToArray = __webpack_require__(/*! ./unsupportedIterableToArray */ "./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js");

var nonIterableRest = __webpack_require__(/*! ./nonIterableRest */ "./node_modules/@babel/runtime/helpers/nonIterableRest.js");

function _slicedToArray(arr, i) {
  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();
}

module.exports = _slicedToArray;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/typeof.js":
/*!*******************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/typeof.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    module.exports = _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    module.exports = _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

module.exports = _typeof;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeToArray = __webpack_require__(/*! ./arrayLikeToArray */ "./node_modules/@babel/runtime/helpers/arrayLikeToArray.js");

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);
}

module.exports = _unsupportedIterableToArray;

/***/ }),

/***/ "./node_modules/@babel/runtime/regenerator/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/regenerator/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! regenerator-runtime */ "./node_modules/regenerator-runtime/runtime.js");


/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/index.js?!./node_modules/resolve-url-loader/index.js?!./node_modules/sass-loader/dist/cjs.js?!./src/styles/styles.scss":
/*!************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js??ref--5-oneOf-6-1!./node_modules/next/dist/compiled/postcss-loader??__nextjs_postcss!./node_modules/resolve-url-loader??ref--5-oneOf-6-3!./node_modules/sass-loader/dist/cjs.js??ref--5-oneOf-6-4!./src/styles/styles.scss ***!
  \************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
exports = ___CSS_LOADER_API_IMPORT___(true);
exports.push([module.i, "@import url(https://fonts.googleapis.com/css2?family=Poppins:wght@600&display=swap);"]);
// Module
exports.push([module.i, ":root {\n  --color-gradient: linear-gradient(to right, #ff2400, #e81d1d, #e8b71d, #e3e81d, #1de840, #1ddde8, #2b1de8, #dd00f3,\r\n            #dd00f3)\r\n; }\n\n@keyframes make_drop_shadow {\n  from { }\n  to {\n    filter: drop-shadow(0 0 5px darkgray); } }\n\n@keyframes start-anim {\n  from {\n    transform: translateY(-100px);\n    opacity: 0; }\n  to {\n    transform: translateY(0);\n    opacity: 1; } }\n\n@keyframes fixed-top-anim {\n  from {\n    transform: translateY(-100px);\n    opacity: 0; }\n  to {\n    transform: translateY(0);\n    opacity: 1; } }\n\n/* scroll progress */\n@keyframes animateprogressbar {\n  0%,\n  100% {\n    filter: hue-rotate(0deg); }\n  50% {\n    filter: hue-rotate(360deg); } }\n\n@keyframes animatescrollbar {\n  0%,\n  100% {\n    filter: hue-rotate(0deg); }\n  50% {\n    filter: hue-rotate(360deg); } }\n\n@keyframes hoverbtn1 {\n  from {\n    color: #fff;\n    /* box-shadow: 0 10px 30px rgba(255, 0, 0, .3); */ }\n  to {\n    color: #000;\n    border: solid 2px transparent;\n    background-image: linear-gradient(rgba(255, 255, 255, 0), rgba(255, 255, 255, 0)), linear-gradient(to right, red, black);\n    background-origin: border-box;\n    background-clip: content-box, border-box;\n    box-shadow: 0px 1000px 1px #fff inset; } }\n\n@keyframes hoverbtn2 {\n  from {\n    color: #000;\n    /* box-shadow: 0 0px 0px rgba(255, 0, 0, .3); */ }\n  to {\n    color: #fff;\n    box-shadow: 0px 0px 0px #fff; } }\n\n@keyframes hoverbtn3 {\n  from {\n    color: #fff;\n    /* box-shadow: 0 10px 30px rgba(255, 0, 0, .3); */ }\n  to {\n    color: #000;\n    border: solid 2px transparent;\n    background-image: linear-gradient(rgba(255, 255, 255, 0), rgba(255, 255, 255, 0)), linear-gradient(to right, red, black);\n    background-origin: border-box;\n    background-clip: content-box, border-box;\n    box-shadow: 0px 1000px 1px #fff inset; } }\n\n@keyframes zoomin-anim {\n  from {\n    font-size: 80px; }\n  to {\n    font-size: 100px; } }\n\n@keyframes zoomin-anim2 {\n  from {\n    width: 80px;\n    height: 80px; }\n  to {\n    width: 100px;\n    height: 100px; } }\n\n@keyframes hoveranimnew {\n  from {\n    color: red; }\n  to {\n    color: #b81515; } }\n\n* {\n  margin: 0;\n  padding: 0;\n  -moz-box-sizing: border-box;\n       box-sizing: border-box;\n  font-family: 'Poppins';\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none; }\n\n.line {\n  width: 100%;\n  height: 100%;\n  display: grid;\n  place-items: center; }\n\n.back-btn-arrow {\n  font-size: 5rem;\n  background: linear-gradient(to right, red, black);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent; }\n  .back-btn-arrow:hover {\n    animation: make_drop_shadow .3s forwards; }\n\n.Myresume {\n  display: grid;\n  place-items: center; }\n\n.App {\n  text-align: center; }\n\n.box-content-nav {\n  display: -moz-box;\n  display: flex;\n  overflow: hidden; }\n\n.my-nav {\n  width: 100%;\n  height: 70px;\n  background: white;\n  display: -moz-box;\n  display: flex;\n  -moz-box-pack: start;\n       justify-content: flex-start;\n  animation: start-anim .5s forwards;\n  position: fixed;\n  top: 0; }\n  .my-nav .mylogo {\n    display: -moz-box;\n    display: flex;\n    -moz-box-orient: horizontal;\n    -moz-box-direction: normal;\n         flex-direction: row;\n    padding: 0 35px; }\n    .my-nav .mylogo img {\n      padding: 5px 0;\n      width: 80px;\n      height: 80px; }\n    .my-nav .mylogo #mytext {\n      font-weight: bolder;\n      position: relative;\n      top: 20px;\n      background: linear-gradient(to right, red, black);\n      -webkit-background-clip: text;\n      -webkit-text-fill-color: transparent; }\n  .my-nav .my-list-box {\n    display: -moz-box;\n    display: flex;\n    -moz-box-orient: horizontal;\n    -moz-box-direction: normal;\n         flex-direction: row;\n    padding-left: calc(100vw - 1000px); }\n\n.fixed-top {\n  position: fixed;\n  z-index: 1000;\n  box-shadow: 0 5px 3px rgba(0, 0, 0, 0.5);\n  top: 0;\n  height: 70px !important;\n  animation: fixed-top-anim .5s forwards; }\n\n.has-focus {\n  background: linear-gradient(to right, red, black);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent; }\n\n.mynav-list {\n  list-style-type: none;\n  display: -moz-box;\n  display: flex;\n  padding: 10px;\n  position: relative;\n  top: 15px;\n  text-transform: uppercase;\n  font-weight: bolder; }\n  .mynav-list li {\n    padding: 0 10px;\n    margin-right: 35px;\n    cursor: pointer; }\n\n.myprogressbar {\n  padding: 0;\n  margin: 0; }\n\n#progressbar {\n  z-index: 99;\n  position: fixed;\n  top: 70px;\n  left: 0;\n  height: 5px;\n  border-top-right-radius: 15px;\n  border-bottom-right-radius: 15px;\n  border-top-left-radius: 15px;\n  border-bottom-left-radius: 15px;\n  background: linear-gradient(to top, #008aff, #00ffe7);\n  animation: animateprogressbar 5s linear infinite; }\n  #progressbar::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(to top, #008aff, #00ffe7);\n    filter: blur(10px); }\n  #progressbar::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(to top, #008aff, #00ffe7);\n    filter: blur(10px);\n    filter: blur(10px); }\n\n#percent {\n  z-index: 99;\n  position: absolute;\n  top: 63px;\n  left: 0;\n  background: linear-gradient(to right, red, black);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  font-size: .8em;\n  display: none;\n  font-weight: bold; }\n\n::-webkit-scrollbar {\n  width: 5px;\n  border: 13px;\n  background-color: #f1f1f1; }\n  ::-webkit-scrollbar:hover {\n    width: 10px; }\n\n::-webkit-scrollbar-thumb {\n  background: red;\n  border-radius: 50px;\n  cursor: pointer; }\n\n.myheader {\n  width: 100%;\n  height: 800px;\n  padding: 0 20%;\n  text-transform: uppercase;\n  padding-top: 10%; }\n  .myheader .content-header {\n    height: 80%;\n    position: relative; }\n    .myheader .content-header .first-header-text {\n      position: absolute;\n      height: 35%;\n      right: 0;\n      z-index: 2; }\n      .myheader .content-header .first-header-text h1 {\n        font-weight: bold;\n        font-size: 40px;\n        margin-right: 20px; }\n      .myheader .content-header .first-header-text #first-text::after {\n        content: '';\n        position: absolute;\n        margin-left: 40px;\n        width: 450px;\n        height: 2px;\n        top: 18%;\n        background: linear-gradient(to right, red, black); }\n      .myheader .content-header .first-header-text #sub-text {\n        font-weight: bold;\n        font-size: 70px;\n        background: linear-gradient(to right, red, black);\n        -webkit-background-clip: text;\n        -webkit-text-fill-color: transparent; }\n      .myheader .content-header .first-header-text #sub-text2 {\n        font-weight: bold;\n        font-size: 40px;\n        margin-right: 20px; }\n    .myheader .content-header .my-btn-box {\n      display: -moz-box;\n      display: flex;\n      -moz-box-pack: start;\n           justify-content: flex-start;\n      position: absolute;\n      top: 50%;\n      right: 16%;\n      z-index: 3; }\n      .myheader .content-header .my-btn-box .my-cus-btn1 {\n        border-radius: 5px;\n        font-size: 14px;\n        padding: 1rem 2.5rem;\n        color: white;\n        text-transform: uppercase;\n        font-weight: bold;\n        border: solid 2px transparent;\n        background-image: linear-gradient(rgba(255, 255, 255, 0), rgba(255, 255, 255, 0)), linear-gradient(to right, red, black);\n        background-origin: border-box;\n        background-clip: content-box, border-box;\n        text-decoration: none; }\n        .myheader .content-header .my-btn-box .my-cus-btn1:hover {\n          animation: hoverbtn1 .5s forwards; }\n      .myheader .content-header .my-btn-box .my-cus-btn2 {\n        margin-left: 20px;\n        border-radius: 5px;\n        font-size: 14px;\n        padding: 1rem 2.5rem;\n        color: black;\n        text-transform: uppercase;\n        font-weight: bold;\n        border: solid 2px transparent;\n        background-image: linear-gradient(rgba(255, 255, 255, 0), rgba(255, 255, 255, 0)), linear-gradient(to right, red, black);\n        background-origin: border-box;\n        background-clip: content-box, border-box;\n        text-decoration: none;\n        box-shadow: 0px 1000px 1px #fff inset;\n        cursor: pointer; }\n        .myheader .content-header .my-btn-box .my-cus-btn2:hover {\n          animation: hoverbtn2 .5s forwards; }\n    .myheader .content-header .header-image {\n      position: absolute;\n      top: -30%;\n      left: -10%;\n      transform: scalex(-1); }\n\n.mybody {\n  margin-top: 5%;\n  width: 99vw;\n  height: auto;\n  display: -moz-box;\n  display: flex;\n  -moz-box-orient: vertical;\n  -moz-box-direction: normal;\n       flex-direction: column; }\n  .mybody .myfooter {\n    margin: 200px 50px 20px 50px;\n    padding: 10px 0 0 0;\n    display: -moz-box;\n    display: flex;\n    -moz-box-pack: center;\n         justify-content: center;\n    font-weight: bold;\n    font-size: 12px;\n    color: rgba(0, 0, 0, 0.5);\n    border-top: solid 1px rgba(0, 0, 0, 0.2);\n    text-align: center; }\n  .mybody .aboutme {\n    position: relative;\n    top: 10%;\n    right: 10%; }\n    .mybody .aboutme .aboutme-img {\n      position: absolute;\n      top: 50%;\n      right: 10%; }\n    .mybody .aboutme .aboutme-content {\n      position: absolute;\n      left: 20%;\n      padding-left: 5%;\n      padding-top: 5%; }\n      .mybody .aboutme .aboutme-content h1 {\n        font-weight: bold;\n        font-size: 36px; }\n      .mybody .aboutme .aboutme-content .my-cus-btn3 {\n        margin-top: 20px;\n        border-radius: 5px;\n        font-size: 14px;\n        padding: 1rem 3rem;\n        color: white;\n        text-transform: uppercase;\n        font-weight: bold;\n        border: solid 2px transparent;\n        background-image: linear-gradient(rgba(255, 255, 255, 0), rgba(255, 255, 255, 0)), linear-gradient(to right, red, black);\n        background-origin: border-box;\n        background-clip: content-box, border-box; }\n        .mybody .aboutme .aboutme-content .my-cus-btn3:hover {\n          animation: hoverbtn3 .5s forwards; }\n  .mybody .myskills {\n    position: relative;\n    margin-top: 600px;\n    width: 100%;\n    height: 500px;\n    text-align: center;\n    padding: 0 400px; }\n    .mybody .myskills h1 {\n      top: 0;\n      font-weight: bold;\n      font-size: 36px;\n      margin-top: 100px;\n      text-transform: uppercase; }\n      .mybody .myskills h1 i {\n        color: red; }\n      .mybody .myskills h1 span {\n        color: red; }\n    .mybody .myskills .card-zone {\n      display: -moz-box;\n      display: flex;\n      flex-wrap: wrap;\n      flex-shrink: 1;\n      -moz-box-pack: center;\n           justify-content: center;\n      margin-top: 100px; }\n    .mybody .myskills .card-skill {\n      width: 168px;\n      height: 98px;\n      -moz-box-flex: 0;\n           flex: 0 2 150px;\n      margin: 25px 50px;\n      font-size: 80px;\n      padding: 5px 0;\n      display: -moz-box;\n      display: flex;\n      -moz-box-pack: center;\n           justify-content: center; }\n      .mybody .myskills .card-skill .drop-shadow:hover {\n        animation: .3s make_drop_shadow forwards; }\n  .mybody .myprojects {\n    position: relative;\n    margin-top: 200px;\n    width: 100%;\n    height: 500px;\n    text-align: center;\n    padding: 0 200px; }\n    .mybody .myprojects h1 {\n      top: 0;\n      font-weight: bold;\n      font-size: 36px;\n      margin-top: 100px; }\n      .mybody .myprojects h1 i {\n        color: red; }\n      .mybody .myprojects h1 span {\n        color: red; }\n    .mybody .myprojects .card-zone {\n      display: -moz-box;\n      display: flex;\n      flex-wrap: wrap;\n      flex-shrink: 1;\n      -moz-box-pack: center;\n           justify-content: center;\n      margin-top: 100px; }\n      .mybody .myprojects .card-zone .card-project {\n        border: solid 1px rgba(0, 0, 0, 0.3);\n        width: 1450px;\n        height: 155px;\n        padding: 15px;\n        margin-bottom: 30px; }\n        .mybody .myprojects .card-zone .card-project:hover {\n          box-shadow: 0px 0px 5px red; }\n        .mybody .myprojects .card-zone .card-project h1 {\n          margin: 0;\n          color: red;\n          cursor: pointer; }\n          .mybody .myprojects .card-zone .card-project h1:hover {\n            animation: hoveranimnew .3s forwards; }\n        .mybody .myprojects .card-zone .card-project a {\n          text-decoration: none; }\n        .mybody .myprojects .card-zone .card-project .detail-box {\n          margin-top: 10px;\n          display: -moz-box;\n          display: flex;\n          -moz-box-orient: horizontal;\n          -moz-box-direction: normal;\n               flex-direction: row;\n          -moz-box-pack: center;\n               justify-content: center; }\n          .mybody .myprojects .card-zone .card-project .detail-box .detail-data-box {\n            color: white;\n            margin-right: 10px; }\n            .mybody .myprojects .card-zone .card-project .detail-box .detail-data-box .text-q-box {\n              background: rgba(0, 0, 0, 0.7);\n              padding: 0 5px;\n              border-top-left-radius: 3px;\n              border-bottom-left-radius: 3px; }\n            .mybody .myprojects .card-zone .card-project .detail-box .detail-data-box .text-a-box {\n              padding: 0 5px;\n              border-top-right-radius: 3px;\n              border-bottom-right-radius: 3px; }\n              .mybody .myprojects .card-zone .card-project .detail-box .detail-data-box .text-a-box.a1 {\n                background: #0dd80d; }\n              .mybody .myprojects .card-zone .card-project .detail-box .detail-data-box .text-a-box.a2 {\n                background: #036fc4; }\n              .mybody .myprojects .card-zone .card-project .detail-box .detail-data-box .text-a-box.a3 {\n                background: plum; }\n              .mybody .myprojects .card-zone .card-project .detail-box .detail-data-box .text-a-box.a4 {\n                background: green; }\n              .mybody .myprojects .card-zone .card-project .detail-box .detail-data-box .text-a-box.a5 {\n                background: #e75151; }\n  .mybody .mycontact {\n    position: relative;\n    margin-top: 400px;\n    width: 100%;\n    height: 500px;\n    text-align: center;\n    padding: 0 200px; }\n    .mybody .mycontact h3 {\n      top: 0;\n      font-weight: bold;\n      margin-top: 150px;\n      text-transform: uppercase; }\n    .mybody .mycontact h1 {\n      font-weight: bold;\n      font-size: 36px;\n      text-transform: uppercase; }\n      .mybody .mycontact h1 i {\n        color: red; }\n      .mybody .mycontact h1 span {\n        color: red; }\n    .mybody .mycontact .myproimg {\n      margin-top: 100px;\n      border-radius: 50%;\n      border: solid 3px red;\n      background: linear-gradient(to right, red, black);\n      width: 200px; }\n    .mybody .mycontact .mybodywork {\n      display: -moz-box;\n      display: flex;\n      -moz-box-pack: center;\n           justify-content: center;\n      -moz-box-align: center;\n           align-items: center;\n      min-height: 200px;\n      width: 100%; }\n      .mybody .mycontact .mybodywork ul {\n        position: relative;\n        display: -moz-box;\n        display: flex;\n        padding: 0; }\n        .mybody .mycontact .mybodywork ul li {\n          position: relative;\n          list-style: none; }\n          .mybody .mycontact .mybodywork ul li a {\n            position: relative;\n            width: 80px;\n            height: 80px;\n            display: -moz-box;\n            display: flex;\n            -moz-box-pack: center;\n                 justify-content: center;\n            -moz-box-align: center;\n                 align-items: center;\n            background: white;\n            margin: 0 10px;\n            text-decoration: none;\n            font-size: 30px;\n            border-radius: 50%;\n            color: #e2e2e2;\n            box-shadow: inset -1px -1px 2px rgba(0, 0, 0, 0.2), 2px 2px 5px rgba(0, 0, 0, 0.2);\n            transition: .5s; }\n            .mybody .mycontact .mybodywork ul li a:hover {\n              color: #999;\n              transform: translateY(-20px);\n              box-shadow: inset -1px -1px 2px rgba(0, 0, 0, 0.2), 2px 24px 10px rgba(0, 0, 0, 0.1); }\n            .mybody .mycontact .mybodywork ul li a:before {\n              content: '';\n              position: absolute;\n              top: 10px;\n              left: 10px;\n              right: 10px;\n              bottom: 10px;\n              border-radius: 50%;\n              border: 2px solid rgba(0, 0, 0, 0.1); }\n            .mybody .mycontact .mybodywork ul li a .fab {\n              color: #fff;\n              position: relative;\n              z-index: 2; }\n            .mybody .mycontact .mybodywork ul li a .fas {\n              color: #fff;\n              position: relative;\n              z-index: 2; }\n          .mybody .mycontact .mybodywork ul li:nth-child(1) a::before {\n            background: #ea4c89; }\n          .mybody .mycontact .mybodywork ul li:nth-child(2) a::before {\n            background: #000; }\n          .mybody .mycontact .mybodywork ul li:nth-child(3) a::before {\n            background: #1877f2; }\n          .mybody .mycontact .mybodywork ul li:nth-child(4) a::before {\n            background: #25d366; }\n\n@media only screen and (max-width: 1799px) {\n  .mybody {\n    margin-top: 5%;\n    width: 100%;\n    height: auto;\n    display: -moz-box;\n    display: flex;\n    -moz-box-orient: vertical;\n    -moz-box-direction: normal;\n         flex-direction: column; }\n    .mybody .myfooter {\n      width: 100%;\n      margin: 200px 50px 20px 50px;\n      padding: 10px 0 0 0;\n      display: -moz-box;\n      display: flex;\n      -moz-box-pack: center;\n           justify-content: center;\n      font-weight: bold;\n      font-size: 12px;\n      color: rgba(0, 0, 0, 0.5);\n      border-top: solid 1px rgba(0, 0, 0, 0.2);\n      text-align: center; }\n    .mybody .aboutme {\n      position: relative;\n      top: 10%;\n      right: calc(100vw - 95vw); }\n      .mybody .aboutme .aboutme-img {\n        right: calc(100vw - 100vw);\n        filter: blur(5px); }\n      .mybody .aboutme .aboutme-content {\n        z-index: 3; }\n    .mybody .myskills {\n      position: relative;\n      margin-top: 600px;\n      width: 100vw;\n      height: 500px;\n      text-align: center;\n      padding: 0 calc(100vw - 95vw); }\n      .mybody .myskills h1 {\n        top: 0;\n        font-weight: bold;\n        font-size: 36px;\n        margin-top: 100px;\n        text-transform: uppercase; }\n        .mybody .myskills h1 i {\n          color: red; }\n        .mybody .myskills h1 span {\n          color: red; }\n      .mybody .myskills .card-zone {\n        display: -moz-box;\n        display: flex; }\n      .mybody .myskills .card-skill {\n        width: 168px;\n        height: 98px;\n        -moz-box-flex: 0;\n             flex: 0 2 150px;\n        margin: 25px 50px;\n        font-size: 80px;\n        padding: 5px 0;\n        display: -moz-box;\n        display: flex;\n        -moz-box-pack: center;\n             justify-content: center;\n        -moz-box-flex: 1;\n             flex-grow: 1; }\n    .mybody .myprojects {\n      position: relative;\n      margin-top: 300px;\n      width: 100vw;\n      height: 100%;\n      padding: 0 calc(100vw - 95vw); }\n      .mybody .myprojects .card-zone .card-project {\n        border: solid 1px rgba(0, 0, 0, 0.3);\n        width: calc(100vw - 30vw);\n        height: 200px;\n        padding: 15px;\n        margin-bottom: 30px; }\n        .mybody .myprojects .card-zone .card-project:hover {\n          box-shadow: 0px 0px 5px red; }\n        .mybody .myprojects .card-zone .card-project h1 {\n          margin: 0;\n          color: red;\n          cursor: pointer; }\n          .mybody .myprojects .card-zone .card-project h1:hover {\n            animation: hoveranimnew .3s forwards; }\n        .mybody .myprojects .card-zone .card-project a {\n          text-decoration: none; }\n        .mybody .myprojects .card-zone .card-project .detail-box {\n          margin-top: 10px;\n          display: -moz-box;\n          display: flex;\n          flex-wrap: wrap;\n          -moz-box-flex: 1;\n               flex-grow: 1;\n          -moz-box-orient: horizontal;\n          -moz-box-direction: normal;\n               flex-direction: row;\n          -moz-box-pack: center;\n               justify-content: center; }\n    .mybody .mycontact {\n      position: relative;\n      margin-top: 200px;\n      width: 100%;\n      height: 500px;\n      text-align: center;\n      padding: 0 calc(100vw - 95vw); }\n      .mybody .mycontact h3 {\n        top: 0;\n        font-weight: bold;\n        margin-top: 150px;\n        text-transform: uppercase; }\n      .mybody .mycontact h1 i {\n        color: red; }\n      .mybody .mycontact h1 span {\n        color: red; }\n      .mybody .mycontact .myproimg {\n        margin-top: 100px;\n        border-radius: 50%;\n        border: solid 3px red;\n        background: linear-gradient(to right, red, black);\n        width: 200px; }\n      .mybody .mycontact .mybodywork {\n        display: -moz-box;\n        display: flex;\n        -moz-box-pack: center;\n             justify-content: center;\n        -moz-box-align: center;\n             align-items: center;\n        min-height: 200px;\n        width: 100%; } }\n\n@media only screen and (max-width: 1200px) {\n  .my-nav .mylogo {\n    padding: 0 0; }\n  .my-nav .my-list-box {\n    display: none; }\n  .myheader {\n    padding: 0 20%;\n    padding-top: 20%; }\n    .myheader .content-header .my-btn-box {\n      right: calc(100vw - 85vw); }\n    .myheader .content-header .header-image {\n      filter: blur(5px);\n      margin-left: calc(100vw - 90vw); }\n  .mybody {\n    margin-top: 5%;\n    width: 100%;\n    height: auto;\n    display: -moz-box;\n    display: flex;\n    -moz-box-orient: vertical;\n    -moz-box-direction: normal;\n         flex-direction: column; }\n    .mybody .myfooter {\n      width: 100%;\n      margin: 200px 50px 20px 50px;\n      padding: 10px 0 0 0;\n      display: -moz-box;\n      display: flex;\n      -moz-box-pack: center;\n           justify-content: center;\n      font-weight: bold;\n      font-size: 12px;\n      color: rgba(0, 0, 0, 0.5);\n      border-top: solid 1px rgba(0, 0, 0, 0.2);\n      text-align: center; }\n    .mybody .aboutme {\n      position: relative;\n      top: 10%;\n      right: calc(100vw - 95vw); }\n      .mybody .aboutme .aboutme-img {\n        right: calc(100vw - 100vw);\n        filter: blur(5px); }\n      .mybody .aboutme .aboutme-content {\n        z-index: 3; }\n    .mybody .myskills {\n      position: relative;\n      margin-top: 600px;\n      width: 100vw;\n      height: 500px;\n      text-align: center;\n      padding: 0 calc(100vw - 95vw); }\n      .mybody .myskills h1 {\n        top: 0;\n        font-weight: bold;\n        font-size: 36px;\n        margin-top: 100px;\n        text-transform: uppercase; }\n        .mybody .myskills h1 i {\n          color: red; }\n        .mybody .myskills h1 span {\n          color: red; }\n      .mybody .myskills .card-zone {\n        display: -moz-box;\n        display: flex; }\n      .mybody .myskills .card-skill {\n        width: 168px;\n        height: 98px;\n        -moz-box-flex: 0;\n             flex: 0 2 150px;\n        margin: 25px 50px;\n        font-size: 80px;\n        padding: 5px 0;\n        display: -moz-box;\n        display: flex;\n        -moz-box-pack: center;\n             justify-content: center;\n        -moz-box-flex: 1;\n             flex-grow: 1; }\n    .mybody .myprojects {\n      position: relative;\n      margin-top: 300px;\n      width: 100vw;\n      height: 100%;\n      padding: 0 calc(100vw - 95vw); }\n      .mybody .myprojects .card-zone .card-project {\n        border: solid 1px rgba(0, 0, 0, 0.3);\n        width: calc(100vw - 30vw);\n        height: 200px;\n        padding: 15px;\n        margin-bottom: 30px; }\n        .mybody .myprojects .card-zone .card-project:hover {\n          box-shadow: 0px 0px 5px red; }\n        .mybody .myprojects .card-zone .card-project h1 {\n          margin: 0;\n          color: red;\n          cursor: pointer; }\n          .mybody .myprojects .card-zone .card-project h1:hover {\n            animation: hoveranimnew .3s forwards; }\n        .mybody .myprojects .card-zone .card-project a {\n          text-decoration: none; }\n        .mybody .myprojects .card-zone .card-project .detail-box {\n          margin-top: 10px;\n          display: -moz-box;\n          display: flex;\n          flex-wrap: wrap;\n          -moz-box-flex: 1;\n               flex-grow: 1;\n          -moz-box-orient: horizontal;\n          -moz-box-direction: normal;\n               flex-direction: row;\n          -moz-box-pack: center;\n               justify-content: center; }\n    .mybody .mycontact {\n      position: relative;\n      margin-top: 200px;\n      width: 100%;\n      height: 500px;\n      text-align: center;\n      padding: 0 calc(100vw - 95vw); }\n      .mybody .mycontact h3 {\n        top: 0;\n        font-weight: bold;\n        margin-top: 150px;\n        text-transform: uppercase; }\n      .mybody .mycontact h1 i {\n        color: red; }\n      .mybody .mycontact h1 span {\n        color: red; }\n      .mybody .mycontact .myproimg {\n        margin-top: 100px;\n        border-radius: 50%;\n        border: solid 3px red;\n        background: linear-gradient(to right, red, black);\n        width: 200px; }\n      .mybody .mycontact .mybodywork {\n        display: -moz-box;\n        display: flex;\n        -moz-box-pack: center;\n             justify-content: center;\n        -moz-box-align: center;\n             align-items: center;\n        min-height: 200px;\n        width: 100%; } }\n\n@media only screen and (max-width: 974px) {\n  .myheader {\n    padding: 0 20%;\n    padding-top: 20%; }\n    .myheader .content-header .first-header-text {\n      position: absolute;\n      height: 35%;\n      right: 0;\n      z-index: 2; }\n      .myheader .content-header .first-header-text h1 {\n        font-weight: bold;\n        font-size: 40px;\n        margin-right: 20px; }\n      .myheader .content-header .first-header-text #first-text::after {\n        content: '';\n        position: absolute;\n        margin-left: 40px;\n        width: 450px;\n        height: 2px;\n        top: 15%;\n        background: linear-gradient(to right, red, black); }\n      .myheader .content-header .first-header-text #sub-text {\n        font-weight: bold;\n        font-size: 55px;\n        background: linear-gradient(to right, red, black);\n        -webkit-background-clip: text;\n        -webkit-text-fill-color: transparent; }\n      .myheader .content-header .first-header-text #sub-text2 {\n        font-weight: bold;\n        font-size: 30px;\n        margin-right: 20px; }\n    .myheader .content-header .my-btn-box {\n      right: calc(100vw - 95vw); }\n    .myheader .content-header .header-image {\n      filter: blur(5px);\n      margin-left: calc(100vw - 90vw); } }\n\n@media only screen and (max-width: 833px) {\n  .mybody {\n    margin-top: 5%;\n    width: 100%;\n    height: auto;\n    display: -moz-box;\n    display: flex;\n    -moz-box-orient: vertical;\n    -moz-box-direction: normal;\n         flex-direction: column; }\n    .mybody .myfooter {\n      width: 100%;\n      margin: 200px 50px 20px 50px;\n      padding: 10px 0 0 0;\n      display: -moz-box;\n      display: flex;\n      -moz-box-pack: center;\n           justify-content: center;\n      font-weight: bold;\n      font-size: 12px;\n      color: rgba(0, 0, 0, 0.5);\n      border-top: solid 1px rgba(0, 0, 0, 0.2);\n      text-align: center; }\n    .mybody .aboutme {\n      position: relative;\n      top: 10%;\n      right: calc(100vw - 95vw); }\n      .mybody .aboutme .aboutme-img {\n        right: calc(100vw - 100vw);\n        filter: blur(5px); }\n      .mybody .aboutme .aboutme-content {\n        z-index: 3; }\n    .mybody .myskills {\n      position: relative;\n      margin-top: 600px;\n      width: 100vw;\n      height: 500px;\n      text-align: center;\n      padding: 0 calc(100vw - 95vw); }\n      .mybody .myskills h1 {\n        top: 0;\n        font-weight: bold;\n        font-size: 36px;\n        margin-top: 100px;\n        text-transform: uppercase; }\n        .mybody .myskills h1 i {\n          color: red; }\n        .mybody .myskills h1 span {\n          color: red; }\n      .mybody .myskills .card-zone {\n        display: -moz-box;\n        display: flex; }\n      .mybody .myskills .card-skill {\n        width: 168px;\n        height: 98px;\n        -moz-box-flex: 0;\n             flex: 0 2 150px;\n        margin: 25px 50px;\n        font-size: 80px;\n        padding: 5px 0;\n        display: -moz-box;\n        display: flex;\n        -moz-box-pack: center;\n             justify-content: center;\n        -moz-box-flex: 1;\n             flex-grow: 1; }\n    .mybody .myprojects {\n      position: relative;\n      margin-top: 600px;\n      width: 100vw;\n      height: 100%;\n      padding: 0 calc(100vw - 95vw); }\n      .mybody .myprojects .card-zone .card-project {\n        border: solid 1px rgba(0, 0, 0, 0.3);\n        width: calc(100vw - 30vw);\n        height: 200px;\n        padding: 15px;\n        margin-bottom: 30px; }\n        .mybody .myprojects .card-zone .card-project:hover {\n          box-shadow: 0px 0px 5px red; }\n        .mybody .myprojects .card-zone .card-project h1 {\n          margin: 0;\n          color: red;\n          cursor: pointer; }\n          .mybody .myprojects .card-zone .card-project h1:hover {\n            animation: hoveranimnew .3s forwards; }\n        .mybody .myprojects .card-zone .card-project a {\n          text-decoration: none; }\n        .mybody .myprojects .card-zone .card-project .detail-box {\n          margin-top: 10px;\n          display: -moz-box;\n          display: flex;\n          flex-wrap: wrap;\n          -moz-box-flex: 1;\n               flex-grow: 1;\n          -moz-box-orient: horizontal;\n          -moz-box-direction: normal;\n               flex-direction: row;\n          -moz-box-pack: center;\n               justify-content: center; }\n    .mybody .mycontact {\n      position: relative;\n      margin-top: 200px;\n      width: 100%;\n      height: 500px;\n      text-align: center;\n      padding: 0 calc(100vw - 95vw); }\n      .mybody .mycontact h3 {\n        top: 0;\n        font-weight: bold;\n        margin-top: 150px;\n        text-transform: uppercase; }\n      .mybody .mycontact h1 i {\n        color: red; }\n      .mybody .mycontact h1 span {\n        color: red; }\n      .mybody .mycontact .myproimg {\n        margin-top: 100px;\n        border-radius: 50%;\n        border: solid 3px red;\n        background: linear-gradient(to right, red, black);\n        width: 200px; }\n      .mybody .mycontact .mybodywork {\n        display: -moz-box;\n        display: flex;\n        -moz-box-pack: center;\n             justify-content: center;\n        -moz-box-align: center;\n             align-items: center;\n        min-height: 200px;\n        width: 100%; } }\n\n@media only screen and (max-width: 680px) {\n  .myheader {\n    padding: 0 20%;\n    padding-top: 20%; }\n    .myheader .content-header .first-header-text {\n      position: absolute;\n      height: 35%;\n      right: 0;\n      z-index: 2;\n      margin-top: 10%; }\n      .myheader .content-header .first-header-text h1 {\n        font-weight: bold;\n        font-size: 30px;\n        margin-right: 20px; }\n      .myheader .content-header .first-header-text #first-text::after {\n        content: '';\n        position: absolute;\n        margin-left: 25px;\n        width: 450px;\n        height: 2px;\n        top: 10%;\n        background: linear-gradient(to right, red, black); }\n      .myheader .content-header .first-header-text #sub-text {\n        font-weight: bold;\n        font-size: 45px;\n        background: linear-gradient(to right, red, black);\n        -webkit-background-clip: text;\n        -webkit-text-fill-color: transparent; }\n      .myheader .content-header .first-header-text #sub-text2 {\n        font-weight: bold;\n        font-size: 25px;\n        margin-right: 20px; }\n    .myheader .content-header .my-btn-box {\n      right: calc(100vw - 98vw); }\n      .myheader .content-header .my-btn-box .my-cus-btn2 {\n        margin-left: 20px;\n        border-radius: 5px;\n        font-size: 13px;\n        padding: 1rem 2.5rem;\n        color: black;\n        text-transform: uppercase;\n        font-weight: bold;\n        border: solid 2px transparent;\n        background-image: linear-gradient(rgba(255, 255, 255, 0), rgba(255, 255, 255, 0)), linear-gradient(to right, red, black);\n        background-origin: border-box;\n        background-clip: content-box, border-box;\n        text-decoration: none;\n        box-shadow: 0px 1000px 1px #fff inset;\n        cursor: pointer; }\n        .myheader .content-header .my-btn-box .my-cus-btn2:hover {\n          animation: hoverbtn2 .5s forwards; }\n    .myheader .content-header .header-image {\n      filter: blur(5px);\n      margin-left: calc(100vw - 80vw); }\n  .mybody {\n    margin-top: 5%;\n    width: 100%;\n    height: auto;\n    display: -moz-box;\n    display: flex;\n    -moz-box-orient: vertical;\n    -moz-box-direction: normal;\n         flex-direction: column; }\n    .mybody .myfooter {\n      width: calc(100vw + 15vw); }\n    .mybody .aboutme {\n      position: relative;\n      top: 5%;\n      right: 0; }\n      .mybody .aboutme .aboutme-img {\n        right: -200px;\n        filter: blur(5px); }\n      .mybody .aboutme .aboutme-content {\n        z-index: 3; }\n    .mybody .myskills {\n      position: relative;\n      margin-top: 600px;\n      width: 100vw;\n      height: 500px;\n      text-align: center;\n      padding: 0;\n      margin-left: 15%; }\n    .mybody .myprojects {\n      position: relative;\n      margin-top: 600px;\n      width: 100vw;\n      height: 100%;\n      padding: 0;\n      margin-left: 15%; }\n      .mybody .myprojects .card-zone .card-project {\n        border: solid 1px rgba(0, 0, 0, 0.3);\n        width: calc(100vw - 30vw);\n        height: 250px;\n        padding: 15px;\n        margin-bottom: 30px; }\n    .mybody .mycontact {\n      position: relative;\n      margin-top: 200px;\n      width: 100%;\n      height: 500px;\n      text-align: center;\n      padding: 0;\n      margin-left: 15%; }\n      .mybody .mycontact h3 {\n        top: 0;\n        font-weight: bold;\n        margin-top: 150px;\n        text-transform: uppercase; }\n      .mybody .mycontact h1 i {\n        color: red; }\n      .mybody .mycontact h1 span {\n        color: red; }\n      .mybody .mycontact .myproimg {\n        margin-top: 100px;\n        border-radius: 50%;\n        border: solid 3px red;\n        background: linear-gradient(to right, red, black);\n        width: 200px; }\n      .mybody .mycontact .mybodywork {\n        display: -moz-box;\n        display: flex;\n        -moz-box-pack: center;\n             justify-content: center;\n        -moz-box-align: center;\n             align-items: center;\n        min-height: 200px;\n        width: 100%; } }\n\n@media only screen and (max-width: 634px) {\n  .mybody {\n    margin-top: 0;\n    width: 100%;\n    height: auto;\n    display: -moz-box;\n    display: flex;\n    -moz-box-orient: vertical;\n    -moz-box-direction: normal;\n         flex-direction: column; }\n    .mybody .myfooter {\n      margin-top: 0;\n      width: calc(100vw + 15vw); }\n    .mybody .aboutme {\n      position: relative;\n      top: 5%;\n      right: 0; }\n      .mybody .aboutme .aboutme-img {\n        right: -200px;\n        filter: blur(5px); }\n      .mybody .aboutme .aboutme-content {\n        z-index: 3; }\n    .mybody .myskills {\n      position: relative;\n      margin-top: 600px;\n      width: 100vw;\n      height: 500px;\n      text-align: center;\n      padding: 0;\n      margin-left: 15%; }\n    .mybody .myprojects {\n      position: relative;\n      margin-top: 600px;\n      width: 100vw;\n      height: 100%;\n      padding: 0;\n      margin-left: 15%; }\n      .mybody .myprojects .card-zone .card-project {\n        border: solid 1px rgba(0, 0, 0, 0.3);\n        width: calc(100vw - 30vw);\n        height: 250px;\n        padding: 15px;\n        margin-bottom: 30px; }\n    .mybody .mycontact {\n      position: relative;\n      margin-top: 200px;\n      width: 100%;\n      height: 500px;\n      text-align: center;\n      padding: 0;\n      margin-left: 15%; }\n      .mybody .mycontact h3 {\n        top: 0;\n        font-weight: bold;\n        margin-top: 150px;\n        text-transform: uppercase; }\n      .mybody .mycontact h1 i {\n        color: red; }\n      .mybody .mycontact h1 span {\n        color: red; }\n      .mybody .mycontact .myproimg {\n        margin-top: 100px;\n        border-radius: 50%;\n        border: solid 3px red;\n        background: linear-gradient(to right, red, black);\n        width: 200px; }\n      .mybody .mycontact .mybodywork {\n        display: -moz-box;\n        display: flex;\n        -moz-box-pack: center;\n             justify-content: center;\n        -moz-box-align: center;\n             align-items: center;\n        min-height: 200px;\n        width: 100%; } }\n\n@media only screen and (max-width: 580px) {\n  .mybody {\n    margin-top: 0;\n    width: 100%;\n    height: auto;\n    display: -moz-box;\n    display: flex;\n    -moz-box-orient: vertical;\n    -moz-box-direction: normal;\n         flex-direction: column; }\n    .mybody .myfooter {\n      width: calc(100vw + 25vw);\n      margin-top: 0; }\n    .mybody .aboutme {\n      position: relative;\n      top: 5%;\n      right: 0; }\n      .mybody .aboutme .aboutme-img {\n        right: -200px;\n        filter: blur(5px); }\n      .mybody .aboutme .aboutme-content {\n        z-index: 3; }\n    .mybody .myskills {\n      position: relative;\n      margin-top: 600px;\n      width: 100vw;\n      height: 500px;\n      text-align: center;\n      padding: 0;\n      margin-left: 20%; }\n    .mybody .myprojects {\n      position: relative;\n      margin-top: 600px;\n      width: 100vw;\n      height: 100%;\n      padding: 0;\n      margin-left: 20%; }\n      .mybody .myprojects .card-zone .card-project {\n        border: solid 1px rgba(0, 0, 0, 0.3);\n        width: calc(100vw - 30vw);\n        height: 250px;\n        padding: 15px;\n        margin-bottom: 30px; }\n    .mybody .mycontact {\n      position: relative;\n      margin-top: 200px;\n      width: 100%;\n      height: 500px;\n      text-align: center;\n      padding: 0;\n      margin-left: 20%; }\n      .mybody .mycontact h3 {\n        top: 0;\n        font-weight: bold;\n        margin-top: 150px;\n        text-transform: uppercase; }\n      .mybody .mycontact h1 i {\n        color: red; }\n      .mybody .mycontact h1 span {\n        color: red; }\n      .mybody .mycontact .myproimg {\n        margin-top: 100px;\n        border-radius: 50%;\n        border: solid 3px red;\n        background: linear-gradient(to right, red, black);\n        width: 200px; }\n      .mybody .mycontact .mybodywork {\n        display: -moz-box;\n        display: flex;\n        -moz-box-pack: center;\n             justify-content: center;\n        -moz-box-align: center;\n             align-items: center;\n        min-height: 200px;\n        width: 100%; } }\n\n@media only screen and (max-width: 500px) {\n  .mybody {\n    margin-top: 0;\n    width: 120%;\n    height: auto;\n    display: -moz-box;\n    display: flex;\n    -moz-box-orient: vertical;\n    -moz-box-direction: normal;\n         flex-direction: column; }\n    .mybody .myfooter {\n      margin-top: 0;\n      width: calc(100vw + 40vw); }\n    .mybody .aboutme {\n      position: relative;\n      top: 5%;\n      right: 0; }\n      .mybody .aboutme .aboutme-img {\n        right: -200px;\n        filter: blur(5px); }\n      .mybody .aboutme .aboutme-content {\n        z-index: 3; }\n    .mybody .myskills {\n      position: relative;\n      margin-top: 600px;\n      width: 120vw;\n      height: 500px;\n      text-align: center;\n      padding: 0;\n      margin-left: 15%; }\n    .mybody .myprojects {\n      position: relative;\n      margin-top: 600px;\n      width: 120vw;\n      height: 100%;\n      padding: 0;\n      margin-left: 15%; }\n      .mybody .myprojects .card-zone .card-project {\n        border: solid 1px rgba(0, 0, 0, 0.3);\n        width: calc(100vw - 20vw);\n        height: 250px;\n        padding: 15px;\n        margin-bottom: 30px; }\n    .mybody .mycontact {\n      position: relative;\n      margin-top: 200px;\n      width: 100%;\n      height: 500px;\n      text-align: center;\n      padding: 0;\n      margin-left: 15%; }\n      .mybody .mycontact h3 {\n        top: 0;\n        font-weight: bold;\n        margin-top: 150px;\n        text-transform: uppercase; }\n      .mybody .mycontact h1 i {\n        color: red; }\n      .mybody .mycontact h1 span {\n        color: red; }\n      .mybody .mycontact .myproimg {\n        margin-top: 100px;\n        border-radius: 50%;\n        border: solid 3px red;\n        background: linear-gradient(to right, red, black);\n        width: 200px; }\n      .mybody .mycontact .mybodywork {\n        display: -moz-box;\n        display: flex;\n        -moz-box-pack: center;\n             justify-content: center;\n        -moz-box-align: center;\n             align-items: center;\n        min-height: 200px;\n        width: 100%; } }\n\n@media only screen and (max-width: 425px) {\n  .myheader {\n    padding: 0 5%;\n    padding-top: 25%; }\n    .myheader .content-header .first-header-text {\n      position: absolute;\n      height: 35%;\n      left: 20%;\n      z-index: 2;\n      margin-top: 10%; }\n      .myheader .content-header .first-header-text h1 {\n        font-weight: bold;\n        font-size: 30px;\n        margin-right: 20px;\n        width: 450px; }\n      .myheader .content-header .first-header-text #first-text::after {\n        content: '';\n        position: absolute;\n        margin-left: 25px;\n        width: 450px;\n        height: 2px;\n        top: 10%;\n        background: linear-gradient(to right, red, black); }\n      .myheader .content-header .first-header-text #sub-text {\n        font-weight: bold;\n        font-size: 45px;\n        background: linear-gradient(to right, red, black);\n        -webkit-background-clip: text;\n        -webkit-text-fill-color: transparent; }\n      .myheader .content-header .first-header-text #sub-text2 {\n        font-weight: bold;\n        font-size: 25px;\n        margin-right: 20px; }\n    .myheader .content-header .my-btn-box {\n      left: 20%;\n      width: 120%; }\n      .myheader .content-header .my-btn-box .my-cus-btn1 {\n        font-size: 20px; }\n      .myheader .content-header .my-btn-box .my-cus-btn2 {\n        font-size: 20px; }\n    .myheader .content-header .header-image {\n      filter: blur(5px);\n      margin-left: calc(100vw - 80vw); }\n  .mybody {\n    margin-top: 0;\n    width: 120%;\n    height: auto;\n    display: -moz-box;\n    display: flex;\n    -moz-box-orient: vertical;\n    -moz-box-direction: normal;\n         flex-direction: column; }\n    .mybody .myfooter {\n      margin-top: 0;\n      width: calc(100vw + 45vw); }\n    .mybody .aboutme {\n      position: relative;\n      top: 5%;\n      right: 0; }\n      .mybody .aboutme .aboutme-img {\n        right: -200px;\n        filter: blur(5px); }\n      .mybody .aboutme .aboutme-content {\n        z-index: 3; }\n    .mybody .myskills {\n      position: relative;\n      margin-top: 600px;\n      width: 135vw;\n      height: 500px;\n      text-align: center;\n      padding: 0;\n      margin-left: 15%; }\n    .mybody .myprojects {\n      position: relative;\n      margin-top: 600px;\n      width: 135vw;\n      height: 100%;\n      padding: 0;\n      margin-left: 15%; }\n      .mybody .myprojects .card-zone .card-project {\n        border: solid 1px rgba(0, 0, 0, 0.3);\n        width: calc(100vw - 10vw);\n        height: 250px;\n        padding: 15px;\n        margin-bottom: 30px; }\n    .mybody .mycontact {\n      position: relative;\n      margin-top: 200px;\n      width: 135vw;\n      height: 500px;\n      text-align: center;\n      padding: 0;\n      margin-left: 15%; }\n      .mybody .mycontact h3 {\n        top: 0;\n        font-weight: bold;\n        margin-top: 150px;\n        text-transform: uppercase; }\n      .mybody .mycontact h1 i {\n        color: red; }\n      .mybody .mycontact h1 span {\n        color: red; }\n      .mybody .mycontact .myproimg {\n        margin-top: 100px;\n        border-radius: 50%;\n        border: solid 3px red;\n        background: linear-gradient(to right, red, black);\n        width: 200px; }\n      .mybody .mycontact .mybodywork {\n        display: -moz-box;\n        display: flex;\n        -moz-box-pack: center;\n             justify-content: center;\n        -moz-box-align: center;\n             align-items: center;\n        min-height: 200px;\n        width: 100%; } }\n\n@media only screen and (max-width: 370px) {\n  .myheader {\n    padding: 0 5%;\n    padding-top: 25%; }\n    .myheader .content-header .first-header-text {\n      position: absolute;\n      height: 35%;\n      left: 20%;\n      z-index: 2;\n      margin-top: 10%; }\n      .myheader .content-header .first-header-text h1 {\n        font-weight: bold;\n        font-size: 30px;\n        margin-right: 20px; }\n      .myheader .content-header .first-header-text #first-text::after {\n        content: '';\n        position: absolute;\n        margin-left: 25px;\n        width: 450px;\n        height: 2px;\n        top: 10%;\n        background: linear-gradient(to right, red, black); }\n      .myheader .content-header .first-header-text #sub-text {\n        font-weight: bold;\n        font-size: 35px;\n        background: linear-gradient(to right, red, black);\n        -webkit-background-clip: text;\n        -webkit-text-fill-color: transparent; }\n      .myheader .content-header .first-header-text #sub-text2 {\n        font-weight: bold;\n        font-size: 25px;\n        margin-right: 20px; }\n    .myheader .content-header .my-btn-box {\n      left: 20%;\n      width: 120%; }\n      .myheader .content-header .my-btn-box .my-cus-btn1 {\n        font-size: 15px; }\n      .myheader .content-header .my-btn-box .my-cus-btn2 {\n        font-size: 15px; }\n    .myheader .content-header .header-image {\n      filter: blur(5px);\n      margin-left: calc(100vw - 80vw); }\n  .mybody {\n    margin-top: 0;\n    width: 120%;\n    height: auto;\n    display: -moz-box;\n    display: flex;\n    -moz-box-orient: vertical;\n    -moz-box-direction: normal;\n         flex-direction: column; }\n    .mybody .myfooter {\n      margin-top: 0;\n      width: calc(100vw + 75vw); }\n    .mybody .aboutme {\n      position: relative;\n      top: 5%;\n      right: 0; }\n      .mybody .aboutme .aboutme-img {\n        right: -200px;\n        filter: blur(5px); }\n      .mybody .aboutme .aboutme-content {\n        z-index: 3; }\n    .mybody .myskills {\n      position: relative;\n      margin-top: 600px;\n      width: 160vw;\n      height: 500px;\n      text-align: center;\n      padding: 0;\n      margin-left: 15%; }\n    .mybody .myprojects {\n      position: relative;\n      margin-top: 600px;\n      width: 160vw;\n      height: 100%;\n      padding: 0;\n      margin-left: 15%; }\n      .mybody .myprojects .card-zone .card-project {\n        border: solid 1px rgba(0, 0, 0, 0.3);\n        width: 125vw;\n        height: calc(100%);\n        padding: 15px;\n        margin-bottom: 30px; }\n    .mybody .mycontact {\n      position: relative;\n      margin-top: 200px;\n      width: 160vw;\n      height: 500px;\n      text-align: center;\n      padding: 0;\n      margin-left: 15%; }\n      .mybody .mycontact h3 {\n        top: 0;\n        font-weight: bold;\n        margin-top: 150px;\n        text-transform: uppercase; }\n      .mybody .mycontact h1 {\n        font-weight: bold; }\n        .mybody .mycontact h1 i {\n          color: red; }\n        .mybody .mycontact h1 span {\n          color: red; }\n      .mybody .mycontact .myproimg {\n        margin-top: 100px;\n        border-radius: 50%;\n        border: solid 3px red;\n        background: linear-gradient(to right, red, black);\n        width: 200px; }\n      .mybody .mycontact .mybodywork {\n        display: -moz-box;\n        display: flex;\n        -moz-box-pack: center;\n             justify-content: center;\n        -moz-box-align: center;\n             align-items: center;\n        min-height: 200px;\n        width: 100%; } }\n\n@media only screen and (max-width: 312px) {\n  .mybody {\n    margin-top: 0;\n    width: 120%;\n    height: auto;\n    display: -moz-box;\n    display: flex;\n    -moz-box-orient: vertical;\n    -moz-box-direction: normal;\n         flex-direction: column; }\n    .mybody .aboutme {\n      position: relative;\n      top: 5%;\n      right: 0; }\n      .mybody .aboutme .aboutme-img {\n        right: -200px;\n        filter: blur(5px); }\n      .mybody .aboutme .aboutme-content {\n        z-index: 3; }\n    .mybody .myskills {\n      position: relative;\n      margin-top: 600px;\n      width: 180vw;\n      height: 500px;\n      text-align: center;\n      padding: 0;\n      margin-left: 15%; }\n    .mybody .myprojects {\n      position: relative;\n      margin-top: 600px;\n      width: 150vw;\n      height: 100%;\n      padding: 0;\n      margin-left: 15%; }\n      .mybody .myprojects .card-zone .card-project {\n        border: solid 1px rgba(0, 0, 0, 0.3);\n        width: 115vw;\n        height: 225px;\n        padding: 15px;\n        margin-bottom: 30px; }\n    .mybody .mycontact {\n      position: relative;\n      margin-top: 200px;\n      width: 150vw;\n      height: 500px;\n      text-align: center;\n      padding: 0;\n      margin-left: 15%; }\n      .mybody .mycontact h3 {\n        top: 0;\n        font-weight: bold;\n        margin-top: 150px;\n        text-transform: uppercase; }\n      .mybody .mycontact h1 i {\n        color: red; }\n      .mybody .mycontact h1 span {\n        color: red; }\n      .mybody .mycontact .myproimg {\n        margin-top: 100px;\n        border-radius: 50%;\n        border: solid 3px red;\n        background: linear-gradient(to right, red, black);\n        width: 200px; }\n      .mybody .mycontact .mybodywork {\n        display: -moz-box;\n        display: flex;\n        -moz-box-pack: center;\n             justify-content: center;\n        -moz-box-align: center;\n             align-items: center;\n        min-height: 200px;\n        width: 100%; } }\n", "",{"version":3,"sources":["C:/Users/WhiteCanZE/Desktop/whitecanze.github.io/src/styles/styles.scss","styles.scss"],"names":[],"mappings":"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","file":"styles.scss","sourcesContent":["@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@600&display=swap');\r\n\r\n:root {\r\n    --color-gradient: linear-gradient(to right, #ff2400, #e81d1d, #e8b71d, #e3e81d, #1de840, #1ddde8, #2b1de8, #dd00f3,\r\n            #dd00f3)\r\n}\r\n\r\n@keyframes make_drop_shadow {\r\n    from {}\r\n\r\n    to {\r\n        filter: drop-shadow(0 0 5px darkgray)\r\n    }\r\n}\r\n\r\n@keyframes start-anim {\r\n    from {\r\n        transform: translateY(-100px);\r\n        opacity: 0;\r\n    }\r\n\r\n    to {\r\n        transform: translateY(0);\r\n        opacity: 1;\r\n    }\r\n}\r\n\r\n@keyframes fixed-top-anim {\r\n    from {\r\n        transform: translateY(-100px);\r\n        opacity: 0;\r\n    }\r\n\r\n    to {\r\n        transform: translateY(0);\r\n        opacity: 1;\r\n    }\r\n}\r\n\r\n/* scroll progress */\r\n@keyframes animateprogressbar {\r\n\r\n    0%,\r\n    100% {\r\n        filter: hue-rotate(0deg);\r\n    }\r\n\r\n    50% {\r\n        filter: hue-rotate(360deg);\r\n    }\r\n}\r\n\r\n@keyframes animatescrollbar {\r\n\r\n    0%,\r\n    100% {\r\n        filter: hue-rotate(0deg);\r\n    }\r\n\r\n    50% {\r\n        filter: hue-rotate(360deg);\r\n    }\r\n}\r\n\r\n@-webkit-keyframes make_drop_shadow {\r\n    from {}\r\n\r\n    to {\r\n        filter: drop-shadow(0 0 5px darkgray)\r\n    }\r\n}\r\n\r\n@-webkit-keyframes animatescrollbar {\r\n\r\n    0%,\r\n    100% {\r\n        -webkit-filter: hue-rotate(0deg);\r\n    }\r\n\r\n    50% {\r\n        -webkit-filter: hue-rotate(360deg);\r\n    }\r\n}\r\n\r\n@-moz-keyframes make_drop_shadow {\r\n    from {}\r\n\r\n    to {\r\n        filter: drop-shadow(0 0 5px darkgray)\r\n    }\r\n}\r\n\r\n@-moz-keyframes animatescrollbar {\r\n\r\n    0%,\r\n    100% {\r\n        filter: hue-rotate(0deg);\r\n    }\r\n\r\n    50% {\r\n        filter: hue-rotate(360deg);\r\n    }\r\n}\r\n\r\n@-o-keyframes make_drop_shadow {\r\n    from {}\r\n\r\n    to {\r\n        filter: drop-shadow(0 0 5px darkgray)\r\n    }\r\n}\r\n\r\n@-o-keyframes animatescrollbar {\r\n\r\n    0%,\r\n    100% {\r\n        filter: hue-rotate(0deg);\r\n    }\r\n\r\n    50% {\r\n        filter: hue-rotate(360deg);\r\n    }\r\n}\r\n\r\n@keyframes hoverbtn1 {\r\n    from {\r\n        color: #fff;\r\n        /* box-shadow: 0 10px 30px rgba(255, 0, 0, .3); */\r\n    }\r\n\r\n    to {\r\n        color: #000;\r\n        border: solid 2px transparent;\r\n        background-image: linear-gradient(rgba(255, 255, 255, 0), rgba(255, 255, 255, 0)), linear-gradient(to right, red, black);\r\n        background-origin: border-box;\r\n        background-clip: content-box, border-box;\r\n        box-shadow: 0px 1000px 1px #fff inset;\r\n    }\r\n}\r\n\r\n@keyframes hoverbtn2 {\r\n    from {\r\n        color: #000;\r\n        /* box-shadow: 0 0px 0px rgba(255, 0, 0, .3); */\r\n    }\r\n\r\n    to {\r\n        color: #fff;\r\n        box-shadow: 0px 0px 0px #fff;\r\n    }\r\n}\r\n\r\n@keyframes hoverbtn3 {\r\n    from {\r\n        color: #fff;\r\n        /* box-shadow: 0 10px 30px rgba(255, 0, 0, .3); */\r\n    }\r\n\r\n    to {\r\n        color: #000;\r\n        border: solid 2px transparent;\r\n        background-image: linear-gradient(rgba(255, 255, 255, 0), rgba(255, 255, 255, 0)), linear-gradient(to right, red, black);\r\n        background-origin: border-box;\r\n        background-clip: content-box, border-box;\r\n        box-shadow: 0px 1000px 1px #fff inset;\r\n    }\r\n}\r\n\r\n@keyframes zoomin-anim {\r\n    from {\r\n        font-size: 80px;\r\n    }\r\n\r\n    to {\r\n        font-size: 100px;\r\n    }\r\n}\r\n\r\n@keyframes zoomin-anim2 {\r\n    from {\r\n        width: 80px;\r\n        height: 80px;\r\n    }\r\n\r\n    to {\r\n        width: 100px;\r\n        height: 100px;\r\n    }\r\n}\r\n\r\n@keyframes hoveranimnew {\r\n    from {\r\n        color: red;\r\n    }\r\n\r\n    to {\r\n        color: rgb(184, 21, 21);\r\n    }\r\n}\r\n\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    font-family: 'Poppins';\r\n    user-select: none;\r\n}\r\n\r\n.line {\r\n    width: 100%;\r\n    height: 100%;\r\n    display: grid;\r\n    place-items: center;\r\n}\r\n\r\n.back-btn-arrow {\r\n    font-size: 5rem;\r\n    background: linear-gradient(to right, rgb(255, 0, 0), rgb(0, 0, 0));\r\n    -webkit-background-clip: text;\r\n    -webkit-text-fill-color: transparent;\r\n\r\n    &:hover {\r\n        animation: make_drop_shadow .3s forwards;\r\n    }\r\n}\r\n\r\n\r\n.Myresume {\r\n    display: grid;\r\n    place-items: center;\r\n}\r\n\r\n.App {\r\n    text-align: center;\r\n}\r\n\r\n.box-content-nav {\r\n    display: flex;\r\n    overflow: hidden;\r\n}\r\n\r\n.my-nav {\r\n    width: 100%;\r\n    height: 70px;\r\n    background: white;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    animation: start-anim .5s forwards;\r\n    position: fixed;\r\n    top: 0;\r\n\r\n    .mylogo {\r\n        display: flex;\r\n        flex-direction: row;\r\n        padding: 0 35px;\r\n\r\n        img {\r\n            padding: 5px 0;\r\n            width: 80px;\r\n            height: 80px;\r\n        }\r\n\r\n        #mytext {\r\n            font-weight: bolder;\r\n            position: relative;\r\n            top: 20px;\r\n            background: linear-gradient(to right, rgb(255, 0, 0), rgb(0, 0, 0));\r\n            -webkit-background-clip: text;\r\n            -webkit-text-fill-color: transparent;\r\n        }\r\n    }\r\n\r\n    .my-list-box {\r\n        display: flex;\r\n        flex-direction: row;\r\n        padding-left: calc(100vw - 1000px);\r\n    }\r\n}\r\n\r\n.fixed-top {\r\n    position: fixed;\r\n    z-index: 1000;\r\n    box-shadow: 0 5px 3px rgba(0, 0, 0, .5);\r\n    top: 0;\r\n    height: 70px !important;\r\n    animation: fixed-top-anim .5s forwards;\r\n}\r\n\r\n.has-focus {\r\n    background: linear-gradient(to right, rgb(255, 0, 0), rgb(0, 0, 0));\r\n    -webkit-background-clip: text;\r\n    -webkit-text-fill-color: transparent;\r\n}\r\n\r\n.mynav-list {\r\n    list-style-type: none;\r\n    display: flex;\r\n    padding: 10px;\r\n    position: relative;\r\n    top: 15px;\r\n    text-transform: uppercase;\r\n    font-weight: bolder;\r\n\r\n    li {\r\n        padding: 0 10px;\r\n        margin-right: 35px;\r\n        cursor: pointer;\r\n    }\r\n}\r\n\r\n.myprogressbar {\r\n    padding: 0;\r\n    margin: 0;\r\n}\r\n\r\n#progressbar {\r\n    z-index: 99;\r\n    position: fixed;\r\n    top: 70px;\r\n    left: 0;\r\n    height: 5px;\r\n    border-top-right-radius: 15px;\r\n    border-bottom-right-radius: 15px;\r\n    border-top-left-radius: 15px;\r\n    border-bottom-left-radius: 15px;\r\n    background: linear-gradient(to top, #008aff, #00ffe7);\r\n    animation: animateprogressbar 5s linear infinite;\r\n\r\n    &::before {\r\n        content: '';\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        background: linear-gradient(to top, #008aff, #00ffe7);\r\n        filter: blur(10px);\r\n    }\r\n\r\n    &::after {\r\n        content: '';\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        background: linear-gradient(to top, #008aff, #00ffe7);\r\n        filter: blur(10px);\r\n        filter: blur(10px);\r\n    }\r\n}\r\n\r\n#percent {\r\n    z-index: 99;\r\n    position: absolute;\r\n    top: 63px;\r\n    left: 0;\r\n    background: linear-gradient(to right, rgb(255, 0, 0), rgb(0, 0, 0));\r\n    -webkit-background-clip: text;\r\n    -webkit-text-fill-color: transparent;\r\n    font-size: .8em;\r\n    display: none;\r\n    font-weight: bold;\r\n}\r\n\r\n::-webkit-scrollbar {\r\n    width: 5px;\r\n    border: 13px;\r\n    background-color: rgb(241, 241, 241);\r\n\r\n    &:hover {\r\n        width: 10px;\r\n    }\r\n}\r\n\r\n::-webkit-scrollbar-thumb {\r\n    background: red;\r\n    border-radius: 50px;\r\n    cursor: pointer;\r\n\r\n}\r\n\r\n.myheader {\r\n    width: 100%;\r\n    height: 800px;\r\n    padding: 0 20%;\r\n    text-transform: uppercase;\r\n    padding-top: 10%;\r\n\r\n    .content-header {\r\n        height: 80%;\r\n        position: relative;\r\n\r\n        .first-header-text {\r\n            position: absolute;\r\n            height: 35%;\r\n            right: 0;\r\n            z-index: 2;\r\n\r\n            h1 {\r\n                font-weight: bold;\r\n                font-size: 40px;\r\n                margin-right: 20px;\r\n            }\r\n\r\n            #first-text {\r\n                &::after {\r\n                    content: '';\r\n                    position: absolute;\r\n                    margin-left: 40px;\r\n                    width: 450px;\r\n                    height: 2px;\r\n                    top: 18%;\r\n                    background: linear-gradient(to right, rgb(255, 0, 0), rgb(0, 0, 0));\r\n                }\r\n            }\r\n\r\n            #sub-text {\r\n                font-weight: bold;\r\n                font-size: 70px;\r\n                background: linear-gradient(to right, rgb(255, 0, 0), rgb(0, 0, 0));\r\n                -webkit-background-clip: text;\r\n                -webkit-text-fill-color: transparent;\r\n            }\r\n\r\n            #sub-text2 {\r\n                font-weight: bold;\r\n                font-size: 40px;\r\n                margin-right: 20px;\r\n            }\r\n        }\r\n\r\n        .my-btn-box {\r\n            display: flex;\r\n            justify-content: flex-start;\r\n            position: absolute;\r\n            top: 50%;\r\n            right: 16%;\r\n            z-index: 3;\r\n\r\n            .my-cus-btn1 {\r\n                border-radius: 5px;\r\n                font-size: 14px;\r\n                padding: 1rem 2.5rem;\r\n                color: white;\r\n                text-transform: uppercase;\r\n                font-weight: bold;\r\n                border: solid 2px transparent;\r\n                background-image: linear-gradient(rgba(255, 255, 255, 0), rgba(255, 255, 255, 0)), linear-gradient(to right, red, black);\r\n                background-origin: border-box;\r\n                background-clip: content-box, border-box;\r\n                text-decoration: none;\r\n\r\n                &:hover {\r\n                    animation: hoverbtn1 .5s forwards;\r\n                }\r\n            }\r\n\r\n            .my-cus-btn2 {\r\n                margin-left: 20px;\r\n                border-radius: 5px;\r\n                font-size: 14px;\r\n                padding: 1rem 2.5rem;\r\n                color: black;\r\n                text-transform: uppercase;\r\n                font-weight: bold;\r\n                border: solid 2px transparent;\r\n                background-image: linear-gradient(rgba(255, 255, 255, 0), rgba(255, 255, 255, 0)), linear-gradient(to right, red, black);\r\n                background-origin: border-box;\r\n                background-clip: content-box, border-box;\r\n                text-decoration: none;\r\n                box-shadow: 0px 1000px 1px #fff inset;\r\n                cursor: pointer;\r\n\r\n                &:hover {\r\n                    animation: hoverbtn2 .5s forwards;\r\n                }\r\n            }\r\n        }\r\n\r\n        .header-image {\r\n            position: absolute;\r\n            top: -30%;\r\n            left: -10%;\r\n            transform: scalex(-1);\r\n        }\r\n    }\r\n}\r\n\r\n.mybody {\r\n    margin-top: 5%;\r\n    width: 99vw;\r\n    height: auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    .myfooter {\r\n        margin: 200px 50px 20px 50px;\r\n        padding: 10px 0 0 0;\r\n        display: flex;\r\n        justify-content: center;\r\n        font-weight: bold;\r\n        font-size: 12px;\r\n        color: rgba(0, 0, 0, .5);\r\n        border-top: solid 1px rgba(0, 0, 0, .2);\r\n        text-align: center;\r\n    }\r\n\r\n    .aboutme {\r\n        position: relative;\r\n        top: 10%;\r\n        right: 10%;\r\n\r\n        .aboutme-img {\r\n            position: absolute;\r\n            top: 50%;\r\n            right: 10%;\r\n        }\r\n\r\n        .aboutme-content {\r\n            position: absolute;\r\n            left: 20%;\r\n            padding-left: 5%;\r\n            padding-top: 5%;\r\n\r\n            h1 {\r\n                font-weight: bold;\r\n                font-size: 36px;\r\n            }\r\n\r\n            .my-cus-btn3 {\r\n                margin-top: 20px;\r\n                border-radius: 5px;\r\n                font-size: 14px;\r\n                padding: 1rem 3rem;\r\n                color: white;\r\n                text-transform: uppercase;\r\n                font-weight: bold;\r\n                border: solid 2px transparent;\r\n                background-image: linear-gradient(rgba(255, 255, 255, 0), rgba(255, 255, 255, 0)), linear-gradient(to right, red, black);\r\n                background-origin: border-box;\r\n                background-clip: content-box, border-box;\r\n\r\n                &:hover {\r\n                    animation: hoverbtn3 .5s forwards;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .myskills {\r\n        position: relative;\r\n        margin-top: 600px;\r\n        width: 100%;\r\n        height: 500px;\r\n        text-align: center;\r\n        padding: 0 400px;\r\n\r\n        h1 {\r\n            top: 0;\r\n            font-weight: bold;\r\n            font-size: 36px;\r\n            margin-top: 100px;\r\n            text-transform: uppercase;\r\n\r\n            i {\r\n                color: red;\r\n            }\r\n\r\n            span {\r\n                color: red;\r\n            }\r\n        }\r\n\r\n        .card-zone {\r\n            display: flex;\r\n            flex-wrap: wrap;\r\n            flex-shrink: 1;\r\n            justify-content: center;\r\n            margin-top: 100px;\r\n        }\r\n\r\n        .card-skill {\r\n            width: 168px;\r\n            height: 98px;\r\n            flex: 0 2 150px;\r\n            margin: 25px 50px;\r\n            font-size: 80px;\r\n            padding: 5px 0;\r\n            display: flex;\r\n            justify-content: center;\r\n\r\n            .drop-shadow {\r\n                &:hover {\r\n                    animation: .3s make_drop_shadow forwards;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .myprojects {\r\n        position: relative;\r\n        margin-top: 200px;\r\n        width: 100%;\r\n        height: 500px;\r\n        text-align: center;\r\n        padding: 0 200px;\r\n\r\n        h1 {\r\n            top: 0;\r\n            font-weight: bold;\r\n            font-size: 36px;\r\n            margin-top: 100px;\r\n\r\n            i {\r\n                color: red;\r\n            }\r\n\r\n            span {\r\n                color: red;\r\n            }\r\n        }\r\n\r\n        .card-zone {\r\n            display: flex;\r\n            flex-wrap: wrap;\r\n            flex-shrink: 1;\r\n            justify-content: center;\r\n            margin-top: 100px;\r\n\r\n            .card-project {\r\n                border: solid 1px rgba(0, 0, 0, .3);\r\n                width: 1450px;\r\n                height: 155px;\r\n                padding: 15px;\r\n                margin-bottom: 30px;\r\n\r\n                &:hover {\r\n                    box-shadow: 0px 0px 5px red;\r\n                }\r\n\r\n                h1 {\r\n                    margin: 0;\r\n                    color: red;\r\n                    cursor: pointer;\r\n\r\n                    &:hover {\r\n                        animation: hoveranimnew .3s forwards;\r\n                    }\r\n                }\r\n\r\n                a {\r\n                    text-decoration: none;\r\n                }\r\n\r\n                .detail-box {\r\n                    margin-top: 10px;\r\n                    display: flex;\r\n                    flex-direction: row;\r\n                    justify-content: center;\r\n\r\n                    .detail-data-box {\r\n                        color: white;\r\n                        margin-right: 10px;\r\n\r\n                        .text-q-box {\r\n                            background: rgba(0, 0, 0, .7);\r\n                            padding: 0 5px;\r\n                            border-top-left-radius: 3px;\r\n                            border-bottom-left-radius: 3px;\r\n                        }\r\n\r\n                        .text-a-box {\r\n                            padding: 0 5px;\r\n                            border-top-right-radius: 3px;\r\n                            border-bottom-right-radius: 3px;\r\n\r\n                            &.a1 {\r\n                                background: rgb(13, 216, 13);\r\n                            }\r\n\r\n                            &.a2 {\r\n                                background: rgb(3, 111, 196);\r\n                            }\r\n\r\n                            &.a3 {\r\n                                background: plum;\r\n                            }\r\n\r\n                            &.a4 {\r\n                                background: green;\r\n                            }\r\n\r\n                            &.a5 {\r\n                                background: rgb(231, 81, 81);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .mycontact {\r\n        position: relative;\r\n        margin-top: 400px;\r\n        width: 100%;\r\n        height: 500px;\r\n        text-align: center;\r\n        padding: 0 200px;\r\n\r\n        h3 {\r\n            top: 0;\r\n            font-weight: bold;\r\n            margin-top: 150px;\r\n            text-transform: uppercase;\r\n        }\r\n\r\n        h1 {\r\n            font-weight: bold;\r\n            font-size: 36px;\r\n            text-transform: uppercase;\r\n\r\n            i {\r\n                color: red;\r\n            }\r\n\r\n            span {\r\n                color: red;\r\n            }\r\n        }\r\n\r\n        .myproimg {\r\n            margin-top: 100px;\r\n            border-radius: 50%;\r\n            border: solid 3px red;\r\n            background: linear-gradient(to right, rgb(255, 0, 0), rgb(0, 0, 0));\r\n            width: 200px;\r\n        }\r\n\r\n        .mybodywork {\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            min-height: 200px;\r\n            width: 100%;\r\n\r\n            ul {\r\n                position: relative;\r\n                display: flex;\r\n                padding: 0;\r\n\r\n                li {\r\n                    position: relative;\r\n                    list-style: none;\r\n\r\n                    a {\r\n                        position: relative;\r\n                        width: 80px;\r\n                        height: 80px;\r\n                        display: flex;\r\n                        justify-content: center;\r\n                        align-items: center;\r\n                        background: white;\r\n                        margin: 0 10px;\r\n                        text-decoration: none;\r\n                        font-size: 30px;\r\n                        border-radius: 50%;\r\n                        color: #e2e2e2;\r\n                        box-shadow: inset -1px -1px 2px rgba(0, 0, 0, .2), 2px 2px 5px rgba(0, 0, 0, .2);\r\n                        transition: .5s;\r\n\r\n                        &:hover {\r\n                            color: #999;\r\n                            transform: translateY(-20px);\r\n                            box-shadow: inset -1px -1px 2px rgba(0, 0, 0, .2), 2px 24px 10px rgba(0, 0, 0, .1);\r\n                        }\r\n\r\n                        &:before {\r\n                            content: '';\r\n                            position: absolute;\r\n                            top: 10px;\r\n                            left: 10px;\r\n                            right: 10px;\r\n                            bottom: 10px;\r\n                            border-radius: 50%;\r\n                            border: 2px solid rgba(0, 0, 0, .1);\r\n                        }\r\n\r\n                        .fab {\r\n                            color: #fff;\r\n                            position: relative;\r\n                            z-index: 2;\r\n                        }\r\n\r\n                        .fas {\r\n                            color: #fff;\r\n                            position: relative;\r\n                            z-index: 2;\r\n                        }\r\n                    }\r\n\r\n                    &:nth-child(1) {\r\n                        a {\r\n                            &::before {\r\n                                background: #ea4c89;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    &:nth-child(2) {\r\n                        a {\r\n                            &::before {\r\n                                background: #000;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    &:nth-child(3) {\r\n                        a {\r\n                            &::before {\r\n                                background: #1877f2;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    &:nth-child(4) {\r\n                        a {\r\n                            &::before {\r\n                                background: #25d366;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // &:nth-child(5) {\r\n                    //     a {\r\n                    //         &::before {\r\n                    //             background: #c32aa3;\r\n                    //         }\r\n                    //     }\r\n                    // }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@media only screen and (max-width: 1799px) {\r\n    .mybody {\r\n        margin-top: 5%;\r\n        width: 100%;\r\n        height: auto;\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        .myfooter {\r\n            width: 100%;\r\n            margin: 200px 50px 20px 50px;\r\n            padding: 10px 0 0 0;\r\n            display: flex;\r\n            justify-content: center;\r\n            font-weight: bold;\r\n            font-size: 12px;\r\n            color: rgba(0, 0, 0, .5);\r\n            border-top: solid 1px rgba(0, 0, 0, .2);\r\n            text-align: center;\r\n        }\r\n\r\n        .aboutme {\r\n            position: relative;\r\n            top: 10%;\r\n            right: calc(100vw - 95vw);\r\n\r\n            .aboutme-img {\r\n                right: calc(100vw - 100vw);\r\n                filter: blur(5px)\r\n            }\r\n\r\n            .aboutme-content {\r\n                z-index: 3;\r\n            }\r\n        }\r\n\r\n        .myskills {\r\n            position: relative;\r\n            margin-top: 600px;\r\n            width: 100vw;\r\n            height: 500px;\r\n            text-align: center;\r\n            padding: 0 calc(100vw - 95vw);\r\n\r\n            h1 {\r\n                top: 0;\r\n                font-weight: bold;\r\n                font-size: 36px;\r\n                margin-top: 100px;\r\n                text-transform: uppercase;\r\n\r\n                i {\r\n                    color: red;\r\n                }\r\n\r\n                span {\r\n                    color: red;\r\n                }\r\n            }\r\n\r\n            .card-zone {\r\n                display: flex;\r\n            }\r\n\r\n            .card-skill {\r\n                width: 168px;\r\n                height: 98px;\r\n                flex: 0 2 150px;\r\n                margin: 25px 50px;\r\n                font-size: 80px;\r\n                padding: 5px 0;\r\n                display: flex;\r\n                justify-content: center;\r\n                flex-grow: 1;\r\n            }\r\n        }\r\n\r\n        .myprojects {\r\n            position: relative;\r\n            margin-top: 300px;\r\n            width: 100vw;\r\n            height: 100%;\r\n            padding: 0 calc(100vw - 95vw);\r\n\r\n            .card-zone {\r\n\r\n                .card-project {\r\n                    border: solid 1px rgba(0, 0, 0, .3);\r\n                    width: calc(100vw - 30vw);\r\n                    height: 200px;\r\n                    padding: 15px;\r\n                    margin-bottom: 30px;\r\n\r\n                    &:hover {\r\n                        box-shadow: 0px 0px 5px red;\r\n                    }\r\n\r\n                    h1 {\r\n                        margin: 0;\r\n                        color: red;\r\n                        cursor: pointer;\r\n\r\n                        &:hover {\r\n                            animation: hoveranimnew .3s forwards;\r\n                        }\r\n                    }\r\n\r\n                    a {\r\n                        text-decoration: none;\r\n                    }\r\n\r\n                    .detail-box {\r\n                        margin-top: 10px;\r\n                        display: flex;\r\n                        flex-wrap: wrap;\r\n                        flex-grow: 1;\r\n                        flex-direction: row;\r\n                        justify-content: center;\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        .mycontact {\r\n            position: relative;\r\n            margin-top: 200px;\r\n            width: 100%;\r\n            height: 500px;\r\n            text-align: center;\r\n            padding: 0 calc(100vw - 95vw);\r\n\r\n            h3 {\r\n                top: 0;\r\n                font-weight: bold;\r\n                margin-top: 150px;\r\n                text-transform: uppercase;\r\n            }\r\n\r\n            h1 {\r\n                i {\r\n                    color: red;\r\n                }\r\n\r\n                span {\r\n                    color: red;\r\n                }\r\n            }\r\n\r\n            .myproimg {\r\n                margin-top: 100px;\r\n                border-radius: 50%;\r\n                border: solid 3px red;\r\n                background: linear-gradient(to right, rgb(255, 0, 0), rgb(0, 0, 0));\r\n                width: 200px;\r\n            }\r\n\r\n            .mybodywork {\r\n                display: flex;\r\n                justify-content: center;\r\n                align-items: center;\r\n                min-height: 200px;\r\n                width: 100%;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@media only screen and (max-width: 1200px) {\r\n\r\n    .my-nav {\r\n        .mylogo {\r\n            padding: 0 0;\r\n        }\r\n\r\n        .my-list-box {\r\n            display: none;\r\n        }\r\n    }\r\n\r\n    .myheader {\r\n        padding: 0 20%;\r\n        padding-top: 20%;\r\n\r\n        .content-header {\r\n            .my-btn-box {\r\n                right: calc(100vw - 85vw);\r\n            }\r\n\r\n            .header-image {\r\n                filter: blur(5px);\r\n                margin-left: calc(100vw - 90vw);\r\n            }\r\n        }\r\n    }\r\n\r\n    .mybody {\r\n        margin-top: 5%;\r\n        width: 100%;\r\n        height: auto;\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        .myfooter {\r\n            width: 100%;\r\n            margin: 200px 50px 20px 50px;\r\n            padding: 10px 0 0 0;\r\n            display: flex;\r\n            justify-content: center;\r\n            font-weight: bold;\r\n            font-size: 12px;\r\n            color: rgba(0, 0, 0, .5);\r\n            border-top: solid 1px rgba(0, 0, 0, .2);\r\n            text-align: center;\r\n        }\r\n\r\n        .aboutme {\r\n            position: relative;\r\n            top: 10%;\r\n            right: calc(100vw - 95vw);\r\n\r\n            .aboutme-img {\r\n                right: calc(100vw - 100vw);\r\n                filter: blur(5px)\r\n            }\r\n\r\n            .aboutme-content {\r\n                z-index: 3;\r\n            }\r\n        }\r\n\r\n        .myskills {\r\n            position: relative;\r\n            margin-top: 600px;\r\n            width: 100vw;\r\n            height: 500px;\r\n            text-align: center;\r\n            padding: 0 calc(100vw - 95vw);\r\n\r\n            h1 {\r\n                top: 0;\r\n                font-weight: bold;\r\n                font-size: 36px;\r\n                margin-top: 100px;\r\n                text-transform: uppercase;\r\n\r\n                i {\r\n                    color: red;\r\n                }\r\n\r\n                span {\r\n                    color: red;\r\n                }\r\n            }\r\n\r\n            .card-zone {\r\n                display: flex;\r\n            }\r\n\r\n            .card-skill {\r\n                width: 168px;\r\n                height: 98px;\r\n                flex: 0 2 150px;\r\n                margin: 25px 50px;\r\n                font-size: 80px;\r\n                padding: 5px 0;\r\n                display: flex;\r\n                justify-content: center;\r\n                flex-grow: 1;\r\n            }\r\n        }\r\n\r\n        .myprojects {\r\n            position: relative;\r\n            margin-top: 300px;\r\n            width: 100vw;\r\n            height: 100%;\r\n            padding: 0 calc(100vw - 95vw);\r\n\r\n            .card-zone {\r\n\r\n                .card-project {\r\n                    border: solid 1px rgba(0, 0, 0, .3);\r\n                    width: calc(100vw - 30vw);\r\n                    height: 200px;\r\n                    padding: 15px;\r\n                    margin-bottom: 30px;\r\n\r\n                    &:hover {\r\n                        box-shadow: 0px 0px 5px red;\r\n                    }\r\n\r\n                    h1 {\r\n                        margin: 0;\r\n                        color: red;\r\n                        cursor: pointer;\r\n\r\n                        &:hover {\r\n                            animation: hoveranimnew .3s forwards;\r\n                        }\r\n                    }\r\n\r\n                    a {\r\n                        text-decoration: none;\r\n                    }\r\n\r\n                    .detail-box {\r\n                        margin-top: 10px;\r\n                        display: flex;\r\n                        flex-wrap: wrap;\r\n                        flex-grow: 1;\r\n                        flex-direction: row;\r\n                        justify-content: center;\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        .mycontact {\r\n            position: relative;\r\n            margin-top: 200px;\r\n            width: 100%;\r\n            height: 500px;\r\n            text-align: center;\r\n            padding: 0 calc(100vw - 95vw);\r\n\r\n            h3 {\r\n                top: 0;\r\n                font-weight: bold;\r\n                margin-top: 150px;\r\n                text-transform: uppercase;\r\n            }\r\n\r\n            h1 {\r\n                i {\r\n                    color: red;\r\n                }\r\n\r\n                span {\r\n                    color: red;\r\n                }\r\n            }\r\n\r\n            .myproimg {\r\n                margin-top: 100px;\r\n                border-radius: 50%;\r\n                border: solid 3px red;\r\n                background: linear-gradient(to right, rgb(255, 0, 0), rgb(0, 0, 0));\r\n                width: 200px;\r\n            }\r\n\r\n            .mybodywork {\r\n                display: flex;\r\n                justify-content: center;\r\n                align-items: center;\r\n                min-height: 200px;\r\n                width: 100%;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n@media only screen and (max-width: 974px) {\r\n    .myheader {\r\n        padding: 0 20%;\r\n        padding-top: 20%;\r\n\r\n        .content-header {\r\n\r\n            .first-header-text {\r\n                position: absolute;\r\n                height: 35%;\r\n                right: 0;\r\n                z-index: 2;\r\n\r\n                h1 {\r\n                    font-weight: bold;\r\n                    font-size: 40px;\r\n                    margin-right: 20px;\r\n                }\r\n\r\n                #first-text {\r\n                    &::after {\r\n                        content: '';\r\n                        position: absolute;\r\n                        margin-left: 40px;\r\n                        width: 450px;\r\n                        height: 2px;\r\n                        top: 15%;\r\n                        background: linear-gradient(to right, rgb(255, 0, 0), rgb(0, 0, 0));\r\n                    }\r\n                }\r\n\r\n                #sub-text {\r\n                    font-weight: bold;\r\n                    font-size: 55px;\r\n                    background: linear-gradient(to right, rgb(255, 0, 0), rgb(0, 0, 0));\r\n                    -webkit-background-clip: text;\r\n                    -webkit-text-fill-color: transparent;\r\n                }\r\n\r\n                #sub-text2 {\r\n                    font-weight: bold;\r\n                    font-size: 30px;\r\n                    margin-right: 20px;\r\n                }\r\n            }\r\n\r\n            .my-btn-box {\r\n                right: calc(100vw - 95vw);\r\n            }\r\n\r\n            .header-image {\r\n                filter: blur(5px);\r\n                margin-left: calc(100vw - 90vw);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@media only screen and (max-width: 833px) {\r\n    .mybody {\r\n        margin-top: 5%;\r\n        width: 100%;\r\n        height: auto;\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        .myfooter {\r\n            width: 100%;\r\n            margin: 200px 50px 20px 50px;\r\n            padding: 10px 0 0 0;\r\n            display: flex;\r\n            justify-content: center;\r\n            font-weight: bold;\r\n            font-size: 12px;\r\n            color: rgba(0, 0, 0, .5);\r\n            border-top: solid 1px rgba(0, 0, 0, .2);\r\n            text-align: center;\r\n        }\r\n\r\n        .aboutme {\r\n            position: relative;\r\n            top: 10%;\r\n            right: calc(100vw - 95vw);\r\n\r\n            .aboutme-img {\r\n                right: calc(100vw - 100vw);\r\n                filter: blur(5px)\r\n            }\r\n\r\n            .aboutme-content {\r\n                z-index: 3;\r\n            }\r\n        }\r\n\r\n        .myskills {\r\n            position: relative;\r\n            margin-top: 600px;\r\n            width: 100vw;\r\n            height: 500px;\r\n            text-align: center;\r\n            padding: 0 calc(100vw - 95vw);\r\n\r\n            h1 {\r\n                top: 0;\r\n                font-weight: bold;\r\n                font-size: 36px;\r\n                margin-top: 100px;\r\n                text-transform: uppercase;\r\n\r\n                i {\r\n                    color: red;\r\n                }\r\n\r\n                span {\r\n                    color: red;\r\n                }\r\n            }\r\n\r\n            .card-zone {\r\n                display: flex;\r\n            }\r\n\r\n            .card-skill {\r\n                width: 168px;\r\n                height: 98px;\r\n                flex: 0 2 150px;\r\n                margin: 25px 50px;\r\n                font-size: 80px;\r\n                padding: 5px 0;\r\n                display: flex;\r\n                justify-content: center;\r\n                flex-grow: 1;\r\n            }\r\n        }\r\n\r\n        .myprojects {\r\n            position: relative;\r\n            margin-top: 600px;\r\n            width: 100vw;\r\n            height: 100%;\r\n            padding: 0 calc(100vw - 95vw);\r\n\r\n            .card-zone {\r\n\r\n                .card-project {\r\n                    border: solid 1px rgba(0, 0, 0, .3);\r\n                    width: calc(100vw - 30vw);\r\n                    height: 200px;\r\n                    padding: 15px;\r\n                    margin-bottom: 30px;\r\n\r\n                    &:hover {\r\n                        box-shadow: 0px 0px 5px red;\r\n                    }\r\n\r\n                    h1 {\r\n                        margin: 0;\r\n                        color: red;\r\n                        cursor: pointer;\r\n\r\n                        &:hover {\r\n                            animation: hoveranimnew .3s forwards;\r\n                        }\r\n                    }\r\n\r\n                    a {\r\n                        text-decoration: none;\r\n                    }\r\n\r\n                    .detail-box {\r\n                        margin-top: 10px;\r\n                        display: flex;\r\n                        flex-wrap: wrap;\r\n                        flex-grow: 1;\r\n                        flex-direction: row;\r\n                        justify-content: center;\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        .mycontact {\r\n            position: relative;\r\n            margin-top: 200px;\r\n            width: 100%;\r\n            height: 500px;\r\n            text-align: center;\r\n            padding: 0 calc(100vw - 95vw);\r\n\r\n            h3 {\r\n                top: 0;\r\n                font-weight: bold;\r\n                margin-top: 150px;\r\n                text-transform: uppercase;\r\n            }\r\n\r\n            h1 {\r\n                i {\r\n                    color: red;\r\n                }\r\n\r\n                span {\r\n                    color: red;\r\n                }\r\n            }\r\n\r\n            .myproimg {\r\n                margin-top: 100px;\r\n                border-radius: 50%;\r\n                border: solid 3px red;\r\n                background: linear-gradient(to right, rgb(255, 0, 0), rgb(0, 0, 0));\r\n                width: 200px;\r\n            }\r\n\r\n            .mybodywork {\r\n                display: flex;\r\n                justify-content: center;\r\n                align-items: center;\r\n                min-height: 200px;\r\n                width: 100%;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@media only screen and (max-width: 680px) {\r\n    .myheader {\r\n        padding: 0 20%;\r\n        padding-top: 20%;\r\n\r\n        .content-header {\r\n\r\n            .first-header-text {\r\n                position: absolute;\r\n                height: 35%;\r\n                right: 0;\r\n                z-index: 2;\r\n                margin-top: 10%;\r\n\r\n                h1 {\r\n                    font-weight: bold;\r\n                    font-size: 30px;\r\n                    margin-right: 20px;\r\n                }\r\n\r\n                #first-text {\r\n                    &::after {\r\n                        content: '';\r\n                        position: absolute;\r\n                        margin-left: 25px;\r\n                        width: 450px;\r\n                        height: 2px;\r\n                        top: 10%;\r\n                        background: linear-gradient(to right, rgb(255, 0, 0), rgb(0, 0, 0));\r\n                    }\r\n                }\r\n\r\n                #sub-text {\r\n                    font-weight: bold;\r\n                    font-size: 45px;\r\n                    background: linear-gradient(to right, rgb(255, 0, 0), rgb(0, 0, 0));\r\n                    -webkit-background-clip: text;\r\n                    -webkit-text-fill-color: transparent;\r\n                }\r\n\r\n                #sub-text2 {\r\n                    font-weight: bold;\r\n                    font-size: 25px;\r\n                    margin-right: 20px;\r\n                }\r\n            }\r\n\r\n            .my-btn-box {\r\n                right: calc(100vw - 98vw);\r\n\r\n                .my-cus-btn2 {\r\n                    margin-left: 20px;\r\n                    border-radius: 5px;\r\n                    font-size: 13px;\r\n                    padding: 1rem 2.5rem;\r\n                    color: black;\r\n                    text-transform: uppercase;\r\n                    font-weight: bold;\r\n                    border: solid 2px transparent;\r\n                    background-image: linear-gradient(rgba(255, 255, 255, 0), rgba(255, 255, 255, 0)), linear-gradient(to right, red, black);\r\n                    background-origin: border-box;\r\n                    background-clip: content-box, border-box;\r\n                    text-decoration: none;\r\n                    box-shadow: 0px 1000px 1px #fff inset;\r\n                    cursor: pointer;\r\n\r\n                    &:hover {\r\n                        animation: hoverbtn2 .5s forwards;\r\n                    }\r\n                }\r\n            }\r\n\r\n            .header-image {\r\n                filter: blur(5px);\r\n                margin-left: calc(100vw - 80vw);\r\n            }\r\n        }\r\n    }\r\n\r\n    .mybody {\r\n        margin-top: 5%;\r\n        width: 100%;\r\n        height: auto;\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        .myfooter {\r\n            width: calc(100vw + 15vw);\r\n        }\r\n\r\n        .aboutme {\r\n            position: relative;\r\n            top: 5%;\r\n            right: 0;\r\n\r\n            .aboutme-img {\r\n                right: -200px;\r\n                filter: blur(5px)\r\n            }\r\n\r\n            .aboutme-content {\r\n                z-index: 3;\r\n            }\r\n        }\r\n\r\n        .myskills {\r\n            position: relative;\r\n            margin-top: 600px;\r\n            width: 100vw;\r\n            height: 500px;\r\n            text-align: center;\r\n            padding: 0;\r\n            margin-left: 15%;\r\n        }\r\n\r\n        .myprojects {\r\n            position: relative;\r\n            margin-top: 600px;\r\n            width: 100vw;\r\n            height: 100%;\r\n            padding: 0;\r\n            margin-left: 15%;\r\n\r\n            .card-zone {\r\n\r\n                .card-project {\r\n                    border: solid 1px rgba(0, 0, 0, .3);\r\n                    width: calc(100vw - 30vw);\r\n                    height: 250px;\r\n                    padding: 15px;\r\n                    margin-bottom: 30px;\r\n                }\r\n            }\r\n        }\r\n\r\n        .mycontact {\r\n            position: relative;\r\n            margin-top: 200px;\r\n            width: 100%;\r\n            height: 500px;\r\n            text-align: center;\r\n            padding: 0;\r\n            margin-left: 15%;\r\n\r\n            h3 {\r\n                top: 0;\r\n                font-weight: bold;\r\n                margin-top: 150px;\r\n                text-transform: uppercase;\r\n            }\r\n\r\n            h1 {\r\n                i {\r\n                    color: red;\r\n                }\r\n\r\n                span {\r\n                    color: red;\r\n                }\r\n            }\r\n\r\n            .myproimg {\r\n                margin-top: 100px;\r\n                border-radius: 50%;\r\n                border: solid 3px red;\r\n                background: linear-gradient(to right, rgb(255, 0, 0), rgb(0, 0, 0));\r\n                width: 200px;\r\n            }\r\n\r\n            .mybodywork {\r\n                display: flex;\r\n                justify-content: center;\r\n                align-items: center;\r\n                min-height: 200px;\r\n                width: 100%;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@media only screen and (max-width: 634px) {\r\n\r\n    .mybody {\r\n        margin-top: 0;\r\n        width: 100%;\r\n        height: auto;\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        .myfooter {\r\n            margin-top: 0;\r\n            width: calc(100vw + 15vw);\r\n        }\r\n\r\n        .aboutme {\r\n            position: relative;\r\n            top: 5%;\r\n            right: 0;\r\n\r\n            .aboutme-img {\r\n                right: -200px;\r\n                filter: blur(5px)\r\n            }\r\n\r\n            .aboutme-content {\r\n                z-index: 3;\r\n            }\r\n        }\r\n\r\n        .myskills {\r\n            position: relative;\r\n            margin-top: 600px;\r\n            width: 100vw;\r\n            height: 500px;\r\n            text-align: center;\r\n            padding: 0;\r\n            margin-left: 15%;\r\n        }\r\n\r\n        .myprojects {\r\n            position: relative;\r\n            margin-top: 600px;\r\n            width: 100vw;\r\n            height: 100%;\r\n            padding: 0;\r\n            margin-left: 15%;\r\n\r\n            .card-zone {\r\n\r\n                .card-project {\r\n                    border: solid 1px rgba(0, 0, 0, .3);\r\n                    width: calc(100vw - 30vw);\r\n                    height: 250px;\r\n                    padding: 15px;\r\n                    margin-bottom: 30px;\r\n                }\r\n            }\r\n        }\r\n\r\n        .mycontact {\r\n            position: relative;\r\n            margin-top: 200px;\r\n            width: 100%;\r\n            height: 500px;\r\n            text-align: center;\r\n            padding: 0;\r\n            margin-left: 15%;\r\n\r\n            h3 {\r\n                top: 0;\r\n                font-weight: bold;\r\n                margin-top: 150px;\r\n                text-transform: uppercase;\r\n            }\r\n\r\n            h1 {\r\n                i {\r\n                    color: red;\r\n                }\r\n\r\n                span {\r\n                    color: red;\r\n                }\r\n            }\r\n\r\n            .myproimg {\r\n                margin-top: 100px;\r\n                border-radius: 50%;\r\n                border: solid 3px red;\r\n                background: linear-gradient(to right, rgb(255, 0, 0), rgb(0, 0, 0));\r\n                width: 200px;\r\n            }\r\n\r\n            .mybodywork {\r\n                display: flex;\r\n                justify-content: center;\r\n                align-items: center;\r\n                min-height: 200px;\r\n                width: 100%;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@media only screen and (max-width: 580px) {\r\n\r\n    .mybody {\r\n        margin-top: 0;\r\n        width: 100%;\r\n        height: auto;\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        .myfooter {\r\n            width: calc(100vw + 25vw);\r\n            margin-top: 0;\r\n        }\r\n\r\n        .aboutme {\r\n            position: relative;\r\n            top: 5%;\r\n            right: 0;\r\n\r\n            .aboutme-img {\r\n                right: -200px;\r\n                filter: blur(5px)\r\n            }\r\n\r\n            .aboutme-content {\r\n                z-index: 3;\r\n            }\r\n        }\r\n\r\n        .myskills {\r\n            position: relative;\r\n            margin-top: 600px;\r\n            width: 100vw;\r\n            height: 500px;\r\n            text-align: center;\r\n            padding: 0;\r\n            margin-left: 20%;\r\n        }\r\n\r\n        .myprojects {\r\n            position: relative;\r\n            margin-top: 600px;\r\n            width: 100vw;\r\n            height: 100%;\r\n            padding: 0;\r\n            margin-left: 20%;\r\n\r\n            .card-zone {\r\n\r\n                .card-project {\r\n                    border: solid 1px rgba(0, 0, 0, .3);\r\n                    width: calc(100vw - 30vw);\r\n                    height: 250px;\r\n                    padding: 15px;\r\n                    margin-bottom: 30px;\r\n                }\r\n            }\r\n        }\r\n\r\n        .mycontact {\r\n            position: relative;\r\n            margin-top: 200px;\r\n            width: 100%;\r\n            height: 500px;\r\n            text-align: center;\r\n            padding: 0;\r\n            margin-left: 20%;\r\n\r\n            h3 {\r\n                top: 0;\r\n                font-weight: bold;\r\n                margin-top: 150px;\r\n                text-transform: uppercase;\r\n            }\r\n\r\n            h1 {\r\n                i {\r\n                    color: red;\r\n                }\r\n\r\n                span {\r\n                    color: red;\r\n                }\r\n            }\r\n\r\n            .myproimg {\r\n                margin-top: 100px;\r\n                border-radius: 50%;\r\n                border: solid 3px red;\r\n                background: linear-gradient(to right, rgb(255, 0, 0), rgb(0, 0, 0));\r\n                width: 200px;\r\n            }\r\n\r\n            .mybodywork {\r\n                display: flex;\r\n                justify-content: center;\r\n                align-items: center;\r\n                min-height: 200px;\r\n                width: 100%;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@media only screen and (max-width: 500px) {\r\n    .mybody {\r\n        margin-top: 0;\r\n        width: 120%;\r\n        height: auto;\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        .myfooter {\r\n            margin-top: 0;\r\n            width: calc(100vw + 40vw);\r\n        }\r\n\r\n        .aboutme {\r\n            position: relative;\r\n            top: 5%;\r\n            right: 0;\r\n\r\n            .aboutme-img {\r\n                right: -200px;\r\n                filter: blur(5px)\r\n            }\r\n\r\n            .aboutme-content {\r\n                z-index: 3;\r\n            }\r\n        }\r\n\r\n        .myskills {\r\n            position: relative;\r\n            margin-top: 600px;\r\n            width: 120vw;\r\n            height: 500px;\r\n            text-align: center;\r\n            padding: 0;\r\n            margin-left: 15%;\r\n        }\r\n\r\n        .myprojects {\r\n            position: relative;\r\n            margin-top: 600px;\r\n            width: 120vw;\r\n            height: 100%;\r\n            padding: 0;\r\n            margin-left: 15%;\r\n\r\n            .card-zone {\r\n\r\n                .card-project {\r\n                    border: solid 1px rgba(0, 0, 0, .3);\r\n                    width: calc(100vw - 20vw);\r\n                    height: 250px;\r\n                    padding: 15px;\r\n                    margin-bottom: 30px;\r\n                }\r\n            }\r\n        }\r\n\r\n        .mycontact {\r\n            position: relative;\r\n            margin-top: 200px;\r\n            width: 100%;\r\n            height: 500px;\r\n            text-align: center;\r\n            padding: 0;\r\n            margin-left: 15%;\r\n\r\n            h3 {\r\n                top: 0;\r\n                font-weight: bold;\r\n                margin-top: 150px;\r\n                text-transform: uppercase;\r\n            }\r\n\r\n            h1 {\r\n                i {\r\n                    color: red;\r\n                }\r\n\r\n                span {\r\n                    color: red;\r\n                }\r\n            }\r\n\r\n            .myproimg {\r\n                margin-top: 100px;\r\n                border-radius: 50%;\r\n                border: solid 3px red;\r\n                background: linear-gradient(to right, rgb(255, 0, 0), rgb(0, 0, 0));\r\n                width: 200px;\r\n            }\r\n\r\n            .mybodywork {\r\n                display: flex;\r\n                justify-content: center;\r\n                align-items: center;\r\n                min-height: 200px;\r\n                width: 100%;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@media only screen and (max-width: 425px) {\r\n    .myheader {\r\n        padding: 0 5%;\r\n        padding-top: 25%;\r\n\r\n        .content-header {\r\n            .first-header-text {\r\n                position: absolute;\r\n                height: 35%;\r\n                left: 20%;\r\n                z-index: 2;\r\n                margin-top: 10%;\r\n\r\n                h1 {\r\n                    font-weight: bold;\r\n                    font-size: 30px;\r\n                    margin-right: 20px;\r\n                    width: 450px;\r\n                }\r\n\r\n                #first-text {\r\n                    &::after {\r\n                        content: '';\r\n                        position: absolute;\r\n                        margin-left: 25px;\r\n                        width: 450px;\r\n                        height: 2px;\r\n                        top: 10%;\r\n                        background: linear-gradient(to right, rgb(255, 0, 0), rgb(0, 0, 0));\r\n                    }\r\n                }\r\n\r\n                #sub-text {\r\n                    font-weight: bold;\r\n                    font-size: 45px;\r\n                    background: linear-gradient(to right, rgb(255, 0, 0), rgb(0, 0, 0));\r\n                    -webkit-background-clip: text;\r\n                    -webkit-text-fill-color: transparent;\r\n                }\r\n\r\n                #sub-text2 {\r\n                    font-weight: bold;\r\n                    font-size: 25px;\r\n                    margin-right: 20px;\r\n                }\r\n            }\r\n\r\n            .my-btn-box {\r\n                left: 20%;\r\n                width: 120%;\r\n\r\n                .my-cus-btn1 {\r\n                    font-size: 20px;\r\n                }\r\n\r\n                .my-cus-btn2 {\r\n                    font-size: 20px;\r\n                }\r\n            }\r\n\r\n            .header-image {\r\n                filter: blur(5px);\r\n                margin-left: calc(100vw - 80vw);\r\n            }\r\n        }\r\n    }\r\n\r\n    .mybody {\r\n        margin-top: 0;\r\n        width: 120%;\r\n        height: auto;\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        .myfooter {\r\n            margin-top: 0;\r\n            width: calc(100vw + 45vw);\r\n        }\r\n\r\n        .aboutme {\r\n            position: relative;\r\n            top: 5%;\r\n            right: 0;\r\n\r\n            .aboutme-img {\r\n                right: -200px;\r\n                filter: blur(5px)\r\n            }\r\n\r\n            .aboutme-content {\r\n                z-index: 3;\r\n            }\r\n        }\r\n\r\n        .myskills {\r\n            position: relative;\r\n            margin-top: 600px;\r\n            width: 135vw;\r\n            height: 500px;\r\n            text-align: center;\r\n            padding: 0;\r\n            margin-left: 15%;\r\n        }\r\n\r\n        .myprojects {\r\n            position: relative;\r\n            margin-top: 600px;\r\n            width: 135vw;\r\n            height: 100%;\r\n            padding: 0;\r\n            margin-left: 15%;\r\n\r\n            .card-zone {\r\n\r\n                .card-project {\r\n                    border: solid 1px rgba(0, 0, 0, .3);\r\n                    width: calc(100vw - 10vw);\r\n                    height: 250px;\r\n                    padding: 15px;\r\n                    margin-bottom: 30px;\r\n                }\r\n            }\r\n        }\r\n\r\n        .mycontact {\r\n            position: relative;\r\n            margin-top: 200px;\r\n            width: 135vw;\r\n            height: 500px;\r\n            text-align: center;\r\n            padding: 0;\r\n            margin-left: 15%;\r\n\r\n            h3 {\r\n                top: 0;\r\n                font-weight: bold;\r\n                margin-top: 150px;\r\n                text-transform: uppercase;\r\n            }\r\n\r\n            h1 {\r\n                i {\r\n                    color: red;\r\n                }\r\n\r\n                span {\r\n                    color: red;\r\n                }\r\n            }\r\n\r\n            .myproimg {\r\n                margin-top: 100px;\r\n                border-radius: 50%;\r\n                border: solid 3px red;\r\n                background: linear-gradient(to right, rgb(255, 0, 0), rgb(0, 0, 0));\r\n                width: 200px;\r\n            }\r\n\r\n            .mybodywork {\r\n                display: flex;\r\n                justify-content: center;\r\n                align-items: center;\r\n                min-height: 200px;\r\n                width: 100%;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@media only screen and (max-width: 370px) {\r\n    .myheader {\r\n        padding: 0 5%;\r\n        padding-top: 25%;\r\n\r\n        .content-header {\r\n            .first-header-text {\r\n                position: absolute;\r\n                height: 35%;\r\n                left: 20%;\r\n                z-index: 2;\r\n                margin-top: 10%;\r\n\r\n                h1 {\r\n                    font-weight: bold;\r\n                    font-size: 30px;\r\n                    margin-right: 20px;\r\n                }\r\n\r\n                #first-text {\r\n                    &::after {\r\n                        content: '';\r\n                        position: absolute;\r\n                        margin-left: 25px;\r\n                        width: 450px;\r\n                        height: 2px;\r\n                        top: 10%;\r\n                        background: linear-gradient(to right, rgb(255, 0, 0), rgb(0, 0, 0));\r\n                    }\r\n                }\r\n\r\n                #sub-text {\r\n                    font-weight: bold;\r\n                    font-size: 35px;\r\n                    background: linear-gradient(to right, rgb(255, 0, 0), rgb(0, 0, 0));\r\n                    -webkit-background-clip: text;\r\n                    -webkit-text-fill-color: transparent;\r\n                }\r\n\r\n                #sub-text2 {\r\n                    font-weight: bold;\r\n                    font-size: 25px;\r\n                    margin-right: 20px;\r\n                }\r\n            }\r\n\r\n            .my-btn-box {\r\n                left: 20%;\r\n                width: 120%;\r\n\r\n                .my-cus-btn1 {\r\n                    font-size: 15px;\r\n                }\r\n\r\n                .my-cus-btn2 {\r\n                    font-size: 15px;\r\n                }\r\n            }\r\n\r\n            .header-image {\r\n                filter: blur(5px);\r\n                margin-left: calc(100vw - 80vw);\r\n            }\r\n        }\r\n    }\r\n\r\n    .mybody {\r\n        margin-top: 0;\r\n        width: 120%;\r\n        height: auto;\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        .myfooter {\r\n            margin-top: 0;\r\n            width: calc(100vw + 75vw);\r\n        }\r\n\r\n        .aboutme {\r\n            position: relative;\r\n            top: 5%;\r\n            right: 0;\r\n\r\n            .aboutme-img {\r\n                right: -200px;\r\n                filter: blur(5px)\r\n            }\r\n\r\n            .aboutme-content {\r\n                z-index: 3;\r\n            }\r\n        }\r\n\r\n        .myskills {\r\n            position: relative;\r\n            margin-top: 600px;\r\n            width: 160vw;\r\n            height: 500px;\r\n            text-align: center;\r\n            padding: 0;\r\n            margin-left: 15%;\r\n        }\r\n\r\n        .myprojects {\r\n            position: relative;\r\n            margin-top: 600px;\r\n            width: 160vw;\r\n            height: 100%;\r\n            padding: 0;\r\n            margin-left: 15%;\r\n\r\n            .card-zone {\r\n\r\n                .card-project {\r\n                    border: solid 1px rgba(0, 0, 0, .3);\r\n                    width: 125vw;\r\n                    height: calc(100%);\r\n                    padding: 15px;\r\n                    margin-bottom: 30px;\r\n                }\r\n            }\r\n        }\r\n\r\n        .mycontact {\r\n            position: relative;\r\n            margin-top: 200px;\r\n            width: 160vw;\r\n            height: 500px;\r\n            text-align: center;\r\n            padding: 0;\r\n            margin-left: 15%;\r\n\r\n            h3 {\r\n                top: 0;\r\n                font-weight: bold;\r\n                margin-top: 150px;\r\n                text-transform: uppercase;\r\n            }\r\n\r\n            h1 {\r\n                font-weight: bold;\r\n\r\n                i {\r\n                    color: red;\r\n                }\r\n\r\n                span {\r\n                    color: red;\r\n                }\r\n            }\r\n\r\n            .myproimg {\r\n                margin-top: 100px;\r\n                border-radius: 50%;\r\n                border: solid 3px red;\r\n                background: linear-gradient(to right, rgb(255, 0, 0), rgb(0, 0, 0));\r\n                width: 200px;\r\n            }\r\n\r\n            .mybodywork {\r\n                display: flex;\r\n                justify-content: center;\r\n                align-items: center;\r\n                min-height: 200px;\r\n                width: 100%;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@media only screen and (max-width: 312px) {\r\n    .mybody {\r\n        margin-top: 0;\r\n        width: 120%;\r\n        height: auto;\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        .aboutme {\r\n            position: relative;\r\n            top: 5%;\r\n            right: 0;\r\n\r\n            .aboutme-img {\r\n                right: -200px;\r\n                filter: blur(5px)\r\n            }\r\n\r\n            .aboutme-content {\r\n                z-index: 3;\r\n            }\r\n        }\r\n\r\n        .myskills {\r\n            position: relative;\r\n            margin-top: 600px;\r\n            width: 180vw;\r\n            height: 500px;\r\n            text-align: center;\r\n            padding: 0;\r\n            margin-left: 15%;\r\n        }\r\n\r\n        .myprojects {\r\n            position: relative;\r\n            margin-top: 600px;\r\n            width: 150vw;\r\n            height: 100%;\r\n            padding: 0;\r\n            margin-left: 15%;\r\n\r\n            .card-zone {\r\n\r\n                .card-project {\r\n                    border: solid 1px rgba(0, 0, 0, .3);\r\n                    width: 115vw;\r\n                    height: 225px;\r\n                    padding: 15px;\r\n                    margin-bottom: 30px;\r\n                }\r\n            }\r\n        }\r\n\r\n        .mycontact {\r\n            position: relative;\r\n            margin-top: 200px;\r\n            width: 150vw;\r\n            height: 500px;\r\n            text-align: center;\r\n            padding: 0;\r\n            margin-left: 15%;\r\n\r\n            h3 {\r\n                top: 0;\r\n                font-weight: bold;\r\n                margin-top: 150px;\r\n                text-transform: uppercase;\r\n            }\r\n\r\n            h1 {\r\n                i {\r\n                    color: red;\r\n                }\r\n\r\n                span {\r\n                    color: red;\r\n                }\r\n            }\r\n\r\n            .myproimg {\r\n                margin-top: 100px;\r\n                border-radius: 50%;\r\n                border: solid 3px red;\r\n                background: linear-gradient(to right, rgb(255, 0, 0), rgb(0, 0, 0));\r\n                width: 200px;\r\n            }\r\n\r\n            .mybodywork {\r\n                display: flex;\r\n                justify-content: center;\r\n                align-items: center;\r\n                min-height: 200px;\r\n                width: 100%;\r\n            }\r\n        }\r\n    }\r\n}","@import url(\"https://fonts.googleapis.com/css2?family=Poppins:wght@600&display=swap\");\n:root {\n  --color-gradient: linear-gradient(to right, #ff2400, #e81d1d, #e8b71d, #e3e81d, #1de840, #1ddde8, #2b1de8, #dd00f3,\r\n            #dd00f3)\r\n; }\n\n@keyframes make_drop_shadow {\n  from { }\n  to {\n    filter: drop-shadow(0 0 5px darkgray); } }\n\n@keyframes start-anim {\n  from {\n    transform: translateY(-100px);\n    opacity: 0; }\n  to {\n    transform: translateY(0);\n    opacity: 1; } }\n\n@keyframes fixed-top-anim {\n  from {\n    transform: translateY(-100px);\n    opacity: 0; }\n  to {\n    transform: translateY(0);\n    opacity: 1; } }\n\n/* scroll progress */\n@keyframes animateprogressbar {\n  0%,\n  100% {\n    filter: hue-rotate(0deg); }\n  50% {\n    filter: hue-rotate(360deg); } }\n\n@keyframes animatescrollbar {\n  0%,\n  100% {\n    filter: hue-rotate(0deg); }\n  50% {\n    filter: hue-rotate(360deg); } }\n\n@keyframes hoverbtn1 {\n  from {\n    color: #fff;\n    /* box-shadow: 0 10px 30px rgba(255, 0, 0, .3); */ }\n  to {\n    color: #000;\n    border: solid 2px transparent;\n    background-image: linear-gradient(rgba(255, 255, 255, 0), rgba(255, 255, 255, 0)), linear-gradient(to right, red, black);\n    background-origin: border-box;\n    background-clip: content-box, border-box;\n    box-shadow: 0px 1000px 1px #fff inset; } }\n\n@keyframes hoverbtn2 {\n  from {\n    color: #000;\n    /* box-shadow: 0 0px 0px rgba(255, 0, 0, .3); */ }\n  to {\n    color: #fff;\n    box-shadow: 0px 0px 0px #fff; } }\n\n@keyframes hoverbtn3 {\n  from {\n    color: #fff;\n    /* box-shadow: 0 10px 30px rgba(255, 0, 0, .3); */ }\n  to {\n    color: #000;\n    border: solid 2px transparent;\n    background-image: linear-gradient(rgba(255, 255, 255, 0), rgba(255, 255, 255, 0)), linear-gradient(to right, red, black);\n    background-origin: border-box;\n    background-clip: content-box, border-box;\n    box-shadow: 0px 1000px 1px #fff inset; } }\n\n@keyframes zoomin-anim {\n  from {\n    font-size: 80px; }\n  to {\n    font-size: 100px; } }\n\n@keyframes zoomin-anim2 {\n  from {\n    width: 80px;\n    height: 80px; }\n  to {\n    width: 100px;\n    height: 100px; } }\n\n@keyframes hoveranimnew {\n  from {\n    color: red; }\n  to {\n    color: #b81515; } }\n\n* {\n  margin: 0;\n  padding: 0;\n  -moz-box-sizing: border-box;\n       box-sizing: border-box;\n  font-family: 'Poppins';\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none; }\n\n.line {\n  width: 100%;\n  height: 100%;\n  display: grid;\n  place-items: center; }\n\n.back-btn-arrow {\n  font-size: 5rem;\n  background: linear-gradient(to right, red, black);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent; }\n  .back-btn-arrow:hover {\n    animation: make_drop_shadow .3s forwards; }\n\n.Myresume {\n  display: grid;\n  place-items: center; }\n\n.App {\n  text-align: center; }\n\n.box-content-nav {\n  display: -moz-box;\n  display: flex;\n  overflow: hidden; }\n\n.my-nav {\n  width: 100%;\n  height: 70px;\n  background: white;\n  display: -moz-box;\n  display: flex;\n  -moz-box-pack: start;\n       justify-content: flex-start;\n  animation: start-anim .5s forwards;\n  position: fixed;\n  top: 0; }\n  .my-nav .mylogo {\n    display: -moz-box;\n    display: flex;\n    -moz-box-orient: horizontal;\n    -moz-box-direction: normal;\n         flex-direction: row;\n    padding: 0 35px; }\n    .my-nav .mylogo img {\n      padding: 5px 0;\n      width: 80px;\n      height: 80px; }\n    .my-nav .mylogo #mytext {\n      font-weight: bolder;\n      position: relative;\n      top: 20px;\n      background: linear-gradient(to right, red, black);\n      -webkit-background-clip: text;\n      -webkit-text-fill-color: transparent; }\n  .my-nav .my-list-box {\n    display: -moz-box;\n    display: flex;\n    -moz-box-orient: horizontal;\n    -moz-box-direction: normal;\n         flex-direction: row;\n    padding-left: calc(100vw - 1000px); }\n\n.fixed-top {\n  position: fixed;\n  z-index: 1000;\n  box-shadow: 0 5px 3px rgba(0, 0, 0, 0.5);\n  top: 0;\n  height: 70px !important;\n  animation: fixed-top-anim .5s forwards; }\n\n.has-focus {\n  background: linear-gradient(to right, red, black);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent; }\n\n.mynav-list {\n  list-style-type: none;\n  display: -moz-box;\n  display: flex;\n  padding: 10px;\n  position: relative;\n  top: 15px;\n  text-transform: uppercase;\n  font-weight: bolder; }\n  .mynav-list li {\n    padding: 0 10px;\n    margin-right: 35px;\n    cursor: pointer; }\n\n.myprogressbar {\n  padding: 0;\n  margin: 0; }\n\n#progressbar {\n  z-index: 99;\n  position: fixed;\n  top: 70px;\n  left: 0;\n  height: 5px;\n  border-top-right-radius: 15px;\n  border-bottom-right-radius: 15px;\n  border-top-left-radius: 15px;\n  border-bottom-left-radius: 15px;\n  background: linear-gradient(to top, #008aff, #00ffe7);\n  animation: animateprogressbar 5s linear infinite; }\n  #progressbar::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(to top, #008aff, #00ffe7);\n    filter: blur(10px); }\n  #progressbar::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(to top, #008aff, #00ffe7);\n    filter: blur(10px);\n    filter: blur(10px); }\n\n#percent {\n  z-index: 99;\n  position: absolute;\n  top: 63px;\n  left: 0;\n  background: linear-gradient(to right, red, black);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  font-size: .8em;\n  display: none;\n  font-weight: bold; }\n\n::-webkit-scrollbar {\n  width: 5px;\n  border: 13px;\n  background-color: #f1f1f1; }\n  ::-webkit-scrollbar:hover {\n    width: 10px; }\n\n::-webkit-scrollbar-thumb {\n  background: red;\n  border-radius: 50px;\n  cursor: pointer; }\n\n.myheader {\n  width: 100%;\n  height: 800px;\n  padding: 0 20%;\n  text-transform: uppercase;\n  padding-top: 10%; }\n  .myheader .content-header {\n    height: 80%;\n    position: relative; }\n    .myheader .content-header .first-header-text {\n      position: absolute;\n      height: 35%;\n      right: 0;\n      z-index: 2; }\n      .myheader .content-header .first-header-text h1 {\n        font-weight: bold;\n        font-size: 40px;\n        margin-right: 20px; }\n      .myheader .content-header .first-header-text #first-text::after {\n        content: '';\n        position: absolute;\n        margin-left: 40px;\n        width: 450px;\n        height: 2px;\n        top: 18%;\n        background: linear-gradient(to right, red, black); }\n      .myheader .content-header .first-header-text #sub-text {\n        font-weight: bold;\n        font-size: 70px;\n        background: linear-gradient(to right, red, black);\n        -webkit-background-clip: text;\n        -webkit-text-fill-color: transparent; }\n      .myheader .content-header .first-header-text #sub-text2 {\n        font-weight: bold;\n        font-size: 40px;\n        margin-right: 20px; }\n    .myheader .content-header .my-btn-box {\n      display: -moz-box;\n      display: flex;\n      -moz-box-pack: start;\n           justify-content: flex-start;\n      position: absolute;\n      top: 50%;\n      right: 16%;\n      z-index: 3; }\n      .myheader .content-header .my-btn-box .my-cus-btn1 {\n        border-radius: 5px;\n        font-size: 14px;\n        padding: 1rem 2.5rem;\n        color: white;\n        text-transform: uppercase;\n        font-weight: bold;\n        border: solid 2px transparent;\n        background-image: linear-gradient(rgba(255, 255, 255, 0), rgba(255, 255, 255, 0)), linear-gradient(to right, red, black);\n        background-origin: border-box;\n        background-clip: content-box, border-box;\n        text-decoration: none; }\n        .myheader .content-header .my-btn-box .my-cus-btn1:hover {\n          animation: hoverbtn1 .5s forwards; }\n      .myheader .content-header .my-btn-box .my-cus-btn2 {\n        margin-left: 20px;\n        border-radius: 5px;\n        font-size: 14px;\n        padding: 1rem 2.5rem;\n        color: black;\n        text-transform: uppercase;\n        font-weight: bold;\n        border: solid 2px transparent;\n        background-image: linear-gradient(rgba(255, 255, 255, 0), rgba(255, 255, 255, 0)), linear-gradient(to right, red, black);\n        background-origin: border-box;\n        background-clip: content-box, border-box;\n        text-decoration: none;\n        box-shadow: 0px 1000px 1px #fff inset;\n        cursor: pointer; }\n        .myheader .content-header .my-btn-box .my-cus-btn2:hover {\n          animation: hoverbtn2 .5s forwards; }\n    .myheader .content-header .header-image {\n      position: absolute;\n      top: -30%;\n      left: -10%;\n      transform: scalex(-1); }\n\n.mybody {\n  margin-top: 5%;\n  width: 99vw;\n  height: auto;\n  display: -moz-box;\n  display: flex;\n  -moz-box-orient: vertical;\n  -moz-box-direction: normal;\n       flex-direction: column; }\n  .mybody .myfooter {\n    margin: 200px 50px 20px 50px;\n    padding: 10px 0 0 0;\n    display: -moz-box;\n    display: flex;\n    -moz-box-pack: center;\n         justify-content: center;\n    font-weight: bold;\n    font-size: 12px;\n    color: rgba(0, 0, 0, 0.5);\n    border-top: solid 1px rgba(0, 0, 0, 0.2);\n    text-align: center; }\n  .mybody .aboutme {\n    position: relative;\n    top: 10%;\n    right: 10%; }\n    .mybody .aboutme .aboutme-img {\n      position: absolute;\n      top: 50%;\n      right: 10%; }\n    .mybody .aboutme .aboutme-content {\n      position: absolute;\n      left: 20%;\n      padding-left: 5%;\n      padding-top: 5%; }\n      .mybody .aboutme .aboutme-content h1 {\n        font-weight: bold;\n        font-size: 36px; }\n      .mybody .aboutme .aboutme-content .my-cus-btn3 {\n        margin-top: 20px;\n        border-radius: 5px;\n        font-size: 14px;\n        padding: 1rem 3rem;\n        color: white;\n        text-transform: uppercase;\n        font-weight: bold;\n        border: solid 2px transparent;\n        background-image: linear-gradient(rgba(255, 255, 255, 0), rgba(255, 255, 255, 0)), linear-gradient(to right, red, black);\n        background-origin: border-box;\n        background-clip: content-box, border-box; }\n        .mybody .aboutme .aboutme-content .my-cus-btn3:hover {\n          animation: hoverbtn3 .5s forwards; }\n  .mybody .myskills {\n    position: relative;\n    margin-top: 600px;\n    width: 100%;\n    height: 500px;\n    text-align: center;\n    padding: 0 400px; }\n    .mybody .myskills h1 {\n      top: 0;\n      font-weight: bold;\n      font-size: 36px;\n      margin-top: 100px;\n      text-transform: uppercase; }\n      .mybody .myskills h1 i {\n        color: red; }\n      .mybody .myskills h1 span {\n        color: red; }\n    .mybody .myskills .card-zone {\n      display: -moz-box;\n      display: flex;\n      flex-wrap: wrap;\n      flex-shrink: 1;\n      -moz-box-pack: center;\n           justify-content: center;\n      margin-top: 100px; }\n    .mybody .myskills .card-skill {\n      width: 168px;\n      height: 98px;\n      -moz-box-flex: 0;\n           flex: 0 2 150px;\n      margin: 25px 50px;\n      font-size: 80px;\n      padding: 5px 0;\n      display: -moz-box;\n      display: flex;\n      -moz-box-pack: center;\n           justify-content: center; }\n      .mybody .myskills .card-skill .drop-shadow:hover {\n        animation: .3s make_drop_shadow forwards; }\n  .mybody .myprojects {\n    position: relative;\n    margin-top: 200px;\n    width: 100%;\n    height: 500px;\n    text-align: center;\n    padding: 0 200px; }\n    .mybody .myprojects h1 {\n      top: 0;\n      font-weight: bold;\n      font-size: 36px;\n      margin-top: 100px; }\n      .mybody .myprojects h1 i {\n        color: red; }\n      .mybody .myprojects h1 span {\n        color: red; }\n    .mybody .myprojects .card-zone {\n      display: -moz-box;\n      display: flex;\n      flex-wrap: wrap;\n      flex-shrink: 1;\n      -moz-box-pack: center;\n           justify-content: center;\n      margin-top: 100px; }\n      .mybody .myprojects .card-zone .card-project {\n        border: solid 1px rgba(0, 0, 0, 0.3);\n        width: 1450px;\n        height: 155px;\n        padding: 15px;\n        margin-bottom: 30px; }\n        .mybody .myprojects .card-zone .card-project:hover {\n          box-shadow: 0px 0px 5px red; }\n        .mybody .myprojects .card-zone .card-project h1 {\n          margin: 0;\n          color: red;\n          cursor: pointer; }\n          .mybody .myprojects .card-zone .card-project h1:hover {\n            animation: hoveranimnew .3s forwards; }\n        .mybody .myprojects .card-zone .card-project a {\n          text-decoration: none; }\n        .mybody .myprojects .card-zone .card-project .detail-box {\n          margin-top: 10px;\n          display: -moz-box;\n          display: flex;\n          -moz-box-orient: horizontal;\n          -moz-box-direction: normal;\n               flex-direction: row;\n          -moz-box-pack: center;\n               justify-content: center; }\n          .mybody .myprojects .card-zone .card-project .detail-box .detail-data-box {\n            color: white;\n            margin-right: 10px; }\n            .mybody .myprojects .card-zone .card-project .detail-box .detail-data-box .text-q-box {\n              background: rgba(0, 0, 0, 0.7);\n              padding: 0 5px;\n              border-top-left-radius: 3px;\n              border-bottom-left-radius: 3px; }\n            .mybody .myprojects .card-zone .card-project .detail-box .detail-data-box .text-a-box {\n              padding: 0 5px;\n              border-top-right-radius: 3px;\n              border-bottom-right-radius: 3px; }\n              .mybody .myprojects .card-zone .card-project .detail-box .detail-data-box .text-a-box.a1 {\n                background: #0dd80d; }\n              .mybody .myprojects .card-zone .card-project .detail-box .detail-data-box .text-a-box.a2 {\n                background: #036fc4; }\n              .mybody .myprojects .card-zone .card-project .detail-box .detail-data-box .text-a-box.a3 {\n                background: plum; }\n              .mybody .myprojects .card-zone .card-project .detail-box .detail-data-box .text-a-box.a4 {\n                background: green; }\n              .mybody .myprojects .card-zone .card-project .detail-box .detail-data-box .text-a-box.a5 {\n                background: #e75151; }\n  .mybody .mycontact {\n    position: relative;\n    margin-top: 400px;\n    width: 100%;\n    height: 500px;\n    text-align: center;\n    padding: 0 200px; }\n    .mybody .mycontact h3 {\n      top: 0;\n      font-weight: bold;\n      margin-top: 150px;\n      text-transform: uppercase; }\n    .mybody .mycontact h1 {\n      font-weight: bold;\n      font-size: 36px;\n      text-transform: uppercase; }\n      .mybody .mycontact h1 i {\n        color: red; }\n      .mybody .mycontact h1 span {\n        color: red; }\n    .mybody .mycontact .myproimg {\n      margin-top: 100px;\n      border-radius: 50%;\n      border: solid 3px red;\n      background: linear-gradient(to right, red, black);\n      width: 200px; }\n    .mybody .mycontact .mybodywork {\n      display: -moz-box;\n      display: flex;\n      -moz-box-pack: center;\n           justify-content: center;\n      -moz-box-align: center;\n           align-items: center;\n      min-height: 200px;\n      width: 100%; }\n      .mybody .mycontact .mybodywork ul {\n        position: relative;\n        display: -moz-box;\n        display: flex;\n        padding: 0; }\n        .mybody .mycontact .mybodywork ul li {\n          position: relative;\n          list-style: none; }\n          .mybody .mycontact .mybodywork ul li a {\n            position: relative;\n            width: 80px;\n            height: 80px;\n            display: -moz-box;\n            display: flex;\n            -moz-box-pack: center;\n                 justify-content: center;\n            -moz-box-align: center;\n                 align-items: center;\n            background: white;\n            margin: 0 10px;\n            text-decoration: none;\n            font-size: 30px;\n            border-radius: 50%;\n            color: #e2e2e2;\n            box-shadow: inset -1px -1px 2px rgba(0, 0, 0, 0.2), 2px 2px 5px rgba(0, 0, 0, 0.2);\n            transition: .5s; }\n            .mybody .mycontact .mybodywork ul li a:hover {\n              color: #999;\n              transform: translateY(-20px);\n              box-shadow: inset -1px -1px 2px rgba(0, 0, 0, 0.2), 2px 24px 10px rgba(0, 0, 0, 0.1); }\n            .mybody .mycontact .mybodywork ul li a:before {\n              content: '';\n              position: absolute;\n              top: 10px;\n              left: 10px;\n              right: 10px;\n              bottom: 10px;\n              border-radius: 50%;\n              border: 2px solid rgba(0, 0, 0, 0.1); }\n            .mybody .mycontact .mybodywork ul li a .fab {\n              color: #fff;\n              position: relative;\n              z-index: 2; }\n            .mybody .mycontact .mybodywork ul li a .fas {\n              color: #fff;\n              position: relative;\n              z-index: 2; }\n          .mybody .mycontact .mybodywork ul li:nth-child(1) a::before {\n            background: #ea4c89; }\n          .mybody .mycontact .mybodywork ul li:nth-child(2) a::before {\n            background: #000; }\n          .mybody .mycontact .mybodywork ul li:nth-child(3) a::before {\n            background: #1877f2; }\n          .mybody .mycontact .mybodywork ul li:nth-child(4) a::before {\n            background: #25d366; }\n\n@media only screen and (max-width: 1799px) {\n  .mybody {\n    margin-top: 5%;\n    width: 100%;\n    height: auto;\n    display: -moz-box;\n    display: flex;\n    -moz-box-orient: vertical;\n    -moz-box-direction: normal;\n         flex-direction: column; }\n    .mybody .myfooter {\n      width: 100%;\n      margin: 200px 50px 20px 50px;\n      padding: 10px 0 0 0;\n      display: -moz-box;\n      display: flex;\n      -moz-box-pack: center;\n           justify-content: center;\n      font-weight: bold;\n      font-size: 12px;\n      color: rgba(0, 0, 0, 0.5);\n      border-top: solid 1px rgba(0, 0, 0, 0.2);\n      text-align: center; }\n    .mybody .aboutme {\n      position: relative;\n      top: 10%;\n      right: calc(100vw - 95vw); }\n      .mybody .aboutme .aboutme-img {\n        right: calc(100vw - 100vw);\n        filter: blur(5px); }\n      .mybody .aboutme .aboutme-content {\n        z-index: 3; }\n    .mybody .myskills {\n      position: relative;\n      margin-top: 600px;\n      width: 100vw;\n      height: 500px;\n      text-align: center;\n      padding: 0 calc(100vw - 95vw); }\n      .mybody .myskills h1 {\n        top: 0;\n        font-weight: bold;\n        font-size: 36px;\n        margin-top: 100px;\n        text-transform: uppercase; }\n        .mybody .myskills h1 i {\n          color: red; }\n        .mybody .myskills h1 span {\n          color: red; }\n      .mybody .myskills .card-zone {\n        display: -moz-box;\n        display: flex; }\n      .mybody .myskills .card-skill {\n        width: 168px;\n        height: 98px;\n        -moz-box-flex: 0;\n             flex: 0 2 150px;\n        margin: 25px 50px;\n        font-size: 80px;\n        padding: 5px 0;\n        display: -moz-box;\n        display: flex;\n        -moz-box-pack: center;\n             justify-content: center;\n        -moz-box-flex: 1;\n             flex-grow: 1; }\n    .mybody .myprojects {\n      position: relative;\n      margin-top: 300px;\n      width: 100vw;\n      height: 100%;\n      padding: 0 calc(100vw - 95vw); }\n      .mybody .myprojects .card-zone .card-project {\n        border: solid 1px rgba(0, 0, 0, 0.3);\n        width: calc(100vw - 30vw);\n        height: 200px;\n        padding: 15px;\n        margin-bottom: 30px; }\n        .mybody .myprojects .card-zone .card-project:hover {\n          box-shadow: 0px 0px 5px red; }\n        .mybody .myprojects .card-zone .card-project h1 {\n          margin: 0;\n          color: red;\n          cursor: pointer; }\n          .mybody .myprojects .card-zone .card-project h1:hover {\n            animation: hoveranimnew .3s forwards; }\n        .mybody .myprojects .card-zone .card-project a {\n          text-decoration: none; }\n        .mybody .myprojects .card-zone .card-project .detail-box {\n          margin-top: 10px;\n          display: -moz-box;\n          display: flex;\n          flex-wrap: wrap;\n          -moz-box-flex: 1;\n               flex-grow: 1;\n          -moz-box-orient: horizontal;\n          -moz-box-direction: normal;\n               flex-direction: row;\n          -moz-box-pack: center;\n               justify-content: center; }\n    .mybody .mycontact {\n      position: relative;\n      margin-top: 200px;\n      width: 100%;\n      height: 500px;\n      text-align: center;\n      padding: 0 calc(100vw - 95vw); }\n      .mybody .mycontact h3 {\n        top: 0;\n        font-weight: bold;\n        margin-top: 150px;\n        text-transform: uppercase; }\n      .mybody .mycontact h1 i {\n        color: red; }\n      .mybody .mycontact h1 span {\n        color: red; }\n      .mybody .mycontact .myproimg {\n        margin-top: 100px;\n        border-radius: 50%;\n        border: solid 3px red;\n        background: linear-gradient(to right, red, black);\n        width: 200px; }\n      .mybody .mycontact .mybodywork {\n        display: -moz-box;\n        display: flex;\n        -moz-box-pack: center;\n             justify-content: center;\n        -moz-box-align: center;\n             align-items: center;\n        min-height: 200px;\n        width: 100%; } }\n\n@media only screen and (max-width: 1200px) {\n  .my-nav .mylogo {\n    padding: 0 0; }\n  .my-nav .my-list-box {\n    display: none; }\n  .myheader {\n    padding: 0 20%;\n    padding-top: 20%; }\n    .myheader .content-header .my-btn-box {\n      right: calc(100vw - 85vw); }\n    .myheader .content-header .header-image {\n      filter: blur(5px);\n      margin-left: calc(100vw - 90vw); }\n  .mybody {\n    margin-top: 5%;\n    width: 100%;\n    height: auto;\n    display: -moz-box;\n    display: flex;\n    -moz-box-orient: vertical;\n    -moz-box-direction: normal;\n         flex-direction: column; }\n    .mybody .myfooter {\n      width: 100%;\n      margin: 200px 50px 20px 50px;\n      padding: 10px 0 0 0;\n      display: -moz-box;\n      display: flex;\n      -moz-box-pack: center;\n           justify-content: center;\n      font-weight: bold;\n      font-size: 12px;\n      color: rgba(0, 0, 0, 0.5);\n      border-top: solid 1px rgba(0, 0, 0, 0.2);\n      text-align: center; }\n    .mybody .aboutme {\n      position: relative;\n      top: 10%;\n      right: calc(100vw - 95vw); }\n      .mybody .aboutme .aboutme-img {\n        right: calc(100vw - 100vw);\n        filter: blur(5px); }\n      .mybody .aboutme .aboutme-content {\n        z-index: 3; }\n    .mybody .myskills {\n      position: relative;\n      margin-top: 600px;\n      width: 100vw;\n      height: 500px;\n      text-align: center;\n      padding: 0 calc(100vw - 95vw); }\n      .mybody .myskills h1 {\n        top: 0;\n        font-weight: bold;\n        font-size: 36px;\n        margin-top: 100px;\n        text-transform: uppercase; }\n        .mybody .myskills h1 i {\n          color: red; }\n        .mybody .myskills h1 span {\n          color: red; }\n      .mybody .myskills .card-zone {\n        display: -moz-box;\n        display: flex; }\n      .mybody .myskills .card-skill {\n        width: 168px;\n        height: 98px;\n        -moz-box-flex: 0;\n             flex: 0 2 150px;\n        margin: 25px 50px;\n        font-size: 80px;\n        padding: 5px 0;\n        display: -moz-box;\n        display: flex;\n        -moz-box-pack: center;\n             justify-content: center;\n        -moz-box-flex: 1;\n             flex-grow: 1; }\n    .mybody .myprojects {\n      position: relative;\n      margin-top: 300px;\n      width: 100vw;\n      height: 100%;\n      padding: 0 calc(100vw - 95vw); }\n      .mybody .myprojects .card-zone .card-project {\n        border: solid 1px rgba(0, 0, 0, 0.3);\n        width: calc(100vw - 30vw);\n        height: 200px;\n        padding: 15px;\n        margin-bottom: 30px; }\n        .mybody .myprojects .card-zone .card-project:hover {\n          box-shadow: 0px 0px 5px red; }\n        .mybody .myprojects .card-zone .card-project h1 {\n          margin: 0;\n          color: red;\n          cursor: pointer; }\n          .mybody .myprojects .card-zone .card-project h1:hover {\n            animation: hoveranimnew .3s forwards; }\n        .mybody .myprojects .card-zone .card-project a {\n          text-decoration: none; }\n        .mybody .myprojects .card-zone .card-project .detail-box {\n          margin-top: 10px;\n          display: -moz-box;\n          display: flex;\n          flex-wrap: wrap;\n          -moz-box-flex: 1;\n               flex-grow: 1;\n          -moz-box-orient: horizontal;\n          -moz-box-direction: normal;\n               flex-direction: row;\n          -moz-box-pack: center;\n               justify-content: center; }\n    .mybody .mycontact {\n      position: relative;\n      margin-top: 200px;\n      width: 100%;\n      height: 500px;\n      text-align: center;\n      padding: 0 calc(100vw - 95vw); }\n      .mybody .mycontact h3 {\n        top: 0;\n        font-weight: bold;\n        margin-top: 150px;\n        text-transform: uppercase; }\n      .mybody .mycontact h1 i {\n        color: red; }\n      .mybody .mycontact h1 span {\n        color: red; }\n      .mybody .mycontact .myproimg {\n        margin-top: 100px;\n        border-radius: 50%;\n        border: solid 3px red;\n        background: linear-gradient(to right, red, black);\n        width: 200px; }\n      .mybody .mycontact .mybodywork {\n        display: -moz-box;\n        display: flex;\n        -moz-box-pack: center;\n             justify-content: center;\n        -moz-box-align: center;\n             align-items: center;\n        min-height: 200px;\n        width: 100%; } }\n\n@media only screen and (max-width: 974px) {\n  .myheader {\n    padding: 0 20%;\n    padding-top: 20%; }\n    .myheader .content-header .first-header-text {\n      position: absolute;\n      height: 35%;\n      right: 0;\n      z-index: 2; }\n      .myheader .content-header .first-header-text h1 {\n        font-weight: bold;\n        font-size: 40px;\n        margin-right: 20px; }\n      .myheader .content-header .first-header-text #first-text::after {\n        content: '';\n        position: absolute;\n        margin-left: 40px;\n        width: 450px;\n        height: 2px;\n        top: 15%;\n        background: linear-gradient(to right, red, black); }\n      .myheader .content-header .first-header-text #sub-text {\n        font-weight: bold;\n        font-size: 55px;\n        background: linear-gradient(to right, red, black);\n        -webkit-background-clip: text;\n        -webkit-text-fill-color: transparent; }\n      .myheader .content-header .first-header-text #sub-text2 {\n        font-weight: bold;\n        font-size: 30px;\n        margin-right: 20px; }\n    .myheader .content-header .my-btn-box {\n      right: calc(100vw - 95vw); }\n    .myheader .content-header .header-image {\n      filter: blur(5px);\n      margin-left: calc(100vw - 90vw); } }\n\n@media only screen and (max-width: 833px) {\n  .mybody {\n    margin-top: 5%;\n    width: 100%;\n    height: auto;\n    display: -moz-box;\n    display: flex;\n    -moz-box-orient: vertical;\n    -moz-box-direction: normal;\n         flex-direction: column; }\n    .mybody .myfooter {\n      width: 100%;\n      margin: 200px 50px 20px 50px;\n      padding: 10px 0 0 0;\n      display: -moz-box;\n      display: flex;\n      -moz-box-pack: center;\n           justify-content: center;\n      font-weight: bold;\n      font-size: 12px;\n      color: rgba(0, 0, 0, 0.5);\n      border-top: solid 1px rgba(0, 0, 0, 0.2);\n      text-align: center; }\n    .mybody .aboutme {\n      position: relative;\n      top: 10%;\n      right: calc(100vw - 95vw); }\n      .mybody .aboutme .aboutme-img {\n        right: calc(100vw - 100vw);\n        filter: blur(5px); }\n      .mybody .aboutme .aboutme-content {\n        z-index: 3; }\n    .mybody .myskills {\n      position: relative;\n      margin-top: 600px;\n      width: 100vw;\n      height: 500px;\n      text-align: center;\n      padding: 0 calc(100vw - 95vw); }\n      .mybody .myskills h1 {\n        top: 0;\n        font-weight: bold;\n        font-size: 36px;\n        margin-top: 100px;\n        text-transform: uppercase; }\n        .mybody .myskills h1 i {\n          color: red; }\n        .mybody .myskills h1 span {\n          color: red; }\n      .mybody .myskills .card-zone {\n        display: -moz-box;\n        display: flex; }\n      .mybody .myskills .card-skill {\n        width: 168px;\n        height: 98px;\n        -moz-box-flex: 0;\n             flex: 0 2 150px;\n        margin: 25px 50px;\n        font-size: 80px;\n        padding: 5px 0;\n        display: -moz-box;\n        display: flex;\n        -moz-box-pack: center;\n             justify-content: center;\n        -moz-box-flex: 1;\n             flex-grow: 1; }\n    .mybody .myprojects {\n      position: relative;\n      margin-top: 600px;\n      width: 100vw;\n      height: 100%;\n      padding: 0 calc(100vw - 95vw); }\n      .mybody .myprojects .card-zone .card-project {\n        border: solid 1px rgba(0, 0, 0, 0.3);\n        width: calc(100vw - 30vw);\n        height: 200px;\n        padding: 15px;\n        margin-bottom: 30px; }\n        .mybody .myprojects .card-zone .card-project:hover {\n          box-shadow: 0px 0px 5px red; }\n        .mybody .myprojects .card-zone .card-project h1 {\n          margin: 0;\n          color: red;\n          cursor: pointer; }\n          .mybody .myprojects .card-zone .card-project h1:hover {\n            animation: hoveranimnew .3s forwards; }\n        .mybody .myprojects .card-zone .card-project a {\n          text-decoration: none; }\n        .mybody .myprojects .card-zone .card-project .detail-box {\n          margin-top: 10px;\n          display: -moz-box;\n          display: flex;\n          flex-wrap: wrap;\n          -moz-box-flex: 1;\n               flex-grow: 1;\n          -moz-box-orient: horizontal;\n          -moz-box-direction: normal;\n               flex-direction: row;\n          -moz-box-pack: center;\n               justify-content: center; }\n    .mybody .mycontact {\n      position: relative;\n      margin-top: 200px;\n      width: 100%;\n      height: 500px;\n      text-align: center;\n      padding: 0 calc(100vw - 95vw); }\n      .mybody .mycontact h3 {\n        top: 0;\n        font-weight: bold;\n        margin-top: 150px;\n        text-transform: uppercase; }\n      .mybody .mycontact h1 i {\n        color: red; }\n      .mybody .mycontact h1 span {\n        color: red; }\n      .mybody .mycontact .myproimg {\n        margin-top: 100px;\n        border-radius: 50%;\n        border: solid 3px red;\n        background: linear-gradient(to right, red, black);\n        width: 200px; }\n      .mybody .mycontact .mybodywork {\n        display: -moz-box;\n        display: flex;\n        -moz-box-pack: center;\n             justify-content: center;\n        -moz-box-align: center;\n             align-items: center;\n        min-height: 200px;\n        width: 100%; } }\n\n@media only screen and (max-width: 680px) {\n  .myheader {\n    padding: 0 20%;\n    padding-top: 20%; }\n    .myheader .content-header .first-header-text {\n      position: absolute;\n      height: 35%;\n      right: 0;\n      z-index: 2;\n      margin-top: 10%; }\n      .myheader .content-header .first-header-text h1 {\n        font-weight: bold;\n        font-size: 30px;\n        margin-right: 20px; }\n      .myheader .content-header .first-header-text #first-text::after {\n        content: '';\n        position: absolute;\n        margin-left: 25px;\n        width: 450px;\n        height: 2px;\n        top: 10%;\n        background: linear-gradient(to right, red, black); }\n      .myheader .content-header .first-header-text #sub-text {\n        font-weight: bold;\n        font-size: 45px;\n        background: linear-gradient(to right, red, black);\n        -webkit-background-clip: text;\n        -webkit-text-fill-color: transparent; }\n      .myheader .content-header .first-header-text #sub-text2 {\n        font-weight: bold;\n        font-size: 25px;\n        margin-right: 20px; }\n    .myheader .content-header .my-btn-box {\n      right: calc(100vw - 98vw); }\n      .myheader .content-header .my-btn-box .my-cus-btn2 {\n        margin-left: 20px;\n        border-radius: 5px;\n        font-size: 13px;\n        padding: 1rem 2.5rem;\n        color: black;\n        text-transform: uppercase;\n        font-weight: bold;\n        border: solid 2px transparent;\n        background-image: linear-gradient(rgba(255, 255, 255, 0), rgba(255, 255, 255, 0)), linear-gradient(to right, red, black);\n        background-origin: border-box;\n        background-clip: content-box, border-box;\n        text-decoration: none;\n        box-shadow: 0px 1000px 1px #fff inset;\n        cursor: pointer; }\n        .myheader .content-header .my-btn-box .my-cus-btn2:hover {\n          animation: hoverbtn2 .5s forwards; }\n    .myheader .content-header .header-image {\n      filter: blur(5px);\n      margin-left: calc(100vw - 80vw); }\n  .mybody {\n    margin-top: 5%;\n    width: 100%;\n    height: auto;\n    display: -moz-box;\n    display: flex;\n    -moz-box-orient: vertical;\n    -moz-box-direction: normal;\n         flex-direction: column; }\n    .mybody .myfooter {\n      width: calc(100vw + 15vw); }\n    .mybody .aboutme {\n      position: relative;\n      top: 5%;\n      right: 0; }\n      .mybody .aboutme .aboutme-img {\n        right: -200px;\n        filter: blur(5px); }\n      .mybody .aboutme .aboutme-content {\n        z-index: 3; }\n    .mybody .myskills {\n      position: relative;\n      margin-top: 600px;\n      width: 100vw;\n      height: 500px;\n      text-align: center;\n      padding: 0;\n      margin-left: 15%; }\n    .mybody .myprojects {\n      position: relative;\n      margin-top: 600px;\n      width: 100vw;\n      height: 100%;\n      padding: 0;\n      margin-left: 15%; }\n      .mybody .myprojects .card-zone .card-project {\n        border: solid 1px rgba(0, 0, 0, 0.3);\n        width: calc(100vw - 30vw);\n        height: 250px;\n        padding: 15px;\n        margin-bottom: 30px; }\n    .mybody .mycontact {\n      position: relative;\n      margin-top: 200px;\n      width: 100%;\n      height: 500px;\n      text-align: center;\n      padding: 0;\n      margin-left: 15%; }\n      .mybody .mycontact h3 {\n        top: 0;\n        font-weight: bold;\n        margin-top: 150px;\n        text-transform: uppercase; }\n      .mybody .mycontact h1 i {\n        color: red; }\n      .mybody .mycontact h1 span {\n        color: red; }\n      .mybody .mycontact .myproimg {\n        margin-top: 100px;\n        border-radius: 50%;\n        border: solid 3px red;\n        background: linear-gradient(to right, red, black);\n        width: 200px; }\n      .mybody .mycontact .mybodywork {\n        display: -moz-box;\n        display: flex;\n        -moz-box-pack: center;\n             justify-content: center;\n        -moz-box-align: center;\n             align-items: center;\n        min-height: 200px;\n        width: 100%; } }\n\n@media only screen and (max-width: 634px) {\n  .mybody {\n    margin-top: 0;\n    width: 100%;\n    height: auto;\n    display: -moz-box;\n    display: flex;\n    -moz-box-orient: vertical;\n    -moz-box-direction: normal;\n         flex-direction: column; }\n    .mybody .myfooter {\n      margin-top: 0;\n      width: calc(100vw + 15vw); }\n    .mybody .aboutme {\n      position: relative;\n      top: 5%;\n      right: 0; }\n      .mybody .aboutme .aboutme-img {\n        right: -200px;\n        filter: blur(5px); }\n      .mybody .aboutme .aboutme-content {\n        z-index: 3; }\n    .mybody .myskills {\n      position: relative;\n      margin-top: 600px;\n      width: 100vw;\n      height: 500px;\n      text-align: center;\n      padding: 0;\n      margin-left: 15%; }\n    .mybody .myprojects {\n      position: relative;\n      margin-top: 600px;\n      width: 100vw;\n      height: 100%;\n      padding: 0;\n      margin-left: 15%; }\n      .mybody .myprojects .card-zone .card-project {\n        border: solid 1px rgba(0, 0, 0, 0.3);\n        width: calc(100vw - 30vw);\n        height: 250px;\n        padding: 15px;\n        margin-bottom: 30px; }\n    .mybody .mycontact {\n      position: relative;\n      margin-top: 200px;\n      width: 100%;\n      height: 500px;\n      text-align: center;\n      padding: 0;\n      margin-left: 15%; }\n      .mybody .mycontact h3 {\n        top: 0;\n        font-weight: bold;\n        margin-top: 150px;\n        text-transform: uppercase; }\n      .mybody .mycontact h1 i {\n        color: red; }\n      .mybody .mycontact h1 span {\n        color: red; }\n      .mybody .mycontact .myproimg {\n        margin-top: 100px;\n        border-radius: 50%;\n        border: solid 3px red;\n        background: linear-gradient(to right, red, black);\n        width: 200px; }\n      .mybody .mycontact .mybodywork {\n        display: -moz-box;\n        display: flex;\n        -moz-box-pack: center;\n             justify-content: center;\n        -moz-box-align: center;\n             align-items: center;\n        min-height: 200px;\n        width: 100%; } }\n\n@media only screen and (max-width: 580px) {\n  .mybody {\n    margin-top: 0;\n    width: 100%;\n    height: auto;\n    display: -moz-box;\n    display: flex;\n    -moz-box-orient: vertical;\n    -moz-box-direction: normal;\n         flex-direction: column; }\n    .mybody .myfooter {\n      width: calc(100vw + 25vw);\n      margin-top: 0; }\n    .mybody .aboutme {\n      position: relative;\n      top: 5%;\n      right: 0; }\n      .mybody .aboutme .aboutme-img {\n        right: -200px;\n        filter: blur(5px); }\n      .mybody .aboutme .aboutme-content {\n        z-index: 3; }\n    .mybody .myskills {\n      position: relative;\n      margin-top: 600px;\n      width: 100vw;\n      height: 500px;\n      text-align: center;\n      padding: 0;\n      margin-left: 20%; }\n    .mybody .myprojects {\n      position: relative;\n      margin-top: 600px;\n      width: 100vw;\n      height: 100%;\n      padding: 0;\n      margin-left: 20%; }\n      .mybody .myprojects .card-zone .card-project {\n        border: solid 1px rgba(0, 0, 0, 0.3);\n        width: calc(100vw - 30vw);\n        height: 250px;\n        padding: 15px;\n        margin-bottom: 30px; }\n    .mybody .mycontact {\n      position: relative;\n      margin-top: 200px;\n      width: 100%;\n      height: 500px;\n      text-align: center;\n      padding: 0;\n      margin-left: 20%; }\n      .mybody .mycontact h3 {\n        top: 0;\n        font-weight: bold;\n        margin-top: 150px;\n        text-transform: uppercase; }\n      .mybody .mycontact h1 i {\n        color: red; }\n      .mybody .mycontact h1 span {\n        color: red; }\n      .mybody .mycontact .myproimg {\n        margin-top: 100px;\n        border-radius: 50%;\n        border: solid 3px red;\n        background: linear-gradient(to right, red, black);\n        width: 200px; }\n      .mybody .mycontact .mybodywork {\n        display: -moz-box;\n        display: flex;\n        -moz-box-pack: center;\n             justify-content: center;\n        -moz-box-align: center;\n             align-items: center;\n        min-height: 200px;\n        width: 100%; } }\n\n@media only screen and (max-width: 500px) {\n  .mybody {\n    margin-top: 0;\n    width: 120%;\n    height: auto;\n    display: -moz-box;\n    display: flex;\n    -moz-box-orient: vertical;\n    -moz-box-direction: normal;\n         flex-direction: column; }\n    .mybody .myfooter {\n      margin-top: 0;\n      width: calc(100vw + 40vw); }\n    .mybody .aboutme {\n      position: relative;\n      top: 5%;\n      right: 0; }\n      .mybody .aboutme .aboutme-img {\n        right: -200px;\n        filter: blur(5px); }\n      .mybody .aboutme .aboutme-content {\n        z-index: 3; }\n    .mybody .myskills {\n      position: relative;\n      margin-top: 600px;\n      width: 120vw;\n      height: 500px;\n      text-align: center;\n      padding: 0;\n      margin-left: 15%; }\n    .mybody .myprojects {\n      position: relative;\n      margin-top: 600px;\n      width: 120vw;\n      height: 100%;\n      padding: 0;\n      margin-left: 15%; }\n      .mybody .myprojects .card-zone .card-project {\n        border: solid 1px rgba(0, 0, 0, 0.3);\n        width: calc(100vw - 20vw);\n        height: 250px;\n        padding: 15px;\n        margin-bottom: 30px; }\n    .mybody .mycontact {\n      position: relative;\n      margin-top: 200px;\n      width: 100%;\n      height: 500px;\n      text-align: center;\n      padding: 0;\n      margin-left: 15%; }\n      .mybody .mycontact h3 {\n        top: 0;\n        font-weight: bold;\n        margin-top: 150px;\n        text-transform: uppercase; }\n      .mybody .mycontact h1 i {\n        color: red; }\n      .mybody .mycontact h1 span {\n        color: red; }\n      .mybody .mycontact .myproimg {\n        margin-top: 100px;\n        border-radius: 50%;\n        border: solid 3px red;\n        background: linear-gradient(to right, red, black);\n        width: 200px; }\n      .mybody .mycontact .mybodywork {\n        display: -moz-box;\n        display: flex;\n        -moz-box-pack: center;\n             justify-content: center;\n        -moz-box-align: center;\n             align-items: center;\n        min-height: 200px;\n        width: 100%; } }\n\n@media only screen and (max-width: 425px) {\n  .myheader {\n    padding: 0 5%;\n    padding-top: 25%; }\n    .myheader .content-header .first-header-text {\n      position: absolute;\n      height: 35%;\n      left: 20%;\n      z-index: 2;\n      margin-top: 10%; }\n      .myheader .content-header .first-header-text h1 {\n        font-weight: bold;\n        font-size: 30px;\n        margin-right: 20px;\n        width: 450px; }\n      .myheader .content-header .first-header-text #first-text::after {\n        content: '';\n        position: absolute;\n        margin-left: 25px;\n        width: 450px;\n        height: 2px;\n        top: 10%;\n        background: linear-gradient(to right, red, black); }\n      .myheader .content-header .first-header-text #sub-text {\n        font-weight: bold;\n        font-size: 45px;\n        background: linear-gradient(to right, red, black);\n        -webkit-background-clip: text;\n        -webkit-text-fill-color: transparent; }\n      .myheader .content-header .first-header-text #sub-text2 {\n        font-weight: bold;\n        font-size: 25px;\n        margin-right: 20px; }\n    .myheader .content-header .my-btn-box {\n      left: 20%;\n      width: 120%; }\n      .myheader .content-header .my-btn-box .my-cus-btn1 {\n        font-size: 20px; }\n      .myheader .content-header .my-btn-box .my-cus-btn2 {\n        font-size: 20px; }\n    .myheader .content-header .header-image {\n      filter: blur(5px);\n      margin-left: calc(100vw - 80vw); }\n  .mybody {\n    margin-top: 0;\n    width: 120%;\n    height: auto;\n    display: -moz-box;\n    display: flex;\n    -moz-box-orient: vertical;\n    -moz-box-direction: normal;\n         flex-direction: column; }\n    .mybody .myfooter {\n      margin-top: 0;\n      width: calc(100vw + 45vw); }\n    .mybody .aboutme {\n      position: relative;\n      top: 5%;\n      right: 0; }\n      .mybody .aboutme .aboutme-img {\n        right: -200px;\n        filter: blur(5px); }\n      .mybody .aboutme .aboutme-content {\n        z-index: 3; }\n    .mybody .myskills {\n      position: relative;\n      margin-top: 600px;\n      width: 135vw;\n      height: 500px;\n      text-align: center;\n      padding: 0;\n      margin-left: 15%; }\n    .mybody .myprojects {\n      position: relative;\n      margin-top: 600px;\n      width: 135vw;\n      height: 100%;\n      padding: 0;\n      margin-left: 15%; }\n      .mybody .myprojects .card-zone .card-project {\n        border: solid 1px rgba(0, 0, 0, 0.3);\n        width: calc(100vw - 10vw);\n        height: 250px;\n        padding: 15px;\n        margin-bottom: 30px; }\n    .mybody .mycontact {\n      position: relative;\n      margin-top: 200px;\n      width: 135vw;\n      height: 500px;\n      text-align: center;\n      padding: 0;\n      margin-left: 15%; }\n      .mybody .mycontact h3 {\n        top: 0;\n        font-weight: bold;\n        margin-top: 150px;\n        text-transform: uppercase; }\n      .mybody .mycontact h1 i {\n        color: red; }\n      .mybody .mycontact h1 span {\n        color: red; }\n      .mybody .mycontact .myproimg {\n        margin-top: 100px;\n        border-radius: 50%;\n        border: solid 3px red;\n        background: linear-gradient(to right, red, black);\n        width: 200px; }\n      .mybody .mycontact .mybodywork {\n        display: -moz-box;\n        display: flex;\n        -moz-box-pack: center;\n             justify-content: center;\n        -moz-box-align: center;\n             align-items: center;\n        min-height: 200px;\n        width: 100%; } }\n\n@media only screen and (max-width: 370px) {\n  .myheader {\n    padding: 0 5%;\n    padding-top: 25%; }\n    .myheader .content-header .first-header-text {\n      position: absolute;\n      height: 35%;\n      left: 20%;\n      z-index: 2;\n      margin-top: 10%; }\n      .myheader .content-header .first-header-text h1 {\n        font-weight: bold;\n        font-size: 30px;\n        margin-right: 20px; }\n      .myheader .content-header .first-header-text #first-text::after {\n        content: '';\n        position: absolute;\n        margin-left: 25px;\n        width: 450px;\n        height: 2px;\n        top: 10%;\n        background: linear-gradient(to right, red, black); }\n      .myheader .content-header .first-header-text #sub-text {\n        font-weight: bold;\n        font-size: 35px;\n        background: linear-gradient(to right, red, black);\n        -webkit-background-clip: text;\n        -webkit-text-fill-color: transparent; }\n      .myheader .content-header .first-header-text #sub-text2 {\n        font-weight: bold;\n        font-size: 25px;\n        margin-right: 20px; }\n    .myheader .content-header .my-btn-box {\n      left: 20%;\n      width: 120%; }\n      .myheader .content-header .my-btn-box .my-cus-btn1 {\n        font-size: 15px; }\n      .myheader .content-header .my-btn-box .my-cus-btn2 {\n        font-size: 15px; }\n    .myheader .content-header .header-image {\n      filter: blur(5px);\n      margin-left: calc(100vw - 80vw); }\n  .mybody {\n    margin-top: 0;\n    width: 120%;\n    height: auto;\n    display: -moz-box;\n    display: flex;\n    -moz-box-orient: vertical;\n    -moz-box-direction: normal;\n         flex-direction: column; }\n    .mybody .myfooter {\n      margin-top: 0;\n      width: calc(100vw + 75vw); }\n    .mybody .aboutme {\n      position: relative;\n      top: 5%;\n      right: 0; }\n      .mybody .aboutme .aboutme-img {\n        right: -200px;\n        filter: blur(5px); }\n      .mybody .aboutme .aboutme-content {\n        z-index: 3; }\n    .mybody .myskills {\n      position: relative;\n      margin-top: 600px;\n      width: 160vw;\n      height: 500px;\n      text-align: center;\n      padding: 0;\n      margin-left: 15%; }\n    .mybody .myprojects {\n      position: relative;\n      margin-top: 600px;\n      width: 160vw;\n      height: 100%;\n      padding: 0;\n      margin-left: 15%; }\n      .mybody .myprojects .card-zone .card-project {\n        border: solid 1px rgba(0, 0, 0, 0.3);\n        width: 125vw;\n        height: calc(100%);\n        padding: 15px;\n        margin-bottom: 30px; }\n    .mybody .mycontact {\n      position: relative;\n      margin-top: 200px;\n      width: 160vw;\n      height: 500px;\n      text-align: center;\n      padding: 0;\n      margin-left: 15%; }\n      .mybody .mycontact h3 {\n        top: 0;\n        font-weight: bold;\n        margin-top: 150px;\n        text-transform: uppercase; }\n      .mybody .mycontact h1 {\n        font-weight: bold; }\n        .mybody .mycontact h1 i {\n          color: red; }\n        .mybody .mycontact h1 span {\n          color: red; }\n      .mybody .mycontact .myproimg {\n        margin-top: 100px;\n        border-radius: 50%;\n        border: solid 3px red;\n        background: linear-gradient(to right, red, black);\n        width: 200px; }\n      .mybody .mycontact .mybodywork {\n        display: -moz-box;\n        display: flex;\n        -moz-box-pack: center;\n             justify-content: center;\n        -moz-box-align: center;\n             align-items: center;\n        min-height: 200px;\n        width: 100%; } }\n\n@media only screen and (max-width: 312px) {\n  .mybody {\n    margin-top: 0;\n    width: 120%;\n    height: auto;\n    display: -moz-box;\n    display: flex;\n    -moz-box-orient: vertical;\n    -moz-box-direction: normal;\n         flex-direction: column; }\n    .mybody .aboutme {\n      position: relative;\n      top: 5%;\n      right: 0; }\n      .mybody .aboutme .aboutme-img {\n        right: -200px;\n        filter: blur(5px); }\n      .mybody .aboutme .aboutme-content {\n        z-index: 3; }\n    .mybody .myskills {\n      position: relative;\n      margin-top: 600px;\n      width: 180vw;\n      height: 500px;\n      text-align: center;\n      padding: 0;\n      margin-left: 15%; }\n    .mybody .myprojects {\n      position: relative;\n      margin-top: 600px;\n      width: 150vw;\n      height: 100%;\n      padding: 0;\n      margin-left: 15%; }\n      .mybody .myprojects .card-zone .card-project {\n        border: solid 1px rgba(0, 0, 0, 0.3);\n        width: 115vw;\n        height: 225px;\n        padding: 15px;\n        margin-bottom: 30px; }\n    .mybody .mycontact {\n      position: relative;\n      margin-top: 200px;\n      width: 150vw;\n      height: 500px;\n      text-align: center;\n      padding: 0;\n      margin-left: 15%; }\n      .mybody .mycontact h3 {\n        top: 0;\n        font-weight: bold;\n        margin-top: 150px;\n        text-transform: uppercase; }\n      .mybody .mycontact h1 i {\n        color: red; }\n      .mybody .mycontact h1 span {\n        color: red; }\n      .mybody .mycontact .myproimg {\n        margin-top: 100px;\n        border-radius: 50%;\n        border: solid 3px red;\n        background: linear-gradient(to right, red, black);\n        width: 200px; }\n      .mybody .mycontact .mybodywork {\n        display: -moz-box;\n        display: flex;\n        -moz-box-pack: center;\n             justify-content: center;\n        -moz-box-align: center;\n             align-items: center;\n        min-height: 200px;\n        width: 100%; } }\n"]}]);
// Exports
module.exports = exports;


/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
// eslint-disable-next-line func-names
module.exports = function (useSourceMap) {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    return this.map(function (item) {
      var content = cssWithMappingToString(item, useSourceMap);

      if (item[2]) {
        return "@media ".concat(item[2], " {").concat(content, "}");
      }

      return content;
    }).join('');
  }; // import a list of modules into the list
  // eslint-disable-next-line func-names


  list.i = function (modules, mediaQuery, dedupe) {
    if (typeof modules === 'string') {
      // eslint-disable-next-line no-param-reassign
      modules = [[null, modules, '']];
    }

    var alreadyImportedModules = {};

    if (dedupe) {
      for (var i = 0; i < this.length; i++) {
        // eslint-disable-next-line prefer-destructuring
        var id = this[i][0];

        if (id != null) {
          alreadyImportedModules[id] = true;
        }
      }
    }

    for (var _i = 0; _i < modules.length; _i++) {
      var item = [].concat(modules[_i]);

      if (dedupe && alreadyImportedModules[item[0]]) {
        // eslint-disable-next-line no-continue
        continue;
      }

      if (mediaQuery) {
        if (!item[2]) {
          item[2] = mediaQuery;
        } else {
          item[2] = "".concat(mediaQuery, " and ").concat(item[2]);
        }
      }

      list.push(item);
    }
  };

  return list;
};

function cssWithMappingToString(item, useSourceMap) {
  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring

  var cssMapping = item[3];

  if (!cssMapping) {
    return content;
  }

  if (useSourceMap && typeof btoa === 'function') {
    var sourceMapping = toComment(cssMapping);
    var sourceURLs = cssMapping.sources.map(function (source) {
      return "/*# sourceURL=".concat(cssMapping.sourceRoot || '').concat(source, " */");
    });
    return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
  }

  return [content].join('\n');
} // Adapted from convert-source-map (MIT)


function toComment(sourceMap) {
  // eslint-disable-next-line no-undef
  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
  var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);
  return "/*# ".concat(data, " */");
}

/***/ }),

/***/ "./node_modules/next/dist/build/polyfills/object-assign.js":
/*!*****************************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/object-assign.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var assign=Object.assign.bind(Object);module.exports=assign;module.exports.default=module.exports;
//# sourceMappingURL=object-assign.js.map

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app.js!./":
/*!*********************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app.js ***!
  \*********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


    (window.__NEXT_P = window.__NEXT_P || []).push([
      "/_app",
      function () {
        return __webpack_require__(/*! private-next-pages/_app.js */ "./src/pages/_app.js");
      }
    ]);
  

/***/ }),

/***/ "./node_modules/next/dist/client/normalize-trailing-slash.js":
/*!*******************************************************************!*\
  !*** ./node_modules/next/dist/client/normalize-trailing-slash.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

exports.__esModule = true;
exports.removePathTrailingSlash = removePathTrailingSlash;
exports.normalizePathTrailingSlash = void 0;
/**
* Removes the trailing slash of a path if there is one. Preserves the root path `/`.
*/

function removePathTrailingSlash(path) {
  return path.endsWith('/') && path !== '/' ? path.slice(0, -1) : path;
}
/**
* Normalizes the trailing slash of a path according to the `trailingSlash` option
* in `next.config.js`.
*/


var normalizePathTrailingSlash =  false ? undefined : removePathTrailingSlash;
exports.normalizePathTrailingSlash = normalizePathTrailingSlash;

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/client/router.js":
/*!*************************************************!*\
  !*** ./node_modules/next/dist/client/router.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

var _construct = __webpack_require__(/*! @babel/runtime/helpers/construct */ "./node_modules/@babel/runtime/helpers/construct.js");

var _s = $RefreshSig$();

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var _interopRequireWildcard = __webpack_require__(/*! @babel/runtime/helpers/interopRequireWildcard */ "./node_modules/@babel/runtime/helpers/interopRequireWildcard.js");

var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

exports.__esModule = true;
exports.useRouter = useRouter;
exports.makePublicRouterInstance = makePublicRouterInstance;
exports.createRouter = exports.withRouter = exports["default"] = void 0;

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _router2 = _interopRequireWildcard(__webpack_require__(/*! ../next-server/lib/router/router */ "./node_modules/next/dist/next-server/lib/router/router.js"));

exports.Router = _router2["default"];
exports.NextRouter = _router2.NextRouter;

var _routerContext = __webpack_require__(/*! ../next-server/lib/router-context */ "./node_modules/next/dist/next-server/lib/router-context.js");

var _withRouter = _interopRequireDefault(__webpack_require__(/*! ./with-router */ "./node_modules/next/dist/client/with-router.js"));

exports.withRouter = _withRouter["default"];
/* global window */

var singletonRouter = {
  router: null,
  // holds the actual router instance
  readyCallbacks: [],
  ready: function ready(cb) {
    if (this.router) return cb();

    if (true) {
      this.readyCallbacks.push(cb);
    }
  }
}; // Create public properties and methods of the router in the singletonRouter

var urlPropertyFields = ['pathname', 'route', 'query', 'asPath', 'components', 'isFallback', 'basePath'];
var routerEvents = ['routeChangeStart', 'beforeHistoryChange', 'routeChangeComplete', 'routeChangeError', 'hashChangeStart', 'hashChangeComplete'];
var coreMethodFields = ['push', 'replace', 'reload', 'back', 'prefetch', 'beforePopState']; // Events is a static property on the router, the router doesn't have to be initialized to use it

Object.defineProperty(singletonRouter, 'events', {
  get: function get() {
    return _router2["default"].events;
  }
});
urlPropertyFields.forEach(function (field) {
  // Here we need to use Object.defineProperty because, we need to return
  // the property assigned to the actual router
  // The value might get changed as we change routes and this is the
  // proper way to access it
  Object.defineProperty(singletonRouter, field, {
    get: function get() {
      var router = getRouter();
      return router[field];
    }
  });
});
coreMethodFields.forEach(function (field) {
  // We don't really know the types here, so we add them later instead
  ;

  singletonRouter[field] = function () {
    var router = getRouter();
    return router[field].apply(router, arguments);
  };
});
routerEvents.forEach(function (event) {
  singletonRouter.ready(function () {
    _router2["default"].events.on(event, function () {
      var eventField = "on".concat(event.charAt(0).toUpperCase()).concat(event.substring(1));
      var _singletonRouter = singletonRouter;

      if (_singletonRouter[eventField]) {
        try {
          _singletonRouter[eventField].apply(_singletonRouter, arguments);
        } catch (err) {
          // tslint:disable-next-line:no-console
          console.error("Error when running the Router event: ".concat(eventField)); // tslint:disable-next-line:no-console

          console.error("".concat(err.message, "\n").concat(err.stack));
        }
      }
    });
  });
});

function getRouter() {
  if (!singletonRouter.router) {
    var message = 'No router instance found.\n' + 'You should only use "next/router" inside the client side of your app.\n';
    throw new Error(message);
  }

  return singletonRouter.router;
} // Export the singletonRouter and this is the public API.


var _default = singletonRouter; // Reexport the withRoute HOC

exports["default"] = _default;

function useRouter() {
  _s();

  return _react["default"].useContext(_routerContext.RouterContext);
} // INTERNAL APIS
// -------------
// (do not use following exports inside the app)
// Create a router and assign it as the singleton instance.
// This is used in client side when we are initilizing the app.
// This should **not** use inside the server.


_s(useRouter, "gDsCjeeItUuvgOWf1v4qoK9RF6k=");

var createRouter = function createRouter() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  singletonRouter.router = _construct(_router2["default"], args);
  singletonRouter.readyCallbacks.forEach(function (cb) {
    return cb();
  });
  singletonRouter.readyCallbacks = [];
  return singletonRouter.router;
}; // This function is used to create the `withRouter` router instance


exports.createRouter = createRouter;

function makePublicRouterInstance(router) {
  var _router = router;
  var instance = {};

  var _iterator = _createForOfIteratorHelper(urlPropertyFields),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var property = _step.value;

      if (typeof _router[property] === 'object') {
        instance[property] = Object.assign({}, _router[property]); // makes sure query is not stateful

        continue;
      }

      instance[property] = _router[property];
    } // Events is a static property on the router, the router doesn't have to be initialized to use it

  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  instance.events = _router2["default"].events;
  coreMethodFields.forEach(function (field) {
    instance[field] = function () {
      return _router[field].apply(_router, arguments);
    };
  });
  return instance;
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/client/with-router.js":
/*!******************************************************!*\
  !*** ./node_modules/next/dist/client/with-router.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

exports.__esModule = true;
exports["default"] = withRouter;

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _router = __webpack_require__(/*! ./router */ "./node_modules/next/dist/client/router.js");

function withRouter(ComposedComponent) {
  function WithRouterWrapper(props) {
    return /*#__PURE__*/_react["default"].createElement(ComposedComponent, Object.assign({
      router: (0, _router.useRouter)()
    }, props));
  }

  WithRouterWrapper.getInitialProps = ComposedComponent.getInitialProps // This is needed to allow checking for custom getInitialProps in _app
  ;
  WithRouterWrapper.origGetInitialProps = ComposedComponent.origGetInitialProps;

  if (true) {
    var name = ComposedComponent.displayName || ComposedComponent.name || 'Unknown';
    WithRouterWrapper.displayName = "withRouter(".concat(name, ")");
  }

  return WithRouterWrapper;
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/mitt.js":
/*!********************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/mitt.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

exports.__esModule = true;
exports["default"] = mitt;
/*
MIT License
Copyright (c) Jason Miller (https://jasonformat.com/)
Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/
// This file is based on https://github.com/developit/mitt/blob/v1.1.3/src/index.js
// It's been edited for the needs of this script
// See the LICENSE at the top of the file

function mitt() {
  var all = Object.create(null);
  return {
    on: function on(type, handler) {
      ;
      (all[type] || (all[type] = [])).push(handler);
    },
    off: function off(type, handler) {
      if (all[type]) {
        // tslint:disable-next-line:no-bitwise
        all[type].splice(all[type].indexOf(handler) >>> 0, 1);
      }
    },
    emit: function emit(type) {
      for (var _len = arguments.length, evts = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        evts[_key - 1] = arguments[_key];
      }

      // eslint-disable-next-line array-callback-return
      ;
      (all[type] || []).slice().map(function (handler) {
        handler.apply(void 0, evts);
      });
    }
  };
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router-context.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router-context.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

exports.__esModule = true;
exports.RouterContext = void 0;

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

var RouterContext = _react["default"].createContext(null);

exports.RouterContext = RouterContext;

if (true) {
  RouterContext.displayName = 'RouterContext';
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/router.js":
/*!*****************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/router.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

var _slicedToArray = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/slicedToArray.js");

var _regeneratorRuntime = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");

var _asyncToGenerator = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ "./node_modules/@babel/runtime/helpers/asyncToGenerator.js");

var _classCallCheck = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js");

var _createClass = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js");

exports.__esModule = true;
exports.hasBasePath = hasBasePath;
exports.addBasePath = addBasePath;
exports.delBasePath = delBasePath;
exports.isLocalURL = isLocalURL;
exports.resolveHref = resolveHref;
exports.markLoadingError = markLoadingError;
exports["default"] = void 0;

var _mitt = _interopRequireDefault(__webpack_require__(/*! ../mitt */ "./node_modules/next/dist/next-server/lib/mitt.js"));

var _utils = __webpack_require__(/*! ../utils */ "./node_modules/next/dist/next-server/lib/utils.js");

var _isDynamic = __webpack_require__(/*! ./utils/is-dynamic */ "./node_modules/next/dist/next-server/lib/router/utils/is-dynamic.js");

var _routeMatcher = __webpack_require__(/*! ./utils/route-matcher */ "./node_modules/next/dist/next-server/lib/router/utils/route-matcher.js");

var _routeRegex = __webpack_require__(/*! ./utils/route-regex */ "./node_modules/next/dist/next-server/lib/router/utils/route-regex.js");

var _querystring = __webpack_require__(/*! ./utils/querystring */ "./node_modules/next/dist/next-server/lib/router/utils/querystring.js");

var _parseRelativeUrl = __webpack_require__(/*! ./utils/parse-relative-url */ "./node_modules/next/dist/next-server/lib/router/utils/parse-relative-url.js");

var _normalizeTrailingSlash = __webpack_require__(/*! ../../../client/normalize-trailing-slash */ "./node_modules/next/dist/client/normalize-trailing-slash.js");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
/* global __NEXT_DATA__ */
// tslint:disable:no-console


var basePath =  false || '';

function buildCancellationError() {
  return Object.assign(new Error('Route Cancelled'), {
    cancelled: true
  });
}

function hasBasePath(path) {
  return path === basePath || path.startsWith(basePath + '/');
}

function addBasePath(path) {
  // we only add the basepath on relative urls
  return basePath && path.startsWith('/') ? path === '/' ? (0, _normalizeTrailingSlash.normalizePathTrailingSlash)(basePath) : basePath + path : path;
}

function delBasePath(path) {
  return path.slice(basePath.length) || '/';
}
/**
* Detects whether a given url is routable by the Next.js router (browser only).
*/


function isLocalURL(url) {
  if (url.startsWith('/')) return true;

  try {
    // absolute urls can be local if they are on the same origin
    var locationOrigin = (0, _utils.getLocationOrigin)();
    var resolved = new URL(url, locationOrigin);
    return resolved.origin === locationOrigin && hasBasePath(resolved.pathname);
  } catch (_) {
    return false;
  }
}
/**
* Resolves a given hyperlink with a certain router state (basePath not included).
* Preserves absolute urls.
*/


function resolveHref(currentPath, href) {
  // we use a dummy base url for relative urls
  var base = new URL(currentPath, 'http://n');
  var urlAsString = typeof href === 'string' ? href : (0, _utils.formatWithValidation)(href);

  try {
    var finalUrl = new URL(urlAsString, base);
    finalUrl.pathname = (0, _normalizeTrailingSlash.normalizePathTrailingSlash)(finalUrl.pathname); // if the origin didn't change, it means we received a relative href

    return finalUrl.origin === base.origin ? finalUrl.href.slice(finalUrl.origin.length) : finalUrl.href;
  } catch (_) {
    return urlAsString;
  }
}

var PAGE_LOAD_ERROR = Symbol('PAGE_LOAD_ERROR');

function markLoadingError(err) {
  return Object.defineProperty(err, PAGE_LOAD_ERROR, {});
}

function prepareUrlAs(router, url, as) {
  // If url and as provided as an object representation,
  // we'll format them into the string version here.
  return {
    url: addBasePath(resolveHref(router.pathname, url)),
    as: as ? addBasePath(resolveHref(router.pathname, as)) : as
  };
}

function tryParseRelativeUrl(url) {
  try {
    return (0, _parseRelativeUrl.parseRelativeUrl)(url);
  } catch (err) {
    if (true) {
      setTimeout(function () {
        throw new Error("Invalid href passed to router: ".concat(url, " https://err.sh/vercel/next.js/invalid-href-passed"));
      }, 0);
    }

    return null;
  }
}

var manualScrollRestoration =  false && false;

function fetchRetry(url, attempts) {
  return fetch(url, {
    // Cookies are required to be present for Next.js' SSG "Preview Mode".
    // Cookies may also be required for `getServerSideProps`.
    //
    // > `fetch` won’t send cookies, unless you set the credentials init
    // > option.
    // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch
    //
    // > For maximum browser compatibility when it comes to sending &
    // > receiving cookies, always supply the `credentials: 'same-origin'`
    // > option instead of relying on the default.
    // https://github.com/github/fetch#caveats
    credentials: 'same-origin'
  }).then(function (res) {
    if (!res.ok) {
      if (attempts > 1 && res.status >= 500) {
        return fetchRetry(url, attempts - 1);
      }

      throw new Error("Failed to load static props");
    }

    return res.json();
  });
}

function fetchNextData(dataHref, isServerRender) {
  return fetchRetry(dataHref, isServerRender ? 3 : 1)["catch"](function (err) {
    // We should only trigger a server-side transition if this was caused
    // on a client-side transition. Otherwise, we'd get into an infinite
    // loop.
    if (!isServerRender) {
      markLoadingError(err);
    }

    throw err;
  });
}

var Router = /*#__PURE__*/function () {
  /**
  * Map of all components loaded in `Router`
  */
  // Static Data Cache
  function Router(_pathname, _query, _as, _ref) {
    var _this = this;

    var initialProps = _ref.initialProps,
        pageLoader = _ref.pageLoader,
        App = _ref.App,
        wrapApp = _ref.wrapApp,
        Component = _ref.Component,
        err = _ref.err,
        subscription = _ref.subscription,
        isFallback = _ref.isFallback;

    _classCallCheck(this, Router);

    this.route = void 0;
    this.pathname = void 0;
    this.query = void 0;
    this.asPath = void 0;
    this.basePath = void 0;
    this.components = void 0;
    this.sdc = {};
    this.sub = void 0;
    this.clc = void 0;
    this.pageLoader = void 0;
    this._bps = void 0;
    this.events = void 0;
    this._wrapApp = void 0;
    this.isSsr = void 0;
    this.isFallback = void 0;
    this._inFlightRoute = void 0;

    this.onPopState = function (e) {
      var state = e.state;

      if (!state) {
        // We get state as undefined for two reasons.
        //  1. With older safari (< 8) and older chrome (< 34)
        //  2. When the URL changed with #
        //
        // In the both cases, we don't need to proceed and change the route.
        // (as it's already changed)
        // But we can simply replace the state with the new changes.
        // Actually, for (1) we don't need to nothing. But it's hard to detect that event.
        // So, doing the following for (1) does no harm.
        var _pathname2 = _this.pathname,
            query = _this.query;

        _this.changeState('replaceState', (0, _utils.formatWithValidation)({
          pathname: addBasePath(_pathname2),
          query: query
        }), (0, _utils.getURL)());

        return;
      }

      if (!state.__N) {
        return;
      }

      var url = state.url,
          as = state.as,
          options = state.options;

      var _ref2 = (0, _parseRelativeUrl.parseRelativeUrl)(url),
          pathname = _ref2.pathname; // Make sure we don't re-render on initial load,
      // can be caused by navigating back from an external site


      if (_this.isSsr && as === _this.asPath && pathname === _this.pathname) {
        return;
      } // If the downstream application returns falsy, return.
      // They will then be responsible for handling the event.


      if (_this._bps && !_this._bps(state)) {
        return;
      }

      _this.change('replaceState', url, as, options);
    }; // represents the current component key


    this.route = (0, _normalizeTrailingSlash.removePathTrailingSlash)(_pathname); // set up the component cache (by route keys)

    this.components = {}; // We should not keep the cache, if there's an error
    // Otherwise, this cause issues when when going back and
    // come again to the errored page.

    if (_pathname !== '/_error') {
      this.components[this.route] = {
        Component: Component,
        props: initialProps,
        err: err,
        __N_SSG: initialProps && initialProps.__N_SSG,
        __N_SSP: initialProps && initialProps.__N_SSP
      };
    }

    this.components['/_app'] = {
      Component: App
    }; // Backwards compat for Router.router.events
    // TODO: Should be remove the following major version as it was never documented

    this.events = Router.events;
    this.pageLoader = pageLoader;
    this.pathname = _pathname;
    this.query = _query; // if auto prerendered and dynamic route wait to update asPath
    // until after mount to prevent hydration mismatch

    this.asPath = // @ts-ignore this is temporarily global (attached to window)
    (0, _isDynamic.isDynamicRoute)(_pathname) && __NEXT_DATA__.autoExport ? _pathname : _as;
    this.basePath = basePath;
    this.sub = subscription;
    this.clc = null;
    this._wrapApp = wrapApp; // make sure to ignore extra popState in safari on navigating
    // back from external site

    this.isSsr = true;
    this.isFallback = isFallback;

    if (true) {
      // make sure "as" doesn't start with double slashes or else it can
      // throw an error as it's considered invalid
      if (_as.substr(0, 2) !== '//') {
        // in order for `e.state` to work on the `onpopstate` event
        // we have to register the initial route upon initialization
        this.changeState('replaceState', (0, _utils.formatWithValidation)({
          pathname: addBasePath(_pathname),
          query: _query
        }), (0, _utils.getURL)());
      }

      window.addEventListener('popstate', this.onPopState); // enable custom scroll restoration handling when available
      // otherwise fallback to browser's default handling

      if (false) { var debouncedScrollSave, scrollDebounceTimeout; }
    }
  }

  _createClass(Router, [{
    key: "update",
    value: function update(route, mod) {
      var Component = mod["default"] || mod;
      var data = this.components[route];

      if (!data) {
        throw new Error("Cannot update unavailable route: ".concat(route));
      }

      var newData = Object.assign({}, data, {
        Component: Component,
        __N_SSG: mod.__N_SSG,
        __N_SSP: mod.__N_SSP
      });
      this.components[route] = newData; // pages/_app.js updated

      if (route === '/_app') {
        this.notify(this.components[this.route]);
        return;
      }

      if (route === this.route) {
        this.notify(newData);
      }
    }
  }, {
    key: "reload",
    value: function reload() {
      window.location.reload();
    }
    /**
    * Go back in history
    */

  }, {
    key: "back",
    value: function back() {
      window.history.back();
    }
    /**
    * Performs a `pushState` with arguments
    * @param url of the route
    * @param as masks `url` for the browser
    * @param options object you can define `shallow` and other options
    */

  }, {
    key: "push",
    value: function push(url) {
      var as = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : url;
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      ;

      var _prepareUrlAs = prepareUrlAs(this, url, as);

      url = _prepareUrlAs.url;
      as = _prepareUrlAs.as;
      return this.change('pushState', url, as, options);
    }
    /**
    * Performs a `replaceState` with arguments
    * @param url of the route
    * @param as masks `url` for the browser
    * @param options object you can define `shallow` and other options
    */

  }, {
    key: "replace",
    value: function replace(url) {
      var as = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : url;
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      ;

      var _prepareUrlAs2 = prepareUrlAs(this, url, as);

      url = _prepareUrlAs2.url;
      as = _prepareUrlAs2.as;
      return this.change('replaceState', url, as, options);
    }
  }, {
    key: "change",
    value: function () {
      var _change = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(method, url, as, options) {
        var cleanedAs, parsed, pathname, searchParams, query, route, _options$shallow, shallow, _ref3, asPathname, routeRegex, routeMatch, missingParams, routeInfo, error, appComp;

        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (isLocalURL(url)) {
                  _context.next = 3;
                  break;
                }

                window.location.href = url;
                return _context.abrupt("return", false);

              case 3:
                if (!options._h) {
                  this.isSsr = false;
                } // marking route changes as a navigation start entry


                if (_utils.ST) {
                  performance.mark('routeChange');
                }

                if (this._inFlightRoute) {
                  this.abortComponentLoad(this._inFlightRoute);
                }

                cleanedAs = hasBasePath(as) ? delBasePath(as) : as;
                this._inFlightRoute = as; // If the url change is only related to a hash change
                // We should not proceed. We should only change the state.
                // WARNING: `_h` is an internal option for handing Next.js client-side
                // hydration. Your app should _never_ use this property. It may change at
                // any time without notice.

                if (!(!options._h && this.onlyAHashChange(cleanedAs))) {
                  _context.next = 16;
                  break;
                }

                this.asPath = cleanedAs;
                Router.events.emit('hashChangeStart', as);
                this.changeState(method, url, as, options);
                this.scrollToHash(cleanedAs);
                this.notify(this.components[this.route]);
                Router.events.emit('hashChangeComplete', as);
                return _context.abrupt("return", true);

              case 16:
                parsed = tryParseRelativeUrl(url);

                if (parsed) {
                  _context.next = 19;
                  break;
                }

                return _context.abrupt("return", false);

              case 19:
                pathname = parsed.pathname, searchParams = parsed.searchParams;
                query = (0, _querystring.searchParamsToUrlQuery)(searchParams); // url and as should always be prefixed with basePath by this
                // point by either next/link or router.push/replace so strip the
                // basePath from the pathname to match the pages dir 1-to-1

                pathname = pathname ? (0, _normalizeTrailingSlash.removePathTrailingSlash)(delBasePath(pathname)) : pathname; // If asked to change the current URL we should reload the current page
                // (not location.reload() but reload getInitialProps and other Next.js stuffs)
                // We also need to set the method = replaceState always
                // as this should not go into the history (That's how browsers work)
                // We should compare the new asPath to the current asPath, not the url

                if (!this.urlIsNew(cleanedAs)) {
                  method = 'replaceState';
                }

                route = (0, _normalizeTrailingSlash.removePathTrailingSlash)(pathname);
                _options$shallow = options.shallow, shallow = _options$shallow === void 0 ? false : _options$shallow;

                if (!(0, _isDynamic.isDynamicRoute)(route)) {
                  _context.next = 37;
                  break;
                }

                _ref3 = (0, _parseRelativeUrl.parseRelativeUrl)(cleanedAs), asPathname = _ref3.pathname;
                routeRegex = (0, _routeRegex.getRouteRegex)(route);
                routeMatch = (0, _routeMatcher.getRouteMatcher)(routeRegex)(asPathname);

                if (routeMatch) {
                  _context.next = 36;
                  break;
                }

                missingParams = Object.keys(routeRegex.groups).filter(function (param) {
                  return !query[param];
                });

                if (!(missingParams.length > 0)) {
                  _context.next = 34;
                  break;
                }

                if (true) {
                  console.warn("Mismatching `as` and `href` failed to manually provide " + "the params: ".concat(missingParams.join(', '), " in the `href`'s `query`"));
                }

                throw new Error("The provided `as` value (".concat(asPathname, ") is incompatible with the `href` value (").concat(route, "). ") + "Read more: https://err.sh/vercel/next.js/incompatible-href-as");

              case 34:
                _context.next = 37;
                break;

              case 36:
                // Merge params into `query`, overwriting any specified in search
                Object.assign(query, routeMatch);

              case 37:
                Router.events.emit('routeChangeStart', as);
                _context.prev = 38;
                _context.next = 41;
                return this.getRouteInfo(route, pathname, query, as, shallow);

              case 41:
                routeInfo = _context.sent;
                error = routeInfo.error;
                Router.events.emit('beforeHistoryChange', as);
                this.changeState(method, url, as, options);

                if (true) {
                  appComp = this.components['/_app'].Component;
                  window.next.isPrerendered = appComp.getInitialProps === appComp.origGetInitialProps && !routeInfo.Component.getInitialProps;
                }

                _context.next = 48;
                return this.set(route, pathname, query, cleanedAs, routeInfo);

              case 48:
                if (!error) {
                  _context.next = 51;
                  break;
                }

                Router.events.emit('routeChangeError', error, cleanedAs);
                throw error;

              case 51:
                if (false) {}

                Router.events.emit('routeChangeComplete', as);
                return _context.abrupt("return", true);

              case 56:
                _context.prev = 56;
                _context.t0 = _context["catch"](38);

                if (!_context.t0.cancelled) {
                  _context.next = 60;
                  break;
                }

                return _context.abrupt("return", false);

              case 60:
                throw _context.t0;

              case 61:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[38, 56]]);
      }));

      function change(_x, _x2, _x3, _x4) {
        return _change.apply(this, arguments);
      }

      return change;
    }()
  }, {
    key: "changeState",
    value: function changeState(method, url, as) {
      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

      if (true) {
        if (typeof window.history === 'undefined') {
          console.error("Warning: window.history is not available.");
          return;
        }

        if (typeof window.history[method] === 'undefined') {
          console.error("Warning: window.history.".concat(method, " is not available"));
          return;
        }
      }

      if (method !== 'pushState' || (0, _utils.getURL)() !== as) {
        window.history[method]({
          url: url,
          as: as,
          options: options,
          __N: true
        }, // Most browsers currently ignores this parameter, although they may use it in the future.
        // Passing the empty string here should be safe against future changes to the method.
        // https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState
        '', as);
      }
    }
  }, {
    key: "handleRouteInfoError",
    value: function () {
      var _handleRouteInfoError = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(err, pathname, query, as, loadErrorFail) {
        var _yield$this$fetchComp, Component, routeInfo;

        return _regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (!err.cancelled) {
                  _context2.next = 2;
                  break;
                }

                throw err;

              case 2:
                if (!(PAGE_LOAD_ERROR in err || loadErrorFail)) {
                  _context2.next = 6;
                  break;
                }

                Router.events.emit('routeChangeError', err, as); // If we can't load the page it could be one of following reasons
                //  1. Page doesn't exists
                //  2. Page does exist in a different zone
                //  3. Internal error while loading the page
                // So, doing a hard reload is the proper way to deal with this.

                window.location.href = as; // Changing the URL doesn't block executing the current code path.
                // So let's throw a cancellation error stop the routing logic.

                throw buildCancellationError();

              case 6:
                _context2.prev = 6;
                _context2.next = 9;
                return this.fetchComponent('/_error');

              case 9:
                _yield$this$fetchComp = _context2.sent;
                Component = _yield$this$fetchComp.page;
                routeInfo = {
                  Component: Component,
                  err: err,
                  error: err
                };
                _context2.prev = 12;
                _context2.next = 15;
                return this.getInitialProps(Component, {
                  err: err,
                  pathname: pathname,
                  query: query
                });

              case 15:
                routeInfo.props = _context2.sent;
                _context2.next = 22;
                break;

              case 18:
                _context2.prev = 18;
                _context2.t0 = _context2["catch"](12);
                console.error('Error in error page `getInitialProps`: ', _context2.t0);
                routeInfo.props = {};

              case 22:
                return _context2.abrupt("return", routeInfo);

              case 25:
                _context2.prev = 25;
                _context2.t1 = _context2["catch"](6);
                return _context2.abrupt("return", this.handleRouteInfoError(_context2.t1, pathname, query, as, true));

              case 28:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this, [[6, 25], [12, 18]]);
      }));

      function handleRouteInfoError(_x5, _x6, _x7, _x8, _x9) {
        return _handleRouteInfoError.apply(this, arguments);
      }

      return handleRouteInfoError;
    }()
  }, {
    key: "getRouteInfo",
    value: function () {
      var _getRouteInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(route, pathname, query, as) {
        var _this2 = this;

        var shallow,
            cachedRouteInfo,
            routeInfo,
            Component,
            __N_SSG,
            __N_SSP,
            _require,
            isValidElementType,
            dataHref,
            props,
            _args3 = arguments;

        return _regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                shallow = _args3.length > 4 && _args3[4] !== undefined ? _args3[4] : false;
                _context3.prev = 1;
                cachedRouteInfo = this.components[route];

                if (!(shallow && cachedRouteInfo && this.route === route)) {
                  _context3.next = 5;
                  break;
                }

                return _context3.abrupt("return", cachedRouteInfo);

              case 5:
                if (!cachedRouteInfo) {
                  _context3.next = 9;
                  break;
                }

                _context3.t0 = cachedRouteInfo;
                _context3.next = 12;
                break;

              case 9:
                _context3.next = 11;
                return this.fetchComponent(route).then(function (res) {
                  return {
                    Component: res.page,
                    __N_SSG: res.mod.__N_SSG,
                    __N_SSP: res.mod.__N_SSP
                  };
                });

              case 11:
                _context3.t0 = _context3.sent;

              case 12:
                routeInfo = _context3.t0;
                Component = routeInfo.Component, __N_SSG = routeInfo.__N_SSG, __N_SSP = routeInfo.__N_SSP;

                if (false) {}

                _require = __webpack_require__(/*! react-is */ "./node_modules/react-is/index.js"), isValidElementType = _require.isValidElementType;

                if (isValidElementType(Component)) {
                  _context3.next = 18;
                  break;
                }

                throw new Error("The default export is not a React Component in page: \"".concat(pathname, "\""));

              case 18:
                if (__N_SSG || __N_SSP) {
                  dataHref = this.pageLoader.getDataHref((0, _utils.formatWithValidation)({
                    pathname: pathname,
                    query: query
                  }), as, __N_SSG);
                }

                _context3.next = 21;
                return this._getData(function () {
                  return __N_SSG ? _this2._getStaticData(dataHref) : __N_SSP ? _this2._getServerData(dataHref) : _this2.getInitialProps(Component, // we provide AppTree later so this needs to be `any`
                  {
                    pathname: pathname,
                    query: query,
                    asPath: as
                  });
                });

              case 21:
                props = _context3.sent;
                routeInfo.props = props;
                this.components[route] = routeInfo;
                return _context3.abrupt("return", routeInfo);

              case 27:
                _context3.prev = 27;
                _context3.t1 = _context3["catch"](1);
                return _context3.abrupt("return", this.handleRouteInfoError(_context3.t1, pathname, query, as));

              case 30:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this, [[1, 27]]);
      }));

      function getRouteInfo(_x10, _x11, _x12, _x13) {
        return _getRouteInfo.apply(this, arguments);
      }

      return getRouteInfo;
    }()
  }, {
    key: "set",
    value: function set(route, pathname, query, as, data) {
      this.isFallback = false;
      this.route = route;
      this.pathname = pathname;
      this.query = query;
      this.asPath = as;
      return this.notify(data);
    }
    /**
    * Callback to execute before replacing router state
    * @param cb callback to be executed
    */

  }, {
    key: "beforePopState",
    value: function beforePopState(cb) {
      this._bps = cb;
    }
  }, {
    key: "onlyAHashChange",
    value: function onlyAHashChange(as) {
      if (!this.asPath) return false;

      var _this$asPath$split = this.asPath.split('#'),
          _this$asPath$split2 = _slicedToArray(_this$asPath$split, 2),
          oldUrlNoHash = _this$asPath$split2[0],
          oldHash = _this$asPath$split2[1];

      var _as$split = as.split('#'),
          _as$split2 = _slicedToArray(_as$split, 2),
          newUrlNoHash = _as$split2[0],
          newHash = _as$split2[1]; // Makes sure we scroll to the provided hash if the url/hash are the same


      if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {
        return true;
      } // If the urls are change, there's more than a hash change


      if (oldUrlNoHash !== newUrlNoHash) {
        return false;
      } // If the hash has changed, then it's a hash only change.
      // This check is necessary to handle both the enter and
      // leave hash === '' cases. The identity case falls through
      // and is treated as a next reload.


      return oldHash !== newHash;
    }
  }, {
    key: "scrollToHash",
    value: function scrollToHash(as) {
      var _as$split3 = as.split('#'),
          _as$split4 = _slicedToArray(_as$split3, 2),
          hash = _as$split4[1]; // Scroll to top if the hash is just `#` with no value


      if (hash === '') {
        window.scrollTo(0, 0);
        return;
      } // First we check if the element by id is found


      var idEl = document.getElementById(hash);

      if (idEl) {
        idEl.scrollIntoView();
        return;
      } // If there's no element with the id, we check the `name` property
      // To mirror browsers


      var nameEl = document.getElementsByName(hash)[0];

      if (nameEl) {
        nameEl.scrollIntoView();
      }
    }
  }, {
    key: "urlIsNew",
    value: function urlIsNew(asPath) {
      return this.asPath !== asPath;
    }
    /**
    * Prefetch page code, you may wait for the data during page rendering.
    * This feature only works in production!
    * @param url the href of prefetched page
    * @param asPath the as path of the prefetched page
    */

  }, {
    key: "prefetch",
    value: function () {
      var _prefetch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(url) {
        var asPath,
            options,
            parsed,
            pathname,
            route,
            _args4 = arguments;
        return _regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                asPath = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : url;
                options = _args4.length > 2 && _args4[2] !== undefined ? _args4[2] : {};
                parsed = tryParseRelativeUrl(url);

                if (parsed) {
                  _context4.next = 5;
                  break;
                }

                return _context4.abrupt("return");

              case 5:
                pathname = parsed.pathname; // Prefetch is not supported in development mode because it would trigger on-demand-entries

                if (false) {}

                return _context4.abrupt("return");

              case 8:
                route = (0, _normalizeTrailingSlash.removePathTrailingSlash)(pathname);
                _context4.next = 11;
                return Promise.all([this.pageLoader.prefetchData(url, asPath), this.pageLoader[options.priority ? 'loadPage' : 'prefetch'](route)]);

              case 11:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function prefetch(_x14) {
        return _prefetch.apply(this, arguments);
      }

      return prefetch;
    }()
  }, {
    key: "fetchComponent",
    value: function () {
      var _fetchComponent = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(route) {
        var cancelled, cancel, componentResult, error;
        return _regeneratorRuntime.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                cancelled = false;

                cancel = this.clc = function () {
                  cancelled = true;
                };

                _context5.next = 4;
                return this.pageLoader.loadPage(route);

              case 4:
                componentResult = _context5.sent;

                if (!cancelled) {
                  _context5.next = 9;
                  break;
                }

                error = new Error("Abort fetching component for route: \"".concat(route, "\""));
                error.cancelled = true;
                throw error;

              case 9:
                if (cancel === this.clc) {
                  this.clc = null;
                }

                return _context5.abrupt("return", componentResult);

              case 11:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function fetchComponent(_x15) {
        return _fetchComponent.apply(this, arguments);
      }

      return fetchComponent;
    }()
  }, {
    key: "_getData",
    value: function _getData(fn) {
      var _this3 = this;

      var cancelled = false;

      var cancel = function cancel() {
        cancelled = true;
      };

      this.clc = cancel;
      return fn().then(function (data) {
        if (cancel === _this3.clc) {
          _this3.clc = null;
        }

        if (cancelled) {
          var err = new Error('Loading initial props cancelled');
          err.cancelled = true;
          throw err;
        }

        return data;
      });
    }
  }, {
    key: "_getStaticData",
    value: function _getStaticData(dataHref) {
      var _this4 = this;

      var _URL = new URL(dataHref, window.location.href),
          cacheKey = _URL.href;

      if (false) {}

      return fetchNextData(dataHref, this.isSsr).then(function (data) {
        _this4.sdc[cacheKey] = data;
        return data;
      });
    }
  }, {
    key: "_getServerData",
    value: function _getServerData(dataHref) {
      return fetchNextData(dataHref, this.isSsr);
    }
  }, {
    key: "getInitialProps",
    value: function getInitialProps(Component, ctx) {
      var App = this.components['/_app'].Component;

      var AppTree = this._wrapApp(App);

      ctx.AppTree = AppTree;
      return (0, _utils.loadGetInitialProps)(App, {
        AppTree: AppTree,
        Component: Component,
        router: this,
        ctx: ctx
      });
    }
  }, {
    key: "abortComponentLoad",
    value: function abortComponentLoad(as) {
      if (this.clc) {
        Router.events.emit('routeChangeError', buildCancellationError(), as);
        this.clc();
        this.clc = null;
      }
    }
  }, {
    key: "notify",
    value: function notify(data) {
      return this.sub(data, this.components['/_app'].Component);
    }
  }]);

  return Router;
}();

exports["default"] = Router;
Router.events = (0, _mitt["default"])();

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/format-url.js":
/*!***************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/format-url.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

exports.__esModule = true;
exports.formatUrl = formatUrl;

var querystring = _interopRequireWildcard(__webpack_require__(/*! ./querystring */ "./node_modules/next/dist/next-server/lib/router/utils/querystring.js"));

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      "default": obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj["default"] = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
} // Format function modified from nodejs
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.


var slashedProtocols = /https?|ftp|gopher|file/;

function formatUrl(urlObj) {
  var auth = urlObj.auth,
      hostname = urlObj.hostname;
  var protocol = urlObj.protocol || '';
  var pathname = urlObj.pathname || '';
  var hash = urlObj.hash || '';
  var query = urlObj.query || '';
  var host = false;
  auth = auth ? encodeURIComponent(auth).replace(/%3A/i, ':') + '@' : '';

  if (urlObj.host) {
    host = auth + urlObj.host;
  } else if (hostname) {
    host = auth + (~hostname.indexOf(':') ? "[".concat(hostname, "]") : hostname);

    if (urlObj.port) {
      host += ':' + urlObj.port;
    }
  }

  if (query && typeof query === 'object') {
    query = String(querystring.urlQueryToSearchParams(query));
  }

  var search = urlObj.search || query && "?".concat(query) || '';
  if (protocol && protocol.substr(-1) !== ':') protocol += ':';

  if (urlObj.slashes || (!protocol || slashedProtocols.test(protocol)) && host !== false) {
    host = '//' + (host || '');
    if (pathname && pathname[0] !== '/') pathname = '/' + pathname;
  } else if (!host) {
    host = '';
  }

  if (hash && hash[0] !== '#') hash = '#' + hash;
  if (search && search[0] !== '?') search = '?' + search;
  pathname = pathname.replace(/[?#]/g, encodeURIComponent);
  search = search.replace('#', '%23');
  return "".concat(protocol).concat(host).concat(pathname).concat(search).concat(hash);
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/is-dynamic.js":
/*!***************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/is-dynamic.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

exports.__esModule = true;
exports.isDynamicRoute = isDynamicRoute; // Identify /[param]/ in route string

var TEST_ROUTE = /\/\[[^/]+?\](?=\/|$)/;

function isDynamicRoute(route) {
  return TEST_ROUTE.test(route);
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/parse-relative-url.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/parse-relative-url.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

exports.__esModule = true;
exports.parseRelativeUrl = parseRelativeUrl;

var _utils = __webpack_require__(/*! ../../utils */ "./node_modules/next/dist/next-server/lib/utils.js");

var DUMMY_BASE = new URL(false ? undefined : (0, _utils.getLocationOrigin)());
/**
* Parses path-relative urls (e.g. `/hello/world?foo=bar`). If url isn't path-relative
* (e.g. `./hello`) then at least base must be.
* Absolute urls are rejected with one exception, in the browser, absolute urls that are on
* the current origin will be parsed as relative
*/

function parseRelativeUrl(url, base) {
  var resolvedBase = base ? new URL(base, DUMMY_BASE) : DUMMY_BASE;

  var _URL = new URL(url, resolvedBase),
      pathname = _URL.pathname,
      searchParams = _URL.searchParams,
      search = _URL.search,
      hash = _URL.hash,
      href = _URL.href,
      origin = _URL.origin,
      protocol = _URL.protocol;

  if (origin !== DUMMY_BASE.origin || protocol !== 'http:' && protocol !== 'https:') {
    throw new Error('invariant: invalid relative URL');
  }

  return {
    pathname: pathname,
    searchParams: searchParams,
    search: search,
    hash: hash,
    href: href.slice(DUMMY_BASE.origin.length)
  };
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/querystring.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/querystring.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

var _slicedToArray = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/slicedToArray.js");

exports.__esModule = true;
exports.searchParamsToUrlQuery = searchParamsToUrlQuery;
exports.urlQueryToSearchParams = urlQueryToSearchParams;
exports.assign = assign;

function searchParamsToUrlQuery(searchParams) {
  var query = {};
  searchParams.forEach(function (value, key) {
    if (typeof query[key] === 'undefined') {
      query[key] = value;
    } else if (Array.isArray(query[key])) {
      ;
      query[key].push(value);
    } else {
      query[key] = [query[key], value];
    }
  });
  return query;
}

function urlQueryToSearchParams(urlQuery) {
  var result = new URLSearchParams();
  Object.entries(urlQuery).forEach(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 2),
        key = _ref2[0],
        value = _ref2[1];

    if (Array.isArray(value)) {
      value.forEach(function (item) {
        return result.append(key, item);
      });
    } else {
      result.set(key, value);
    }
  });
  return result;
}

function assign(target) {
  for (var _len = arguments.length, searchParamsList = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    searchParamsList[_key - 1] = arguments[_key];
  }

  searchParamsList.forEach(function (searchParams) {
    Array.from(searchParams.keys()).forEach(function (key) {
      return target["delete"](key);
    });
    searchParams.forEach(function (value, key) {
      return target.append(key, value);
    });
  });
  return target;
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/route-matcher.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/route-matcher.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

exports.__esModule = true;
exports.getRouteMatcher = getRouteMatcher;

function getRouteMatcher(routeRegex) {
  var re = routeRegex.re,
      groups = routeRegex.groups;
  return function (pathname) {
    var routeMatch = re.exec(pathname);

    if (!routeMatch) {
      return false;
    }

    var decode = function decode(param) {
      try {
        return decodeURIComponent(param);
      } catch (_) {
        var err = new Error('failed to decode param');
        err.code = 'DECODE_FAILED';
        throw err;
      }
    };

    var params = {};
    Object.keys(groups).forEach(function (slugName) {
      var g = groups[slugName];
      var m = routeMatch[g.pos];

      if (m !== undefined) {
        params[slugName] = ~m.indexOf('/') ? m.split('/').map(function (entry) {
          return decode(entry);
        }) : g.repeat ? [decode(m)] : decode(m);
      }
    });
    return params;
  };
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/route-regex.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/route-regex.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

exports.__esModule = true;
exports.getRouteRegex = getRouteRegex; // this isn't importing the escape-string-regex module
// to reduce bytes

function escapeRegex(str) {
  return str.replace(/[|\\{}()[\]^$+*?.-]/g, '\\$&');
}

function parseParameter(param) {
  var optional = param.startsWith('[') && param.endsWith(']');

  if (optional) {
    param = param.slice(1, -1);
  }

  var repeat = param.startsWith('...');

  if (repeat) {
    param = param.slice(3);
  }

  return {
    key: param,
    repeat: repeat,
    optional: optional
  };
}

function getRouteRegex(normalizedRoute) {
  var segments = (normalizedRoute.replace(/\/$/, '') || '/').slice(1).split('/');
  var groups = {};
  var groupIndex = 1;
  var parameterizedRoute = segments.map(function (segment) {
    if (segment.startsWith('[') && segment.endsWith(']')) {
      var _parseParameter = parseParameter(segment.slice(1, -1)),
          key = _parseParameter.key,
          optional = _parseParameter.optional,
          repeat = _parseParameter.repeat;

      groups[key] = {
        pos: groupIndex++,
        repeat: repeat,
        optional: optional
      };
      return repeat ? optional ? '(?:/(.+?))?' : '/(.+?)' : '/([^/]+?)';
    } else {
      return "/".concat(escapeRegex(segment));
    }
  }).join(''); // dead code eliminate for browser since it's only needed
  // while generating routes-manifest

  if (false) { var namedParameterizedRoute, routeKeys, getSafeRouteKey, routeKeyCharLength, routeKeyCharCode; }

  return {
    re: new RegExp("^".concat(parameterizedRoute, "(?:/)?$")),
    groups: groups
  };
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/utils.js":
/*!*********************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/utils.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

var _regeneratorRuntime = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");

var _asyncToGenerator = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ "./node_modules/@babel/runtime/helpers/asyncToGenerator.js");

exports.__esModule = true;
exports.execOnce = execOnce;
exports.getLocationOrigin = getLocationOrigin;
exports.getURL = getURL;
exports.getDisplayName = getDisplayName;
exports.isResSent = isResSent;
exports.loadGetInitialProps = loadGetInitialProps;
exports.formatWithValidation = formatWithValidation;
exports.ST = exports.SP = exports.urlObjectKeys = void 0;

var _formatUrl = __webpack_require__(/*! ./router/utils/format-url */ "./node_modules/next/dist/next-server/lib/router/utils/format-url.js");
/**
* Utils
*/


function execOnce(fn) {
  var used = false;
  var result;
  return function () {
    if (!used) {
      used = true;
      result = fn.apply(void 0, arguments);
    }

    return result;
  };
}

function getLocationOrigin() {
  var _window$location = window.location,
      protocol = _window$location.protocol,
      hostname = _window$location.hostname,
      port = _window$location.port;
  return "".concat(protocol, "//").concat(hostname).concat(port ? ':' + port : '');
}

function getURL() {
  var href = window.location.href;
  var origin = getLocationOrigin();
  return href.substring(origin.length);
}

function getDisplayName(Component) {
  return typeof Component === 'string' ? Component : Component.displayName || Component.name || 'Unknown';
}

function isResSent(res) {
  return res.finished || res.headersSent;
}

function loadGetInitialProps(_x, _x2) {
  return _loadGetInitialProps.apply(this, arguments);
}

function _loadGetInitialProps() {
  _loadGetInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(App, ctx) {
    var _App$prototype, message, res, props, _message;

    return _regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            if (false) {}

            if (!((_App$prototype = App.prototype) === null || _App$prototype === void 0 ? void 0 : _App$prototype.getInitialProps)) {
              _context.next = 4;
              break;
            }

            message = "\"".concat(getDisplayName(App), ".getInitialProps()\" is defined as an instance method - visit https://err.sh/vercel/next.js/get-initial-props-as-an-instance-method for more information.");
            throw new Error(message);

          case 4:
            // when called from _app `ctx` is nested in `ctx`
            res = ctx.res || ctx.ctx && ctx.ctx.res;

            if (App.getInitialProps) {
              _context.next = 12;
              break;
            }

            if (!(ctx.ctx && ctx.Component)) {
              _context.next = 11;
              break;
            }

            _context.next = 9;
            return loadGetInitialProps(ctx.Component, ctx.ctx);

          case 9:
            _context.t0 = _context.sent;
            return _context.abrupt("return", {
              pageProps: _context.t0
            });

          case 11:
            return _context.abrupt("return", {});

          case 12:
            _context.next = 14;
            return App.getInitialProps(ctx);

          case 14:
            props = _context.sent;

            if (!(res && isResSent(res))) {
              _context.next = 17;
              break;
            }

            return _context.abrupt("return", props);

          case 17:
            if (props) {
              _context.next = 20;
              break;
            }

            _message = "\"".concat(getDisplayName(App), ".getInitialProps()\" should resolve to an object. But found \"").concat(props, "\" instead.");
            throw new Error(_message);

          case 20:
            if (true) {
              if (Object.keys(props).length === 0 && !ctx.ctx) {
                console.warn("".concat(getDisplayName(App), " returned an empty object from `getInitialProps`. This de-optimizes and prevents automatic static optimization. https://err.sh/vercel/next.js/empty-object-getInitialProps"));
              }
            }

            return _context.abrupt("return", props);

          case 22:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _loadGetInitialProps.apply(this, arguments);
}

var urlObjectKeys = ['auth', 'hash', 'host', 'hostname', 'href', 'path', 'pathname', 'port', 'protocol', 'query', 'search', 'slashes'];
exports.urlObjectKeys = urlObjectKeys;

function formatWithValidation(url) {
  if (true) {
    if (url !== null && typeof url === 'object') {
      Object.keys(url).forEach(function (key) {
        if (urlObjectKeys.indexOf(key) === -1) {
          console.warn("Unknown key passed via urlObject into url.format: ".concat(key));
        }
      });
    }
  }

  return (0, _formatUrl.formatUrl)(url);
}

var SP = typeof performance !== 'undefined';
exports.SP = SP;
var ST = SP && typeof performance.mark === 'function' && typeof performance.measure === 'function';
exports.ST = ST;

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/prop-types/checkPropTypes.js":
/*!***************************************************!*\
  !*** ./node_modules/prop-types/checkPropTypes.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var printWarning = function() {};

if (true) {
  var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ "./node_modules/prop-types/lib/ReactPropTypesSecret.js");
  var loggedTypeFailures = {};
  var has = Function.call.bind(Object.prototype.hasOwnProperty);

  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (true) {
    for (var typeSpecName in typeSpecs) {
      if (has(typeSpecs, typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error(
              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +
              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'
            );
            err.name = 'Invariant Violation';
            throw err;
          }
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        if (error && !(error instanceof Error)) {
          printWarning(
            (componentName || 'React class') + ': type specification of ' +
            location + ' `' + typeSpecName + '` is invalid; the type checker ' +
            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +
            'You may have forgotten to pass an argument to the type checker ' +
            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
            'shape all require an argument).'
          );
        }
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          printWarning(
            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')
          );
        }
      }
    }
  }
}

/**
 * Resets warning cache when testing.
 *
 * @private
 */
checkPropTypes.resetWarningCache = function() {
  if (true) {
    loggedTypeFailures = {};
  }
}

module.exports = checkPropTypes;


/***/ }),

/***/ "./node_modules/prop-types/lib/ReactPropTypesSecret.js":
/*!*************************************************************!*\
  !*** ./node_modules/prop-types/lib/ReactPropTypesSecret.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;


/***/ }),

/***/ "./node_modules/react-is/cjs/react-is.development.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-is/cjs/react-is.development.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */





if (true) {
  (function() {
'use strict';

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;
var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
// (unstable) APIs that have been removed. Can we remove the symbols?

var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;

function isValidElementType(type) {
  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
}

function typeOf(object) {
  if (typeof object === 'object' && object !== null) {
    var $$typeof = object.$$typeof;

    switch ($$typeof) {
      case REACT_ELEMENT_TYPE:
        var type = object.type;

        switch (type) {
          case REACT_ASYNC_MODE_TYPE:
          case REACT_CONCURRENT_MODE_TYPE:
          case REACT_FRAGMENT_TYPE:
          case REACT_PROFILER_TYPE:
          case REACT_STRICT_MODE_TYPE:
          case REACT_SUSPENSE_TYPE:
            return type;

          default:
            var $$typeofType = type && type.$$typeof;

            switch ($$typeofType) {
              case REACT_CONTEXT_TYPE:
              case REACT_FORWARD_REF_TYPE:
              case REACT_LAZY_TYPE:
              case REACT_MEMO_TYPE:
              case REACT_PROVIDER_TYPE:
                return $$typeofType;

              default:
                return $$typeof;
            }

        }

      case REACT_PORTAL_TYPE:
        return $$typeof;
    }
  }

  return undefined;
} // AsyncMode is deprecated along with isAsyncMode

var AsyncMode = REACT_ASYNC_MODE_TYPE;
var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
var ContextConsumer = REACT_CONTEXT_TYPE;
var ContextProvider = REACT_PROVIDER_TYPE;
var Element = REACT_ELEMENT_TYPE;
var ForwardRef = REACT_FORWARD_REF_TYPE;
var Fragment = REACT_FRAGMENT_TYPE;
var Lazy = REACT_LAZY_TYPE;
var Memo = REACT_MEMO_TYPE;
var Portal = REACT_PORTAL_TYPE;
var Profiler = REACT_PROFILER_TYPE;
var StrictMode = REACT_STRICT_MODE_TYPE;
var Suspense = REACT_SUSPENSE_TYPE;
var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated

function isAsyncMode(object) {
  {
    if (!hasWarnedAboutDeprecatedIsAsyncMode) {
      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint

      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
    }
  }

  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
}
function isConcurrentMode(object) {
  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
}
function isContextConsumer(object) {
  return typeOf(object) === REACT_CONTEXT_TYPE;
}
function isContextProvider(object) {
  return typeOf(object) === REACT_PROVIDER_TYPE;
}
function isElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}
function isForwardRef(object) {
  return typeOf(object) === REACT_FORWARD_REF_TYPE;
}
function isFragment(object) {
  return typeOf(object) === REACT_FRAGMENT_TYPE;
}
function isLazy(object) {
  return typeOf(object) === REACT_LAZY_TYPE;
}
function isMemo(object) {
  return typeOf(object) === REACT_MEMO_TYPE;
}
function isPortal(object) {
  return typeOf(object) === REACT_PORTAL_TYPE;
}
function isProfiler(object) {
  return typeOf(object) === REACT_PROFILER_TYPE;
}
function isStrictMode(object) {
  return typeOf(object) === REACT_STRICT_MODE_TYPE;
}
function isSuspense(object) {
  return typeOf(object) === REACT_SUSPENSE_TYPE;
}

exports.AsyncMode = AsyncMode;
exports.ConcurrentMode = ConcurrentMode;
exports.ContextConsumer = ContextConsumer;
exports.ContextProvider = ContextProvider;
exports.Element = Element;
exports.ForwardRef = ForwardRef;
exports.Fragment = Fragment;
exports.Lazy = Lazy;
exports.Memo = Memo;
exports.Portal = Portal;
exports.Profiler = Profiler;
exports.StrictMode = StrictMode;
exports.Suspense = Suspense;
exports.isAsyncMode = isAsyncMode;
exports.isConcurrentMode = isConcurrentMode;
exports.isContextConsumer = isContextConsumer;
exports.isContextProvider = isContextProvider;
exports.isElement = isElement;
exports.isForwardRef = isForwardRef;
exports.isFragment = isFragment;
exports.isLazy = isLazy;
exports.isMemo = isMemo;
exports.isPortal = isPortal;
exports.isProfiler = isProfiler;
exports.isStrictMode = isStrictMode;
exports.isSuspense = isSuspense;
exports.isValidElementType = isValidElementType;
exports.typeOf = typeOf;
  })();
}


/***/ }),

/***/ "./node_modules/react-is/index.js":
/*!****************************************!*\
  !*** ./node_modules/react-is/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/react-is.development.js */ "./node_modules/react-is/cjs/react-is.development.js");
}


/***/ }),

/***/ "./node_modules/react/cjs/react.development.js":
/*!*****************************************************!*\
  !*** ./node_modules/react/cjs/react.development.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.13.1
 * react.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */





if (true) {
  (function() {
'use strict';

var _assign = __webpack_require__(/*! object-assign */ "./node_modules/next/dist/build/polyfills/object-assign.js");
var checkPropTypes = __webpack_require__(/*! prop-types/checkPropTypes */ "./node_modules/prop-types/checkPropTypes.js");

var ReactVersion = '16.13.1';

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;
var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;
var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator';
function getIteratorFn(maybeIterable) {
  if (maybeIterable === null || typeof maybeIterable !== 'object') {
    return null;
  }

  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];

  if (typeof maybeIterator === 'function') {
    return maybeIterator;
  }

  return null;
}

/**
 * Keeps track of the current dispatcher.
 */
var ReactCurrentDispatcher = {
  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null
};

/**
 * Keeps track of the current batch's configuration such as how long an update
 * should suspend for if it needs to.
 */
var ReactCurrentBatchConfig = {
  suspense: null
};

/**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 */
var ReactCurrentOwner = {
  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null
};

var BEFORE_SLASH_RE = /^(.*)[\\\/]/;
function describeComponentFrame (name, source, ownerName) {
  var sourceInfo = '';

  if (source) {
    var path = source.fileName;
    var fileName = path.replace(BEFORE_SLASH_RE, '');

    {
      // In DEV, include code for a common special case:
      // prefer "folder/index.js" instead of just "index.js".
      if (/^index\./.test(fileName)) {
        var match = path.match(BEFORE_SLASH_RE);

        if (match) {
          var pathBeforeSlash = match[1];

          if (pathBeforeSlash) {
            var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');
            fileName = folderName + '/' + fileName;
          }
        }
      }
    }

    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';
  } else if (ownerName) {
    sourceInfo = ' (created by ' + ownerName + ')';
  }

  return '\n    in ' + (name || 'Unknown') + sourceInfo;
}

var Resolved = 1;
function refineResolvedLazyComponent(lazyComponent) {
  return lazyComponent._status === Resolved ? lazyComponent._result : null;
}

function getWrappedName(outerType, innerType, wrapperName) {
  var functionName = innerType.displayName || innerType.name || '';
  return outerType.displayName || (functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName);
}

function getComponentName(type) {
  if (type == null) {
    // Host root, text node or just invalid type.
    return null;
  }

  {
    if (typeof type.tag === 'number') {
      error('Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');
    }
  }

  if (typeof type === 'function') {
    return type.displayName || type.name || null;
  }

  if (typeof type === 'string') {
    return type;
  }

  switch (type) {
    case REACT_FRAGMENT_TYPE:
      return 'Fragment';

    case REACT_PORTAL_TYPE:
      return 'Portal';

    case REACT_PROFILER_TYPE:
      return "Profiler";

    case REACT_STRICT_MODE_TYPE:
      return 'StrictMode';

    case REACT_SUSPENSE_TYPE:
      return 'Suspense';

    case REACT_SUSPENSE_LIST_TYPE:
      return 'SuspenseList';
  }

  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        return 'Context.Consumer';

      case REACT_PROVIDER_TYPE:
        return 'Context.Provider';

      case REACT_FORWARD_REF_TYPE:
        return getWrappedName(type, type.render, 'ForwardRef');

      case REACT_MEMO_TYPE:
        return getComponentName(type.type);

      case REACT_BLOCK_TYPE:
        return getComponentName(type.render);

      case REACT_LAZY_TYPE:
        {
          var thenable = type;
          var resolvedThenable = refineResolvedLazyComponent(thenable);

          if (resolvedThenable) {
            return getComponentName(resolvedThenable);
          }

          break;
        }
    }
  }

  return null;
}

var ReactDebugCurrentFrame = {};
var currentlyValidatingElement = null;
function setCurrentlyValidatingElement(element) {
  {
    currentlyValidatingElement = element;
  }
}

{
  // Stack implementation injected by the current renderer.
  ReactDebugCurrentFrame.getCurrentStack = null;

  ReactDebugCurrentFrame.getStackAddendum = function () {
    var stack = ''; // Add an extra top frame while an element is being validated

    if (currentlyValidatingElement) {
      var name = getComponentName(currentlyValidatingElement.type);
      var owner = currentlyValidatingElement._owner;
      stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner.type));
    } // Delegate to the injected renderer-specific implementation


    var impl = ReactDebugCurrentFrame.getCurrentStack;

    if (impl) {
      stack += impl() || '';
    }

    return stack;
  };
}

/**
 * Used by act() to track whether you're inside an act() scope.
 */
var IsSomeRendererActing = {
  current: false
};

var ReactSharedInternals = {
  ReactCurrentDispatcher: ReactCurrentDispatcher,
  ReactCurrentBatchConfig: ReactCurrentBatchConfig,
  ReactCurrentOwner: ReactCurrentOwner,
  IsSomeRendererActing: IsSomeRendererActing,
  // Used by renderers to avoid bundling object-assign twice in UMD bundles:
  assign: _assign
};

{
  _assign(ReactSharedInternals, {
    // These should not be included in production.
    ReactDebugCurrentFrame: ReactDebugCurrentFrame,
    // Shim for React DOM 16.0.0 which still destructured (but not used) this.
    // TODO: remove in React 17.0.
    ReactComponentTreeHook: {}
  });
}

// by calls to these methods by a Babel plugin.
//
// In PROD (or in packages without access to React internals),
// they are left as they are instead.

function warn(format) {
  {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    printWarning('warn', format, args);
  }
}
function error(format) {
  {
    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      args[_key2 - 1] = arguments[_key2];
    }

    printWarning('error', format, args);
  }
}

function printWarning(level, format, args) {
  // When changing this logic, you might want to also
  // update consoleWithStackDev.www.js as well.
  {
    var hasExistingStack = args.length > 0 && typeof args[args.length - 1] === 'string' && args[args.length - 1].indexOf('\n    in') === 0;

    if (!hasExistingStack) {
      var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
      var stack = ReactDebugCurrentFrame.getStackAddendum();

      if (stack !== '') {
        format += '%s';
        args = args.concat([stack]);
      }
    }

    var argsWithFormat = args.map(function (item) {
      return '' + item;
    }); // Careful: RN currently depends on this prefix

    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
    // breaks IE9: https://github.com/facebook/react/issues/13610
    // eslint-disable-next-line react-internal/no-production-logging

    Function.prototype.apply.call(console[level], console, argsWithFormat);

    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      var argIndex = 0;
      var message = 'Warning: ' + format.replace(/%s/g, function () {
        return args[argIndex++];
      });
      throw new Error(message);
    } catch (x) {}
  }
}

var didWarnStateUpdateForUnmountedComponent = {};

function warnNoop(publicInstance, callerName) {
  {
    var _constructor = publicInstance.constructor;
    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';
    var warningKey = componentName + "." + callerName;

    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
      return;
    }

    error("Can't call %s on a component that is not yet mounted. " + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);

    didWarnStateUpdateForUnmountedComponent[warningKey] = true;
  }
}
/**
 * This is the abstract API for an update queue.
 */


var ReactNoopUpdateQueue = {
  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    return false;
  },

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance, callback, callerName) {
    warnNoop(publicInstance, 'forceUpdate');
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {
    warnNoop(publicInstance, 'replaceState');
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} Name of the calling function in the public API.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState, callback, callerName) {
    warnNoop(publicInstance, 'setState');
  }
};

var emptyObject = {};

{
  Object.freeze(emptyObject);
}
/**
 * Base class helpers for the updating state of a component.
 */


function Component(props, context, updater) {
  this.props = props;
  this.context = context; // If a component has string refs, we will assign a different object later.

  this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the
  // renderer.

  this.updater = updater || ReactNoopUpdateQueue;
}

Component.prototype.isReactComponent = {};
/**
 * Sets a subset of the state. Always use this to mutate
 * state. You should treat `this.state` as immutable.
 *
 * There is no guarantee that `this.state` will be immediately updated, so
 * accessing `this.state` after calling this method may return the old value.
 *
 * There is no guarantee that calls to `setState` will run synchronously,
 * as they may eventually be batched together.  You can provide an optional
 * callback that will be executed when the call to setState is actually
 * completed.
 *
 * When a function is provided to setState, it will be called at some point in
 * the future (not synchronously). It will be called with the up to date
 * component arguments (state, props, context). These values can be different
 * from this.* because your function may be called after receiveProps but before
 * shouldComponentUpdate, and this new state, props, and context will not yet be
 * assigned to this.
 *
 * @param {object|function} partialState Next partial state or function to
 *        produce next partial state to be merged with current state.
 * @param {?function} callback Called after state is updated.
 * @final
 * @protected
 */

Component.prototype.setState = function (partialState, callback) {
  if (!(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null)) {
    {
      throw Error( "setState(...): takes an object of state variables to update or a function which returns an object of state variables." );
    }
  }

  this.updater.enqueueSetState(this, partialState, callback, 'setState');
};
/**
 * Forces an update. This should only be invoked when it is known with
 * certainty that we are **not** in a DOM transaction.
 *
 * You may want to call this when you know that some deeper aspect of the
 * component's state has changed but `setState` was not called.
 *
 * This will not invoke `shouldComponentUpdate`, but it will invoke
 * `componentWillUpdate` and `componentDidUpdate`.
 *
 * @param {?function} callback Called after update is complete.
 * @final
 * @protected
 */


Component.prototype.forceUpdate = function (callback) {
  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
};
/**
 * Deprecated APIs. These APIs used to exist on classic React classes but since
 * we would like to deprecate them, we're not going to move them over to this
 * modern base class. Instead, we define a getter that warns if it's accessed.
 */


{
  var deprecatedAPIs = {
    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
  };

  var defineDeprecationWarning = function (methodName, info) {
    Object.defineProperty(Component.prototype, methodName, {
      get: function () {
        warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);

        return undefined;
      }
    });
  };

  for (var fnName in deprecatedAPIs) {
    if (deprecatedAPIs.hasOwnProperty(fnName)) {
      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    }
  }
}

function ComponentDummy() {}

ComponentDummy.prototype = Component.prototype;
/**
 * Convenience component with default shallow equality check for sCU.
 */

function PureComponent(props, context, updater) {
  this.props = props;
  this.context = context; // If a component has string refs, we will assign a different object later.

  this.refs = emptyObject;
  this.updater = updater || ReactNoopUpdateQueue;
}

var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
pureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.

_assign(pureComponentPrototype, Component.prototype);

pureComponentPrototype.isPureReactComponent = true;

// an immutable object with a single mutable value
function createRef() {
  var refObject = {
    current: null
  };

  {
    Object.seal(refObject);
  }

  return refObject;
}

var hasOwnProperty = Object.prototype.hasOwnProperty;
var RESERVED_PROPS = {
  key: true,
  ref: true,
  __self: true,
  __source: true
};
var specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;

{
  didWarnAboutStringRefs = {};
}

function hasValidRef(config) {
  {
    if (hasOwnProperty.call(config, 'ref')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;

      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }

  return config.ref !== undefined;
}

function hasValidKey(config) {
  {
    if (hasOwnProperty.call(config, 'key')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;

      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }

  return config.key !== undefined;
}

function defineKeyPropWarningGetter(props, displayName) {
  var warnAboutAccessingKey = function () {
    {
      if (!specialPropKeyWarningShown) {
        specialPropKeyWarningShown = true;

        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
      }
    }
  };

  warnAboutAccessingKey.isReactWarning = true;
  Object.defineProperty(props, 'key', {
    get: warnAboutAccessingKey,
    configurable: true
  });
}

function defineRefPropWarningGetter(props, displayName) {
  var warnAboutAccessingRef = function () {
    {
      if (!specialPropRefWarningShown) {
        specialPropRefWarningShown = true;

        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
      }
    }
  };

  warnAboutAccessingRef.isReactWarning = true;
  Object.defineProperty(props, 'ref', {
    get: warnAboutAccessingRef,
    configurable: true
  });
}

function warnIfStringRefCannotBeAutoConverted(config) {
  {
    if (typeof config.ref === 'string' && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {
      var componentName = getComponentName(ReactCurrentOwner.current.type);

      if (!didWarnAboutStringRefs[componentName]) {
        error('Component "%s" contains the string ref "%s". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://fb.me/react-strict-mode-string-ref', getComponentName(ReactCurrentOwner.current.type), config.ref);

        didWarnAboutStringRefs[componentName] = true;
      }
    }
  }
}
/**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, instanceof check
 * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} props
 * @param {*} key
 * @param {string|object} ref
 * @param {*} owner
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @internal
 */


var ReactElement = function (type, key, ref, self, source, owner, props) {
  var element = {
    // This tag allows us to uniquely identify this as a React Element
    $$typeof: REACT_ELEMENT_TYPE,
    // Built-in properties that belong on the element
    type: type,
    key: key,
    ref: ref,
    props: props,
    // Record the component responsible for creating this element.
    _owner: owner
  };

  {
    // The validation flag is currently mutative. We put it on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make
    // the validation flag non-enumerable (where possible, which should
    // include every environment we run tests in), so the test framework
    // ignores it.

    Object.defineProperty(element._store, 'validated', {
      configurable: false,
      enumerable: false,
      writable: true,
      value: false
    }); // self and source are DEV only properties.

    Object.defineProperty(element, '_self', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: self
    }); // Two elements created in two different places should be considered
    // equal for testing purposes and therefore we hide it from enumeration.

    Object.defineProperty(element, '_source', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: source
    });

    if (Object.freeze) {
      Object.freeze(element.props);
      Object.freeze(element);
    }
  }

  return element;
};
/**
 * Create and return a new ReactElement of the given type.
 * See https://reactjs.org/docs/react-api.html#createelement
 */

function createElement(type, config, children) {
  var propName; // Reserved names are extracted

  var props = {};
  var key = null;
  var ref = null;
  var self = null;
  var source = null;

  if (config != null) {
    if (hasValidRef(config)) {
      ref = config.ref;

      {
        warnIfStringRefCannotBeAutoConverted(config);
      }
    }

    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    self = config.__self === undefined ? null : config.__self;
    source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object

    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    }
  } // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.


  var childrenLength = arguments.length - 2;

  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);

    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }

    {
      if (Object.freeze) {
        Object.freeze(childArray);
      }
    }

    props.children = childArray;
  } // Resolve default props


  if (type && type.defaultProps) {
    var defaultProps = type.defaultProps;

    for (propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }
  }

  {
    if (key || ref) {
      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;

      if (key) {
        defineKeyPropWarningGetter(props, displayName);
      }

      if (ref) {
        defineRefPropWarningGetter(props, displayName);
      }
    }
  }

  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
}
function cloneAndReplaceKey(oldElement, newKey) {
  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
  return newElement;
}
/**
 * Clone and return a new ReactElement using element as the starting point.
 * See https://reactjs.org/docs/react-api.html#cloneelement
 */

function cloneElement(element, config, children) {
  if (!!(element === null || element === undefined)) {
    {
      throw Error( "React.cloneElement(...): The argument must be a React element, but you passed " + element + "." );
    }
  }

  var propName; // Original props are copied

  var props = _assign({}, element.props); // Reserved names are extracted


  var key = element.key;
  var ref = element.ref; // Self is preserved since the owner is preserved.

  var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a
  // transpiler, and the original source is probably a better indicator of the
  // true owner.

  var source = element._source; // Owner will be preserved, unless ref is overridden

  var owner = element._owner;

  if (config != null) {
    if (hasValidRef(config)) {
      // Silently steal the ref from the parent.
      ref = config.ref;
      owner = ReactCurrentOwner.current;
    }

    if (hasValidKey(config)) {
      key = '' + config.key;
    } // Remaining properties override existing props


    var defaultProps;

    if (element.type && element.type.defaultProps) {
      defaultProps = element.type.defaultProps;
    }

    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        if (config[propName] === undefined && defaultProps !== undefined) {
          // Resolve default props
          props[propName] = defaultProps[propName];
        } else {
          props[propName] = config[propName];
        }
      }
    }
  } // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.


  var childrenLength = arguments.length - 2;

  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);

    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }

    props.children = childArray;
  }

  return ReactElement(element.type, key, ref, self, source, owner, props);
}
/**
 * Verifies the object is a ReactElement.
 * See https://reactjs.org/docs/react-api.html#isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a ReactElement.
 * @final
 */

function isValidElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}

var SEPARATOR = '.';
var SUBSEPARATOR = ':';
/**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */

function escape(key) {
  var escapeRegex = /[=:]/g;
  var escaperLookup = {
    '=': '=0',
    ':': '=2'
  };
  var escapedString = ('' + key).replace(escapeRegex, function (match) {
    return escaperLookup[match];
  });
  return '$' + escapedString;
}
/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */


var didWarnAboutMaps = false;
var userProvidedKeyEscapeRegex = /\/+/g;

function escapeUserProvidedKey(text) {
  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
}

var POOL_SIZE = 10;
var traverseContextPool = [];

function getPooledTraverseContext(mapResult, keyPrefix, mapFunction, mapContext) {
  if (traverseContextPool.length) {
    var traverseContext = traverseContextPool.pop();
    traverseContext.result = mapResult;
    traverseContext.keyPrefix = keyPrefix;
    traverseContext.func = mapFunction;
    traverseContext.context = mapContext;
    traverseContext.count = 0;
    return traverseContext;
  } else {
    return {
      result: mapResult,
      keyPrefix: keyPrefix,
      func: mapFunction,
      context: mapContext,
      count: 0
    };
  }
}

function releaseTraverseContext(traverseContext) {
  traverseContext.result = null;
  traverseContext.keyPrefix = null;
  traverseContext.func = null;
  traverseContext.context = null;
  traverseContext.count = 0;

  if (traverseContextPool.length < POOL_SIZE) {
    traverseContextPool.push(traverseContext);
  }
}
/**
 * @param {?*} children Children tree container.
 * @param {!string} nameSoFar Name of the key path so far.
 * @param {!function} callback Callback to invoke with each child found.
 * @param {?*} traverseContext Used to pass information throughout the traversal
 * process.
 * @return {!number} The number of children in this subtree.
 */


function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  var invokeCallback = false;

  if (children === null) {
    invokeCallback = true;
  } else {
    switch (type) {
      case 'string':
      case 'number':
        invokeCallback = true;
        break;

      case 'object':
        switch (children.$$typeof) {
          case REACT_ELEMENT_TYPE:
          case REACT_PORTAL_TYPE:
            invokeCallback = true;
        }

    }
  }

  if (invokeCallback) {
    callback(traverseContext, children, // If it's the only child, treat the name as if it was wrapped in an array
    // so that it's consistent if the number of children grows.
    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
    return 1;
  }

  var child;
  var nextName;
  var subtreeCount = 0; // Count of children found in the current subtree.

  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getComponentKey(child, i);
      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
    }
  } else {
    var iteratorFn = getIteratorFn(children);

    if (typeof iteratorFn === 'function') {

      {
        // Warn about using Maps as children
        if (iteratorFn === children.entries) {
          if (!didWarnAboutMaps) {
            warn('Using Maps as children is deprecated and will be removed in ' + 'a future major release. Consider converting children to ' + 'an array of keyed ReactElements instead.');
          }

          didWarnAboutMaps = true;
        }
      }

      var iterator = iteratorFn.call(children);
      var step;
      var ii = 0;

      while (!(step = iterator.next()).done) {
        child = step.value;
        nextName = nextNamePrefix + getComponentKey(child, ii++);
        subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
      }
    } else if (type === 'object') {
      var addendum = '';

      {
        addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + ReactDebugCurrentFrame.getStackAddendum();
      }

      var childrenString = '' + children;

      {
        {
          throw Error( "Objects are not valid as a React child (found: " + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + ")." + addendum );
        }
      }
    }
  }

  return subtreeCount;
}
/**
 * Traverses children that are typically specified as `props.children`, but
 * might also be specified through attributes:
 *
 * - `traverseAllChildren(this.props.children, ...)`
 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
 *
 * The `traverseContext` is an optional argument that is passed through the
 * entire traversal. It can be used to store accumulations or anything else that
 * the callback might find relevant.
 *
 * @param {?*} children Children tree object.
 * @param {!function} callback To invoke upon traversing each child.
 * @param {?*} traverseContext Context for traversal.
 * @return {!number} The number of children in this subtree.
 */


function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', callback, traverseContext);
}
/**
 * Generate a key string that identifies a component within a set.
 *
 * @param {*} component A component that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */


function getComponentKey(component, index) {
  // Do some typechecking here since we call this blindly. We want to ensure
  // that we don't block potential future ES APIs.
  if (typeof component === 'object' && component !== null && component.key != null) {
    // Explicit key
    return escape(component.key);
  } // Implicit key determined by the index in the set


  return index.toString(36);
}

function forEachSingleChild(bookKeeping, child, name) {
  var func = bookKeeping.func,
      context = bookKeeping.context;
  func.call(context, child, bookKeeping.count++);
}
/**
 * Iterates through children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenforeach
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc
 * @param {*} forEachContext Context for forEachContext.
 */


function forEachChildren(children, forEachFunc, forEachContext) {
  if (children == null) {
    return children;
  }

  var traverseContext = getPooledTraverseContext(null, null, forEachFunc, forEachContext);
  traverseAllChildren(children, forEachSingleChild, traverseContext);
  releaseTraverseContext(traverseContext);
}

function mapSingleChildIntoContext(bookKeeping, child, childKey) {
  var result = bookKeeping.result,
      keyPrefix = bookKeeping.keyPrefix,
      func = bookKeeping.func,
      context = bookKeeping.context;
  var mappedChild = func.call(context, child, bookKeeping.count++);

  if (Array.isArray(mappedChild)) {
    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, function (c) {
      return c;
    });
  } else if (mappedChild != null) {
    if (isValidElement(mappedChild)) {
      mappedChild = cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as
      // traverseAllChildren used to do for objects as children
      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
    }

    result.push(mappedChild);
  }
}

function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
  var escapedPrefix = '';

  if (prefix != null) {
    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
  }

  var traverseContext = getPooledTraverseContext(array, escapedPrefix, func, context);
  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
  releaseTraverseContext(traverseContext);
}
/**
 * Maps children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenmap
 *
 * The provided mapFunction(child, key, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} func The map function.
 * @param {*} context Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */


function mapChildren(children, func, context) {
  if (children == null) {
    return children;
  }

  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
  return result;
}
/**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrencount
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */


function countChildren(children) {
  return traverseAllChildren(children, function () {
    return null;
  }, null);
}
/**
 * Flatten a children object (typically specified as `props.children`) and
 * return an array with appropriately re-keyed children.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrentoarray
 */


function toArray(children) {
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, function (child) {
    return child;
  });
  return result;
}
/**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenonly
 *
 * The current implementation of this function assumes that a single child gets
 * passed without a wrapper, but the purpose of this helper function is to
 * abstract away the particular structure of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactElement} The first and only `ReactElement` contained in the
 * structure.
 */


function onlyChild(children) {
  if (!isValidElement(children)) {
    {
      throw Error( "React.Children.only expected to receive a single React element child." );
    }
  }

  return children;
}

function createContext(defaultValue, calculateChangedBits) {
  if (calculateChangedBits === undefined) {
    calculateChangedBits = null;
  } else {
    {
      if (calculateChangedBits !== null && typeof calculateChangedBits !== 'function') {
        error('createContext: Expected the optional second argument to be a ' + 'function. Instead received: %s', calculateChangedBits);
      }
    }
  }

  var context = {
    $$typeof: REACT_CONTEXT_TYPE,
    _calculateChangedBits: calculateChangedBits,
    // As a workaround to support multiple concurrent renderers, we categorize
    // some renderers as primary and others as secondary. We only expect
    // there to be two concurrent renderers at most: React Native (primary) and
    // Fabric (secondary); React DOM (primary) and React ART (secondary).
    // Secondary renderers store their context values on separate fields.
    _currentValue: defaultValue,
    _currentValue2: defaultValue,
    // Used to track how many concurrent renderers this context currently
    // supports within in a single renderer. Such as parallel server rendering.
    _threadCount: 0,
    // These are circular
    Provider: null,
    Consumer: null
  };
  context.Provider = {
    $$typeof: REACT_PROVIDER_TYPE,
    _context: context
  };
  var hasWarnedAboutUsingNestedContextConsumers = false;
  var hasWarnedAboutUsingConsumerProvider = false;

  {
    // A separate object, but proxies back to the original context object for
    // backwards compatibility. It has a different $$typeof, so we can properly
    // warn for the incorrect usage of Context as a Consumer.
    var Consumer = {
      $$typeof: REACT_CONTEXT_TYPE,
      _context: context,
      _calculateChangedBits: context._calculateChangedBits
    }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here

    Object.defineProperties(Consumer, {
      Provider: {
        get: function () {
          if (!hasWarnedAboutUsingConsumerProvider) {
            hasWarnedAboutUsingConsumerProvider = true;

            error('Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');
          }

          return context.Provider;
        },
        set: function (_Provider) {
          context.Provider = _Provider;
        }
      },
      _currentValue: {
        get: function () {
          return context._currentValue;
        },
        set: function (_currentValue) {
          context._currentValue = _currentValue;
        }
      },
      _currentValue2: {
        get: function () {
          return context._currentValue2;
        },
        set: function (_currentValue2) {
          context._currentValue2 = _currentValue2;
        }
      },
      _threadCount: {
        get: function () {
          return context._threadCount;
        },
        set: function (_threadCount) {
          context._threadCount = _threadCount;
        }
      },
      Consumer: {
        get: function () {
          if (!hasWarnedAboutUsingNestedContextConsumers) {
            hasWarnedAboutUsingNestedContextConsumers = true;

            error('Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');
          }

          return context.Consumer;
        }
      }
    }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty

    context.Consumer = Consumer;
  }

  {
    context._currentRenderer = null;
    context._currentRenderer2 = null;
  }

  return context;
}

function lazy(ctor) {
  var lazyType = {
    $$typeof: REACT_LAZY_TYPE,
    _ctor: ctor,
    // React uses these fields to store the result.
    _status: -1,
    _result: null
  };

  {
    // In production, this would just set it on the object.
    var defaultProps;
    var propTypes;
    Object.defineProperties(lazyType, {
      defaultProps: {
        configurable: true,
        get: function () {
          return defaultProps;
        },
        set: function (newDefaultProps) {
          error('React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');

          defaultProps = newDefaultProps; // Match production behavior more closely:

          Object.defineProperty(lazyType, 'defaultProps', {
            enumerable: true
          });
        }
      },
      propTypes: {
        configurable: true,
        get: function () {
          return propTypes;
        },
        set: function (newPropTypes) {
          error('React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');

          propTypes = newPropTypes; // Match production behavior more closely:

          Object.defineProperty(lazyType, 'propTypes', {
            enumerable: true
          });
        }
      }
    });
  }

  return lazyType;
}

function forwardRef(render) {
  {
    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {
      error('forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');
    } else if (typeof render !== 'function') {
      error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);
    } else {
      if (render.length !== 0 && render.length !== 2) {
        error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');
      }
    }

    if (render != null) {
      if (render.defaultProps != null || render.propTypes != null) {
        error('forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?');
      }
    }
  }

  return {
    $$typeof: REACT_FORWARD_REF_TYPE,
    render: render
  };
}

function isValidElementType(type) {
  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
}

function memo(type, compare) {
  {
    if (!isValidElementType(type)) {
      error('memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);
    }
  }

  return {
    $$typeof: REACT_MEMO_TYPE,
    type: type,
    compare: compare === undefined ? null : compare
  };
}

function resolveDispatcher() {
  var dispatcher = ReactCurrentDispatcher.current;

  if (!(dispatcher !== null)) {
    {
      throw Error( "Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem." );
    }
  }

  return dispatcher;
}

function useContext(Context, unstable_observedBits) {
  var dispatcher = resolveDispatcher();

  {
    if (unstable_observedBits !== undefined) {
      error('useContext() second argument is reserved for future ' + 'use in React. Passing it is not supported. ' + 'You passed: %s.%s', unstable_observedBits, typeof unstable_observedBits === 'number' && Array.isArray(arguments[2]) ? '\n\nDid you call array.map(useContext)? ' + 'Calling Hooks inside a loop is not supported. ' + 'Learn more at https://fb.me/rules-of-hooks' : '');
    } // TODO: add a more generic warning for invalid values.


    if (Context._context !== undefined) {
      var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs
      // and nobody should be using this in existing code.

      if (realContext.Consumer === Context) {
        error('Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');
      } else if (realContext.Provider === Context) {
        error('Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');
      }
    }
  }

  return dispatcher.useContext(Context, unstable_observedBits);
}
function useState(initialState) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useState(initialState);
}
function useReducer(reducer, initialArg, init) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useReducer(reducer, initialArg, init);
}
function useRef(initialValue) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useRef(initialValue);
}
function useEffect(create, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useEffect(create, deps);
}
function useLayoutEffect(create, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useLayoutEffect(create, deps);
}
function useCallback(callback, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useCallback(callback, deps);
}
function useMemo(create, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useMemo(create, deps);
}
function useImperativeHandle(ref, create, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useImperativeHandle(ref, create, deps);
}
function useDebugValue(value, formatterFn) {
  {
    var dispatcher = resolveDispatcher();
    return dispatcher.useDebugValue(value, formatterFn);
  }
}

var propTypesMisspellWarningShown;

{
  propTypesMisspellWarningShown = false;
}

function getDeclarationErrorAddendum() {
  if (ReactCurrentOwner.current) {
    var name = getComponentName(ReactCurrentOwner.current.type);

    if (name) {
      return '\n\nCheck the render method of `' + name + '`.';
    }
  }

  return '';
}

function getSourceInfoErrorAddendum(source) {
  if (source !== undefined) {
    var fileName = source.fileName.replace(/^.*[\\\/]/, '');
    var lineNumber = source.lineNumber;
    return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
  }

  return '';
}

function getSourceInfoErrorAddendumForProps(elementProps) {
  if (elementProps !== null && elementProps !== undefined) {
    return getSourceInfoErrorAddendum(elementProps.__source);
  }

  return '';
}
/**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */


var ownerHasKeyUseWarning = {};

function getCurrentComponentErrorInfo(parentType) {
  var info = getDeclarationErrorAddendum();

  if (!info) {
    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;

    if (parentName) {
      info = "\n\nCheck the top-level render call using <" + parentName + ">.";
    }
  }

  return info;
}
/**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */


function validateExplicitKey(element, parentType) {
  if (!element._store || element._store.validated || element.key != null) {
    return;
  }

  element._store.validated = true;
  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);

  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
    return;
  }

  ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
  // property, it may be the creator of the child that's responsible for
  // assigning it a key.

  var childOwner = '';

  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
    // Give the component that originally created this child.
    childOwner = " It was passed a child from " + getComponentName(element._owner.type) + ".";
  }

  setCurrentlyValidatingElement(element);

  {
    error('Each child in a list should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.', currentComponentErrorInfo, childOwner);
  }

  setCurrentlyValidatingElement(null);
}
/**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */


function validateChildKeys(node, parentType) {
  if (typeof node !== 'object') {
    return;
  }

  if (Array.isArray(node)) {
    for (var i = 0; i < node.length; i++) {
      var child = node[i];

      if (isValidElement(child)) {
        validateExplicitKey(child, parentType);
      }
    }
  } else if (isValidElement(node)) {
    // This element was passed in a valid location.
    if (node._store) {
      node._store.validated = true;
    }
  } else if (node) {
    var iteratorFn = getIteratorFn(node);

    if (typeof iteratorFn === 'function') {
      // Entry iterators used to provide implicit keys,
      // but now we print a separate warning for them later.
      if (iteratorFn !== node.entries) {
        var iterator = iteratorFn.call(node);
        var step;

        while (!(step = iterator.next()).done) {
          if (isValidElement(step.value)) {
            validateExplicitKey(step.value, parentType);
          }
        }
      }
    }
  }
}
/**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */


function validatePropTypes(element) {
  {
    var type = element.type;

    if (type === null || type === undefined || typeof type === 'string') {
      return;
    }

    var name = getComponentName(type);
    var propTypes;

    if (typeof type === 'function') {
      propTypes = type.propTypes;
    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
    // Inner props are checked in the reconciler.
    type.$$typeof === REACT_MEMO_TYPE)) {
      propTypes = type.propTypes;
    } else {
      return;
    }

    if (propTypes) {
      setCurrentlyValidatingElement(element);
      checkPropTypes(propTypes, element.props, 'prop', name, ReactDebugCurrentFrame.getStackAddendum);
      setCurrentlyValidatingElement(null);
    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
      propTypesMisspellWarningShown = true;

      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', name || 'Unknown');
    }

    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {
      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');
    }
  }
}
/**
 * Given a fragment, validate that it can only be provided with fragment props
 * @param {ReactElement} fragment
 */


function validateFragmentProps(fragment) {
  {
    setCurrentlyValidatingElement(fragment);
    var keys = Object.keys(fragment.props);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];

      if (key !== 'children' && key !== 'key') {
        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);

        break;
      }
    }

    if (fragment.ref !== null) {
      error('Invalid attribute `ref` supplied to `React.Fragment`.');
    }

    setCurrentlyValidatingElement(null);
  }
}
function createElementWithValidation(type, props, children) {
  var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
  // succeed and there will likely be errors in render.

  if (!validType) {
    var info = '';

    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
      info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
    }

    var sourceInfo = getSourceInfoErrorAddendumForProps(props);

    if (sourceInfo) {
      info += sourceInfo;
    } else {
      info += getDeclarationErrorAddendum();
    }

    var typeString;

    if (type === null) {
      typeString = 'null';
    } else if (Array.isArray(type)) {
      typeString = 'array';
    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
      typeString = "<" + (getComponentName(type.type) || 'Unknown') + " />";
      info = ' Did you accidentally export a JSX literal instead of a component?';
    } else {
      typeString = typeof type;
    }

    {
      error('React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
    }
  }

  var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.
  // TODO: Drop this when these are no longer allowed as the type argument.

  if (element == null) {
    return element;
  } // Skip key warning if the type isn't valid since our key validation logic
  // doesn't expect a non-string/function type and can throw confusing errors.
  // We don't want exception behavior to differ between dev and prod.
  // (Rendering will throw with a helpful message and as soon as the type is
  // fixed, the key warnings will appear.)


  if (validType) {
    for (var i = 2; i < arguments.length; i++) {
      validateChildKeys(arguments[i], type);
    }
  }

  if (type === REACT_FRAGMENT_TYPE) {
    validateFragmentProps(element);
  } else {
    validatePropTypes(element);
  }

  return element;
}
var didWarnAboutDeprecatedCreateFactory = false;
function createFactoryWithValidation(type) {
  var validatedFactory = createElementWithValidation.bind(null, type);
  validatedFactory.type = type;

  {
    if (!didWarnAboutDeprecatedCreateFactory) {
      didWarnAboutDeprecatedCreateFactory = true;

      warn('React.createFactory() is deprecated and will be removed in ' + 'a future major release. Consider using JSX ' + 'or use React.createElement() directly instead.');
    } // Legacy hook: remove it


    Object.defineProperty(validatedFactory, 'type', {
      enumerable: false,
      get: function () {
        warn('Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');

        Object.defineProperty(this, 'type', {
          value: type
        });
        return type;
      }
    });
  }

  return validatedFactory;
}
function cloneElementWithValidation(element, props, children) {
  var newElement = cloneElement.apply(this, arguments);

  for (var i = 2; i < arguments.length; i++) {
    validateChildKeys(arguments[i], newElement.type);
  }

  validatePropTypes(newElement);
  return newElement;
}

{

  try {
    var frozenObject = Object.freeze({});
    var testMap = new Map([[frozenObject, null]]);
    var testSet = new Set([frozenObject]); // This is necessary for Rollup to not consider these unused.
    // https://github.com/rollup/rollup/issues/1771
    // TODO: we can remove these if Rollup fixes the bug.

    testMap.set(0, 0);
    testSet.add(0);
  } catch (e) {
  }
}

var createElement$1 =  createElementWithValidation ;
var cloneElement$1 =  cloneElementWithValidation ;
var createFactory =  createFactoryWithValidation ;
var Children = {
  map: mapChildren,
  forEach: forEachChildren,
  count: countChildren,
  toArray: toArray,
  only: onlyChild
};

exports.Children = Children;
exports.Component = Component;
exports.Fragment = REACT_FRAGMENT_TYPE;
exports.Profiler = REACT_PROFILER_TYPE;
exports.PureComponent = PureComponent;
exports.StrictMode = REACT_STRICT_MODE_TYPE;
exports.Suspense = REACT_SUSPENSE_TYPE;
exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;
exports.cloneElement = cloneElement$1;
exports.createContext = createContext;
exports.createElement = createElement$1;
exports.createFactory = createFactory;
exports.createRef = createRef;
exports.forwardRef = forwardRef;
exports.isValidElement = isValidElement;
exports.lazy = lazy;
exports.memo = memo;
exports.useCallback = useCallback;
exports.useContext = useContext;
exports.useDebugValue = useDebugValue;
exports.useEffect = useEffect;
exports.useImperativeHandle = useImperativeHandle;
exports.useLayoutEffect = useLayoutEffect;
exports.useMemo = useMemo;
exports.useReducer = useReducer;
exports.useRef = useRef;
exports.useState = useState;
exports.version = ReactVersion;
  })();
}


/***/ }),

/***/ "./node_modules/react/index.js":
/*!*************************************!*\
  !*** ./node_modules/react/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/react.development.js */ "./node_modules/react/cjs/react.development.js");
}


/***/ }),

/***/ "./node_modules/regenerator-runtime/runtime.js":
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var runtime = (function (exports) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  function define(obj, key, value) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
    return obj[key];
  }
  try {
    // IE 8 has a broken Object.defineProperty that only works on DOM objects.
    define({}, "");
  } catch (err) {
    define = function(obj, key, value) {
      return obj[key] = value;
    };
  }

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  exports.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunction.displayName = define(
    GeneratorFunctionPrototype,
    toStringTagSymbol,
    "GeneratorFunction"
  );

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      define(prototype, method, function(arg) {
        return this._invoke(method, arg);
      });
    });
  }

  exports.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  exports.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      define(genFun, toStringTagSymbol, "GeneratorFunction");
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  exports.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return PromiseImpl.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return PromiseImpl.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function(error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new PromiseImpl(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  exports.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    if (PromiseImpl === void 0) PromiseImpl = Promise;

    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList),
      PromiseImpl
    );

    return exports.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        // Note: ["return"] must be used for ES3 parsing compatibility.
        if (delegate.iterator["return"]) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  define(Gp, toStringTagSymbol, "Generator");

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  Gp[iteratorSymbol] = function() {
    return this;
  };

  Gp.toString = function() {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  exports.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  exports.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };

  // Regardless of whether this script is executing as a CommonJS module
  // or not, return the runtime object so that we can declare the variable
  // regeneratorRuntime in the outer scope, which allows this module to be
  // injected easily by `bin/regenerator --include-runtime script.js`.
  return exports;

}(
  // If this script is executing as a CommonJS module, use module.exports
  // as the regeneratorRuntime namespace. Otherwise create a new empty
  // object. Either way, the resulting object will be used to initialize
  // the regeneratorRuntime variable at the top of this file.
   true ? module.exports : undefined
));

try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  // This module should not be running in strict mode, so the above
  // assignment should always work unless something is misconfigured. Just
  // in case runtime.js accidentally runs in strict mode, we can escape
  // strict mode using a global Function call. This could conceivably fail
  // if a Content Security Policy forbids using Function, but in that case
  // the proper solution is to fix the accidental strict mode problem. If
  // you've misconfigured your bundler to force strict mode and applied a
  // CSP to forbid Function, and you're not willing to fix either of those
  // problems, please detail your unique predicament in a GitHub issue.
  Function("r", "regeneratorRuntime = r")(runtime);
}


/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var isOldIE = function isOldIE() {
  var memo;
  return function memorize() {
    if (typeof memo === 'undefined') {
      // Test for IE <= 9 as proposed by Browserhacks
      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
      // Tests for existence of standard globals is to allow style-loader
      // to operate correctly into non-standard environments
      // @see https://github.com/webpack-contrib/style-loader/issues/177
      memo = Boolean(window && document && document.all && !window.atob);
    }

    return memo;
  };
}();

var getTarget = function getTarget() {
  var memo = {};
  return function memorize(target) {
    if (typeof memo[target] === 'undefined') {
      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself

      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
        try {
          // This will throw an exception if access to iframe is blocked
          // due to cross-origin restrictions
          styleTarget = styleTarget.contentDocument.head;
        } catch (e) {
          // istanbul ignore next
          styleTarget = null;
        }
      }

      memo[target] = styleTarget;
    }

    return memo[target];
  };
}();

var stylesInDom = [];

function getIndexByIdentifier(identifier) {
  var result = -1;

  for (var i = 0; i < stylesInDom.length; i++) {
    if (stylesInDom[i].identifier === identifier) {
      result = i;
      break;
    }
  }

  return result;
}

function modulesToDom(list, options) {
  var idCountMap = {};
  var identifiers = [];

  for (var i = 0; i < list.length; i++) {
    var item = list[i];
    var id = options.base ? item[0] + options.base : item[0];
    var count = idCountMap[id] || 0;
    var identifier = "".concat(id, " ").concat(count);
    idCountMap[id] = count + 1;
    var index = getIndexByIdentifier(identifier);
    var obj = {
      css: item[1],
      media: item[2],
      sourceMap: item[3]
    };

    if (index !== -1) {
      stylesInDom[index].references++;
      stylesInDom[index].updater(obj);
    } else {
      stylesInDom.push({
        identifier: identifier,
        updater: addStyle(obj, options),
        references: 1
      });
    }

    identifiers.push(identifier);
  }

  return identifiers;
}

function insertStyleElement(options) {
  var style = document.createElement('style');
  var attributes = options.attributes || {};

  if (typeof attributes.nonce === 'undefined') {
    var nonce =  true ? __webpack_require__.nc : undefined;

    if (nonce) {
      attributes.nonce = nonce;
    }
  }

  Object.keys(attributes).forEach(function (key) {
    style.setAttribute(key, attributes[key]);
  });

  if (typeof options.insert === 'function') {
    options.insert(style);
  } else {
    var target = getTarget(options.insert || 'head');

    if (!target) {
      throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
    }

    target.appendChild(style);
  }

  return style;
}

function removeStyleElement(style) {
  // istanbul ignore if
  if (style.parentNode === null) {
    return false;
  }

  style.parentNode.removeChild(style);
}
/* istanbul ignore next  */


var replaceText = function replaceText() {
  var textStore = [];
  return function replace(index, replacement) {
    textStore[index] = replacement;
    return textStore.filter(Boolean).join('\n');
  };
}();

function applyToSingletonTag(style, index, remove, obj) {
  var css = remove ? '' : obj.media ? "@media ".concat(obj.media, " {").concat(obj.css, "}") : obj.css; // For old IE

  /* istanbul ignore if  */

  if (style.styleSheet) {
    style.styleSheet.cssText = replaceText(index, css);
  } else {
    var cssNode = document.createTextNode(css);
    var childNodes = style.childNodes;

    if (childNodes[index]) {
      style.removeChild(childNodes[index]);
    }

    if (childNodes.length) {
      style.insertBefore(cssNode, childNodes[index]);
    } else {
      style.appendChild(cssNode);
    }
  }
}

function applyToTag(style, options, obj) {
  var css = obj.css;
  var media = obj.media;
  var sourceMap = obj.sourceMap;

  if (media) {
    style.setAttribute('media', media);
  } else {
    style.removeAttribute('media');
  }

  if (sourceMap && btoa) {
    css += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");
  } // For old IE

  /* istanbul ignore if  */


  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    while (style.firstChild) {
      style.removeChild(style.firstChild);
    }

    style.appendChild(document.createTextNode(css));
  }
}

var singleton = null;
var singletonCounter = 0;

function addStyle(obj, options) {
  var style;
  var update;
  var remove;

  if (options.singleton) {
    var styleIndex = singletonCounter++;
    style = singleton || (singleton = insertStyleElement(options));
    update = applyToSingletonTag.bind(null, style, styleIndex, false);
    remove = applyToSingletonTag.bind(null, style, styleIndex, true);
  } else {
    style = insertStyleElement(options);
    update = applyToTag.bind(null, style, options);

    remove = function remove() {
      removeStyleElement(style);
    };
  }

  update(obj);
  return function updateStyle(newObj) {
    if (newObj) {
      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {
        return;
      }

      update(obj = newObj);
    } else {
      remove();
    }
  };
}

module.exports = function (list, options) {
  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
  // tags it will allow on a page

  if (!options.singleton && typeof options.singleton !== 'boolean') {
    options.singleton = isOldIE();
  }

  list = list || [];
  var lastIdentifiers = modulesToDom(list, options);
  return function update(newList) {
    newList = newList || [];

    if (Object.prototype.toString.call(newList) !== '[object Array]') {
      return;
    }

    for (var i = 0; i < lastIdentifiers.length; i++) {
      var identifier = lastIdentifiers[i];
      var index = getIndexByIdentifier(identifier);
      stylesInDom[index].references--;
    }

    var newLastIdentifiers = modulesToDom(newList, options);

    for (var _i = 0; _i < lastIdentifiers.length; _i++) {
      var _identifier = lastIdentifiers[_i];

      var _index = getIndexByIdentifier(_identifier);

      if (stylesInDom[_index].references === 0) {
        stylesInDom[_index].updater();

        stylesInDom.splice(_index, 1);
      }
    }

    lastIdentifiers = newLastIdentifiers;
  };
};

/***/ }),

/***/ "./node_modules/webpack/buildin/harmony-module.js":
/*!*******************************************!*\
  !*** (webpack)/buildin/harmony-module.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function(originalModule) {
	if (!originalModule.webpackPolyfill) {
		var module = Object.create(originalModule);
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		Object.defineProperty(module, "exports", {
			enumerable: true
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function(module) {
	if (!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),

/***/ "./src/pages/_app.js":
/*!***************************!*\
  !*** ./src/pages/_app.js ***!
  \***************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ "./node_modules/@babel/runtime/helpers/esm/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/asyncToGenerator */ "./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js");
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _styles_styles_scss__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../styles/styles.scss */ "./src/styles/styles.scss");
/* harmony import */ var _styles_styles_scss__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_styles_styles_scss__WEBPACK_IMPORTED_MODULE_5__);




var _jsxFileName = "C:\\Users\\WhiteCanZE\\Desktop\\whitecanze.github.io\\src\\pages\\_app.js";

var __jsx = react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }



function MyApp(_ref) {
  var Component = _ref.Component,
      pageProps = _ref.pageProps;
  return __jsx(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, __jsx(Component, Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_3__["default"])({}, pageProps, {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 5,
      columnNumber: 7
    }
  })));
}

_c = MyApp;

MyApp.getServerSideProps = /*#__PURE__*/function () {
  var _ref2 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__["default"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(appContext) {
    var appProps;
    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return App.getServerSideProps(appContext);

          case 2:
            appProps = _context.sent;
            return _context.abrupt("return", _objectSpread({}, appProps));

          case 4:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function (_x) {
    return _ref2.apply(this, arguments);
  };
}();

/* harmony default export */ __webpack_exports__["default"] = (MyApp);

var _c;

$RefreshReg$(_c, "MyApp");

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/harmony-module.js */ "./node_modules/webpack/buildin/harmony-module.js")(module)))

/***/ }),

/***/ "./src/styles/styles.scss":
/*!********************************!*\
  !*** ./src/styles/styles.scss ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var api = __webpack_require__(/*! ../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
            var content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-6-1!../../node_modules/next/dist/compiled/postcss-loader??__nextjs_postcss!../../node_modules/resolve-url-loader??ref--5-oneOf-6-3!../../node_modules/sass-loader/dist/cjs.js??ref--5-oneOf-6-4!./styles.scss */ "./node_modules/css-loader/dist/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/index.js?!./node_modules/resolve-url-loader/index.js?!./node_modules/sass-loader/dist/cjs.js?!./src/styles/styles.scss");

            content = content.__esModule ? content.default : content;

            if (typeof content === 'string') {
              content = [[module.i, content, '']];
            }

var options = {};

options.insert = function(element){// These elements should always exist. If they do not,
// this code should fail.
var anchorElement=document.querySelector('#__next_css__DO_NOT_USE__');var parentNode=anchorElement.parentNode;// Normally <head>
// Each style tag should be placed right before our
// anchor. By inserting before and not after, we do not
// need to track the last inserted element.
parentNode.insertBefore(element,anchorElement);};
options.singleton = false;

var update = api(content, options);


if (true) {
  if (!content.locals || module.hot.invalidate) {
    var isEqualLocals = function isEqualLocals(a, b) {
  if (!a && b || a && !b) {
    return false;
  }

  var p;

  for (p in a) {
    if (a[p] !== b[p]) {
      return false;
    }
  }

  for (p in b) {
    if (!a[p]) {
      return false;
    }
  }

  return true;
};
    var oldLocals = content.locals;

    module.hot.accept(
      /*! !../../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-6-1!../../node_modules/next/dist/compiled/postcss-loader??__nextjs_postcss!../../node_modules/resolve-url-loader??ref--5-oneOf-6-3!../../node_modules/sass-loader/dist/cjs.js??ref--5-oneOf-6-4!./styles.scss */ "./node_modules/css-loader/dist/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/index.js?!./node_modules/resolve-url-loader/index.js?!./node_modules/sass-loader/dist/cjs.js?!./src/styles/styles.scss",
      function () {
        content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-6-1!../../node_modules/next/dist/compiled/postcss-loader??__nextjs_postcss!../../node_modules/resolve-url-loader??ref--5-oneOf-6-3!../../node_modules/sass-loader/dist/cjs.js??ref--5-oneOf-6-4!./styles.scss */ "./node_modules/css-loader/dist/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/index.js?!./node_modules/resolve-url-loader/index.js?!./node_modules/sass-loader/dist/cjs.js?!./src/styles/styles.scss");

              content = content.__esModule ? content.default : content;

              if (typeof content === 'string') {
                content = [[module.i, content, '']];
              }

              if (!isEqualLocals(oldLocals, content.locals)) {
                module.hot.invalidate();

                return;
              }

              oldLocals = content.locals;

              update(content);
      }
    )
  }

  module.hot.dispose(function() {
    update();
  });
}

module.exports = content.locals || {};

/***/ }),

/***/ 0:
/*!*******************************************************************************************************************************************!*\
  !*** multi next-client-pages-loader?page=%2F_app&absolutePagePath=private-next-pages%2F_app.js ./node_modules/next/dist/client/router.js ***!
  \*******************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! next-client-pages-loader?page=%2F_app&absolutePagePath=private-next-pages%2F_app.js! */"./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app.js!./");
module.exports = __webpack_require__(/*! C:\Users\WhiteCanZE\Desktop\whitecanze.github.io\node_modules\next\dist\client\router.js */"./node_modules/next/dist/client/router.js");


/***/ })

},[[0,"webpack"]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,